--- Log opened Tue Jan 07 00:00:26 2014
09:13 < Tar-Minyatur:#liferay> What the...something is totally messing with me right now.
09:13 < Tar-Minyatur:#liferay> I add a web content display to a page, then I select a web content to be shown.
09:14 < Tar-Minyatur:#liferay> The rendered output looks completely wrong.
09:14 -!- mode/#liferay [+o jhf] by ChanServ
09:14 < Tar-Minyatur:#liferay> Another template is used for it. When I directly click "Edit Template" on the Web Content View, the right template is shown.
09:14 < Tar-Minyatur:#liferay> What the...?!
09:17 < jardineworks:#liferay> Tar-Minyatur, are you sure that your request is being routed to the same server? going on what Olaf said yesterday --- maybe the display is your busted cluster box and the admin is the working one?
09:18 < jardineworks:#liferay> hey jhf could you help me trouble shoot some friendly url issues? I'm sure that I am doing something super simple wrong but I can't for the life of me (after a day of trying) figure out what it is
09:20 <@jhf:#liferay> sure! but I warn you ahead of time I don't know how friendlyUrls work internally
09:20 < jardineworks:#liferay> MAKES TWO OF US
09:21 < jardineworks:#liferay> lol
09:21 < jardineworks:#liferay> here is what I understand.
09:21 < jardineworks:#liferay> 1. I get that you configure the class that is used to generate them and that you give it a file with the definitions.
09:22 < jardineworks:#liferay> 2. Then I _THINK_ (would love for someone to confirm) it matches the route to use based on the parameters in the request vs. the ones defined in the <route/> configuration
09:23 <@jhf:#liferay> aren't friendlyUrls configured via the GUI? where do you place this friendlyUrl definition file?
09:23 < jardineworks:#liferay> 3. By default, all the implicit ones are handled on your behalf -- seen in one of the classes
09:24 < jardineworks:#liferay> jhf, liferay-portlet.xml -- you can specify friendly urls for your plugins
09:24 <@jhf:#liferay> ah
09:24 <@jhf:#liferay> ok. was not aware of this :)
09:25 < jardineworks:#liferay> so for example, my pagination ... istead of .....?p_p_id=...&p_p_lifecyle=0&....page=2&pagesize=10 ... I can have /view/page/2
09:25 < jardineworks:#liferay> awesome... how about you let me teach you what I know so far and then maybe you can help me figure out what I am doing wrong.
09:25 < jardineworks:#liferay> :)
09:27 < jardineworks:#liferay> if you have a plugin handy, add these lines to the liferay-portlet.xml (under the <icon/> tag)
09:27 < Tar-Minyatur:#liferay> jardineworks: I'm accessing the box directly at the moment. No routing involved. It's really confusing. I feel like I'm losing my mind.
09:28 < jardineworks:#liferay> jhf, http://pastebin.com/jxytXVQ0
09:28 < jardineworks:#liferay> jhf,  adjeusting for your package of course.
09:28 < Tar-Minyatur:#liferay> I'll tackle this again later. No clue what's going on there.
09:29 < jardineworks:#liferay> the http://localhost:8080/this/is/my/page/-/[friendly-url--mapping]
09:29 < jardineworks:#liferay> is what that will do ... and it should automagically remove all the portlet garbage in the url. Well, not garbage to liferay developers, but garbage to the rest of the world.
09:29 < jardineworks:#liferay> Tar-Minyatur, is all the cache complete disabled?
09:31 <@jhf:#liferay> jardineworks: so what happens? what are you doing that makes you think it's not working?
09:31 <@jhf:#liferay> is it simply not working? or halfway working? or just not working as expected?
09:31 < jardineworks:#liferay> jhf, half I think?
09:32 < jardineworks:#liferay> jhf, the issue I am facing is that I need to have multiple route definitions... but it doesn't seem to be picking them up properly and I can't figure out why.
09:32 <@jhf:#liferay> does it pick up any of them properly?
09:33 < jardineworks:#liferay> jhf, One of the im particular is driving me bonkers. A pagination link .. it picks up page/X ... and then I apply a filter which should map /[filter]/page/X ... and it keeps mapping page/X/?filter=whatever.
09:33 < jardineworks:#liferay> the filter is added to the url using the copyCurrentRenderParameters="yes" which is maybe the  issue?
09:34 < jardineworks:#liferay> because it is added after the friendly url is built? could that be it? lol
09:35 <@jhf:#liferay> ok you'll hate me for this, but.. what do you mean "it picks up page/X" ? what are you typing into the address field of your browser, or what link are you clicking on?
09:36 <@jhf:#liferay> i have never ever configured friendlyUrls so I am reading documentation as I type this :)
09:36 < jardineworks:#liferay> jfh, sorry -- I'm all over the place because this is driving me bananas. I can show you maybe?
09:36 <@jhf:#liferay> but perhaps my stupid n00b questions might trigger an "aha!" moment in your head
09:36 < jardineworks:#liferay> might be easier than trying to explain here with just words
09:37 <@jhf:#liferay> k
09:58 -!- mode/#liferay [+o rotty3000] by ChanServ
11:03 < jardineworks:#liferay> rotty3000, can I ask you a question about friendly url mapping? I'm sure that I am missing some simple but I just can't get it to work
11:16 < jardineworks:#liferay> topolik, do you know how the route for a friendly url is decided?
11:17 < jardineworks:#liferay> I thought it was based on the parameters in the url but i just can't get it to work
11:22 < topolik:#liferay> jardineworks: I'm not sure, I guess it's based on the URL pattern in the XML definition
11:23 < jardineworks:#liferay> topolik, I think the issue for me is that the parameters specified in the route are not actually being passed. Do you know which kind of parameters I should be using? I assumed it was ignored-parameter(s)
11:24 < topolik:#liferay> I guess it's following:
11:24 < topolik:#liferay> first are parameters in the url
11:25 < topolik:#liferay> they can be replaced by overridden-parameter
11:25 < topolik:#liferay> + there should be all the implicit-parameter
11:26 < topolik:#liferay> reading the doc I think ignored parameters are not used when parsing URL and generating the parameter map
11:26 < jardineworks:#liferay> topolik, I am using the DefaultFriendlyuRLMapper... basically, my user is submitting  a form with a field value (call it filter=gluten-free)
11:27 < topolik:#liferay> ok
11:27 < jardineworks:#liferay> I want the resulting url to show /filter/gluten-free ... so I defined a route with a pattern /filter/{filter}
11:27 < topolik:#liferay> uhm, I'm not sure it works like this
11:27 < jardineworks:#liferay> but no matter what I do, it ALWAYS picks up the default one
11:27 < topolik:#liferay> first, you send form data
11:27 < topolik:#liferay> that (I guess) means POST request
11:28 < topolik:#liferay> => the filter parameter is sent in HTTP body, not in URL
11:28 < jardineworks:#liferay> yes -- but maybe I make it a GET
11:29 < topolik:#liferay> if you are able to transfer the form into HTTP GET and include that parameter in the URL, then I think it should work
11:29 < topolik:#liferay> *transfer = transform
11:29 < jardineworks:#liferay> ok one sec
11:30 < topolik:#liferay> and I think the parameter must be in the URL file name, not as param, as you wrote: /filter/gluten-free
11:32 < jardineworks:#liferay> here is the url -- http://localhost:8080/web/guest/healthy-living-resources/-/article/filter?articleTagCheckbox=Education&articleTagCheckbox=Gluten-Free
11:32 < jardineworks:#liferay> here is my route -- 	<route>
11:32 < jardineworks:#liferay> 		<pattern>/filter/{articleTagCheckbox}</pattern>
11:32 < jardineworks:#liferay> 		<ignored-parameter name="articleTagCheckbox"/>
11:32 < jardineworks:#liferay> 	</route>	
11:33 < jardineworks:#liferay> but it keeps giving me the same url with a query string
11:33 < jardineworks:#liferay> which means I think that it is matching a separate route in the file...
11:34 < jardineworks:#liferay> this one --
11:34 < jardineworks:#liferay> 	<route>
11:34 < jardineworks:#liferay> 		<pattern>/filter</pattern>
11:34 < jardineworks:#liferay> 	</route>
11:34 < topolik:#liferay> I guess this most general rule is the last one in the XML file, is it?
11:35 < jardineworks:#liferay> first
11:35 < jardineworks:#liferay> and I just remvoed it to see
11:35 < jardineworks:#liferay> and now I get --
11:35 < jardineworks:#liferay> http://localhost:8080/web/guest/healthy-living-resources?articleTagCheckbox=Gluten-Free
11:35 < jardineworks:#liferay> @#!$%
11:38 < topolik:#liferay> you should put the most general rules as last
11:40 < jardineworks:#liferay> oh ok
11:40 < topolik:#liferay> send that most general rule (/filter) down and try http://localhost:8080/web/guest/healthy-living-resources/-/article/filter/Gluten-Free
11:41 < topolik:#liferay> btw. I saw that you have articleTagCheckbox parameter in the URL above twice?!
11:41 < jardineworks:#liferay> topolik, that's because the filters are an array of values.
11:42 < topolik:#liferay> and also I'm not sure that ignoring that parameter in the XML config is OK when you create URLs with this parameters
11:42 < topolik:#liferay> array?
11:42 < topolik:#liferay> hmm, how to put it into URL
11:42 < jardineworks:#liferay> ok -- but then which type of parameter should I be using?
11:43 < jardineworks:#liferay> re-ordered and tried that link -- no luck. :(
11:53 < jardineworks:#liferay> topolik, i'm not even sure where to look anymore. I mean, I've followed a hundred examples. I've tried so many permutatins that I have lost track. I feel like I am doing it right based on the information out there, but I just can;t get it to go.
