--- Log opened Fri Nov 22 00:00:22 2013
03:42 < guli:#liferay> topolik : are you here?
04:06 < topolik:#liferay> hi guli, good, thanks you?
04:08 < guli:#liferay> topolik: good thanks :)
04:08 < guli:#liferay> i progress on my issue
04:09 < guli:#liferay> topolik: i've found that the local cache was a first issue :) disabling the local cache works in the common case.
04:10 < guli:#liferay> topolik: have you any idea of the effect of disabling local cache?
04:12 < topolik:#liferay> things will go slower for the entity you disabled
04:14 < guli:#liferay> i disabled all local cache
04:14 < guli:#liferay> but the portal cache is still active
04:14 < guli:#liferay> topolik: i will make test in the future on this point.
04:14 < guli:#liferay> topolik: but the issue is not fully fixed ....
04:15 < guli:#liferay> topolik: the original use case was when an user accept a socialrequest using the requests portlet.
04:15 < guli:#liferay> and in this case the transaction is not used.... my service fail after doing some change and the changes are saved to DB
04:26 < guli:#liferay> if think that it's caused by the fact that in socialrequestinterpreter you need to use *ServiceUtil and that the processConfirmation() method of the interpreter is called into a service
04:27 < guli:#liferay> but i don't know how to do this in an other way....
04:36 < topolik:#liferay> guli?
04:45 < guli:#liferay> topolik: so i discover that socialrequestinterpreter seems to have been removed from Liferay...
04:46 < topolik:#liferay> guli: I'm sorry I don't know this part of Liferay
04:47 < guli:#liferay> topolik: do you who i can contact?
04:48 < topolik:#liferay> hmm, I can see socialrequestinterpreter in the latest master
04:48 < guli:#liferay> yes i just see too
04:48 < guli:#liferay> i tell that because in 6.1 in contacts-portlet (liferay-plugin) request are handled using socialrequestinterpreter
04:49 < topolik:#liferay> and the transaction - you save your entitity together with portal entity in one transaction?
04:49 < guli:#liferay> and now in master it use BaseUserNotificationHandler that create accept and ignore portlet URL to the portlet
04:50 < guli:#liferay> topolik: yes it works, i build a little project that calls my service from a controller and it works as expected.
04:50 < topolik:#liferay> uhm, interesting
04:50 < topolik:#liferay> I know it didn't work in 6.0
04:51 < topolik:#liferay> because both transactions were separate, because hibernate sessions were separate
04:52 < topolik:#liferay> some of our architect in previous job tried that and he succeed using some artificial transaction in spring which held both transactions
04:52 < topolik:#liferay> but this may be already fixed
04:53 < guli:#liferay> it works good in 6.1
04:53 < topolik:#liferay> only the cache
04:54 < guli:#liferay> yep it works good except for the local cache that is not transactional
04:54 < guli:#liferay> the portal cache is transactional
05:03 < guli:#liferay> topolik: i see that a notification-portlet has been creted in liferay-plugin...
05:11 < lapache_:#liferay> Hello, is there an automatic way for upgrade liferay/tomcat bundle ?
05:13 < topolik:#liferay> https://www.liferay.com/documentation/liferay-portal/6.1/user-guide/-/ai/upgrading-lifer-5 or https://www.liferay.com/documentation/liferay-portal/6.2/user-guide/-/ai/upgrading-liferay-liferay-portal-6-2-user-guide-18-en
05:46 < Axxell:#liferay> hey guys
05:47 < Axxell:#liferay> I was under the impression that liferay 6.2 used bootstrap 3, now that ive looked at makin themes with it, it seems to be bootstrap 2.32
05:48 < Axxell:#liferay> are there any plans that you know of, to change that? The changes of the names of the css classes are probably break the thing if i try to use my bootstrap 3 mockup modell?
08:53 < Tar-Minyatur:#liferay> Liferay is driving me insane...
08:54 < jardineworks:#liferay> Tar-Minyatur, that means you are using it properly :)
08:54 < Tar-Minyatur:#liferay> Ok. Imagine this: On our old Liferay 6.1.0 we had several page, which loaded content via AJAX from /c/journal/view_article_content?cmd=preview... Now we migrated to 6.1.2 and all of a sudden these articles don't work anymore.
08:55 < Tar-Minyatur:#liferay> I tracked it down to the fact that apparently "cmd=preview" is not supported in 6.1.2.
08:56 < Tar-Minyatur:#liferay> I considered rewriting the URLs to cmd=view, because then it works. BUT it turns out that they used the preview link, because they didn't find a way to publish the articles that are loaded via AJAX.
08:56 < Tar-Minyatur:#liferay> So when I rewrite the URLs now, the articles show outdated content.
08:57 < Tar-Minyatur:#liferay> The question now is: Can I find a different approach to load staged web content articles via a specific URL or is there some way to publish a bunch of articles that are not used on any page?
08:57 < jardineworks:#liferay> you mean the preview shows outdated content?
08:57 < Tar-Minyatur:#liferay> No. The cmd=view shows outdated content, because the articles have been changed, but not published.
08:57 < jardineworks:#liferay> Tar-Minyatur, you could write your own hook maybe?
08:58 < jardineworks:#liferay> put the preview back in?
08:58 < jardineworks:#liferay> (with your own hook)
08:58 < Tar-Minyatur:#liferay> Yes...maybe.
08:58 < Tar-Minyatur:#liferay> Not a big fan of that, however.
08:58 < jardineworks:#liferay> how come?
08:58 < Tar-Minyatur:#liferay> Seems like the wrong approach to me.
08:58 < jardineworks:#liferay> struts hooks are easy peasy to do in 6.1 -- they no longer require EXT plugins
08:59 < Tar-Minyatur:#liferay> Would it work if I published a page that contains an asset publisher, which shows all of these articles?
08:59 < Tar-Minyatur:#liferay> Because apparently you can't publish content articles independently, right?
09:00 < Tar-Minyatur:#liferay> Or maybe I should just put all of the articles on separate pages and publish the parent page with "include descendant pages". This way they would be found by the search as well.
09:02 < jardineworks:#liferay> I'm not sure to be honest -- I have limited asset publisher experience at the moment. The last one you said though with the descendent pages sounds promising
09:07 < Tar-Minyatur:#liferay> The problem is that they threw compatibility with Non-JS browsers out the window at some point.
09:08 < Tar-Minyatur:#liferay> So there is no non-ajax version of the different pages.
09:08 < Tar-Minyatur:#liferay> In theory there would have to be hard copies of all the different pages than can be created by loading the content dynamically.
