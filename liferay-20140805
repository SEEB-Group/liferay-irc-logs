--- Log opened Tue Aug 05 00:00:44 2014
10:11 < Yam`:#liferay> hi
10:14 < bijoo_:#liferay> Yam`: hello; how's it going here for you?
10:17 < Yam`:#liferay> bijoo_, i'm trying to do things with MVCPortlet but I'm a beginner and I don't find example of what I wanna do
10:17 < jardineworks:#liferay> Yam`, what are you trying to do?
10:18 < Yam`:#liferay> I have an organization let's say IBM
10:19 < Yam`:#liferay> with two sub organizations: Calyon and Amundi
10:19 < Yam`:#liferay> I want to test if I can do a portlet that displays the users in the same organization of the viewer
10:20 < Yam`:#liferay> ex: if johndoe in Calyon opens the page where there's the portlet, it displays the users of Calyon
10:21 < jardineworks:#liferay> Yam`, you shoul dbe able to do that with the OrganizationLocalServiceUtil.
10:22 < jardineworks:#liferay> Yam`, OrganizationLocalServiceUtil.getUserOrganizations( [userid], Boolean.TRUE ); might do it ...
10:23 < Yam`:#liferay> I'll try that jardineworks thanks :)
10:24 < jardineworks:#liferay> you can get the current users user id by using the PortalUtil.getUserId( renderRequest ); (assuming that you are doing this in the render method)
10:24 < jardineworks:#liferay> oh no wait
10:24 < jardineworks:#liferay> that will give you the list of organizations that user is in...
10:25 < jardineworks:#liferay> Yam`, UserLocalServiceUtil.getOrganizationUsers( organizationId );
10:25 < Yam`:#liferay> where do you see the methods?
10:26 < Yam`:#liferay> because if I learn how to do it I might have less problems :D
10:26 < jardineworks:#liferay> that will give you a List<User> that you can add to the renderRequest.setAttribute ... and then in the JSP you can use JSTL to <c:forEach /> over the users.
10:26 < jardineworks:#liferay> Yam`, Service Builder is bootstrapped by Liferay. They use it to generate their own entity models.
10:27 < jardineworks:#liferay> so learn service builder and  you will understand how to find the service classes that are used to access the liferay model objects.
10:27 < Yam`:#liferay> ok
10:27 < jardineworks:#liferay> Yam`, http://www.liferay.com/community/wiki/-/wiki/Main/Service+Builder
10:28 < jardineworks:#liferay> and the number one fail that I see Liferay developers NOT DOING... is including the Portal Source code as part of their development process. Liferay doesn't have to be a black box. YOu can see how it is done, so do it.
10:28 < jardineworks:#liferay> The best programmers aren't the ones that write code -- they're the ones that can READ code.
10:29 < jardineworks:#liferay> whenever I am tasked with hiring someone, I NEVER ask them to write code. I give them some code and tell them to read it and tell me what is happening.
10:30 < jardineworks:#liferay> Yam`, in eclipse, CTRL-SHIFT-R is your best friend :)
10:30 < Yam`:#liferay> I try to read the wiki but as I know nothing, I don't know what may be able to help me :/
10:31 < jardineworks:#liferay> Yam`, Trial and error and reading Liferays source man.
10:31 < Yam`:#liferay> what is liferay's source man ?
10:32 < jardineworks:#liferay> Yam`, the Liferay Portal source code. YOu can download the Liferay Tomcat Bundle, the Liferay SDK, ... the SQL Scripts... one of the options is "portal source". That is the java code that   is the entire portal.
10:32 < jardineworks:#liferay> so you can literally set a break point in the MainServlet (the main entry point for the application) and step through everything that happens.
10:33 < Yam`:#liferay> okay
10:35 < jardineworks:#liferay> Yam`, I guess the bottom line is... the best way to understand Liferay, at least I think, is to read the source.
10:41 < Yam`:#liferay> jardineworks, I've got that for the moment: http://pastebin.com/s20qVTy4 which I founded in a blog tutorial
10:42 < Yam`:#liferay> it generates a form with an input and a button and after clicking it, it displays the text that the user types in the input
