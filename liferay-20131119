--- Log opened Tue Nov 19 00:00:18 2013
04:19 < hufg:#liferay> anyone ever wondered how massive a theme can be? 8)
04:20 < hufg:#liferay> maan there is a lot of code in the theme
04:22 < hufg:#liferay> ehh this theme i meant
04:41 < Tar-Minyatur:#liferay> Our theme loads 40 JS files on every page.
04:41 < Tar-Minyatur:#liferay> Tell me about massive.
04:42 < Tar-Minyatur:#liferay> They were to dumb to do it properly and now there is all JS code embedded in the theme...and the different JS files use indexOf('some-url-snippet') to check if they should be run on the current page. So sad.
04:47 < hufg:#liferay> Tar-Minyatur: hehe
04:48 < hufg:#liferay> Tar-Minyatur: we use requirejs for that
04:48 < hufg:#liferay> a few problems still exists but it's the right choice
04:48 < Tar-Minyatur:#liferay> The problem is that refactoring this mess will be very difficult and time-consuming.
04:49 < hufg:#liferay> 8)
04:49 < hufg:#liferay> yeah it would have some work load
04:50 < Tar-Minyatur:#liferay> Mhm. One of my frontend devs is complaining that CSS hotdeployment doesn't work.
04:51 < Tar-Minyatur:#liferay> Is there an easy way to check if he disabled the CSS fast load stuff correctly?
04:52 < hufg:#liferay> mm just see portal-ext.props
04:52 < Tar-Minyatur:#liferay> I think he added -Dexternal-properties=portal-developer.properties to his Tomcat run configuration.
04:52 < Tar-Minyatur:#liferay> This should pretty much disable all caching, shouldn't it?
04:55 < hufg:#liferay> mm
04:55 < hufg:#liferay> no idea
04:55 < Tar-Minyatur:#liferay> The file is correctly deployed...I can access it directly and see the change. But apparently the process behind this main.css stuff didn't recognize this change.
04:55 < Tar-Minyatur:#liferay> I thought it should be deactivated when I shut off all this caching stuff. -.-
05:07 < Tar-Minyatur:#liferay> Sometimes I think it would be cheaper to give all content editors HTML training and work with static pages only...
05:26 < Tar-Minyatur:#liferay> Mhm. I get a 404 for /html/themes/control_panel/css/compass, because it tries to retrieve that from our CDN.
05:27 < Tar-Minyatur:#liferay> I would assume that this is some kind of CSS magic that does some optimization or something...and this definitely shouldn't be retrieved from the CDN...
05:31 < Tar-Minyatur:#liferay> topolik: Hi there. I remember reading some CSS related things in your blog. Do you know your way around Liferay's CSS stuff?
05:32 < topolik:#liferay> Tar-Minyatur: Hi, well, CSS basics :)
05:32 < topolik:#liferay> how can I help?
05:33 < topolik:#liferay> I see, the previous conversation, right?
05:36 < topolik:#liferay> so when you directly hit the http://portal/xxx-portlet/css/main.css the changes are there, right?
05:36 < topolik:#liferay> but they are not visible on the page
05:36 < topolik:#liferay> can you verify how is the CSS file linked from the page?
05:37 < topolik:#liferay> it should be something like http://portal/xxx-portlet/main.css?browserId=...&themeId=...t=...
05:38 < topolik:#liferay> can you display that file in your browser and try force refresh? i.e. CTRL+F5?
05:45 < Tar-Minyatur:#liferay> When I access the main.css?browser... directly, I get a bunch of import statements.
05:46 < topolik:#liferay> and what you get without the query string, the same?
05:47 < Tar-Minyatur:#liferay> The same but with some empty lines between the imports.
05:47 < Tar-Minyatur:#liferay> There is also another link to a main.css, which provides much more CSS.
05:47 < topolik:#liferay> hmm
05:47 < Tar-Minyatur:#liferay> The first is /html/css/main.css?browser....
05:47 < Tar-Minyatur:#liferay> The second is from the Theme.
05:48 < topolik:#liferay> ah, right, one is portal default styles
05:48 < Tar-Minyatur:#liferay> http://liferay.local/my-theme/css/main.css?browser...
05:49 < Tar-Minyatur:#liferay> I can't find my change in the latter.
05:49 < Tar-Minyatur:#liferay> But if I directly call the CSS file from the theem folder, the change is there.
05:50 < topolik:#liferay> hmm
05:51 < topolik:#liferay> which css file is it?
05:51 < topolik:#liferay> the one imported?
05:51 < topolik:#liferay> from main.css?
05:53 < Tar-Minyatur:#liferay> I have no clue how main.css works.
05:54 < Tar-Minyatur:#liferay> We have an override.css in our theme.
05:54 < Tar-Minyatur:#liferay> I can't find that anywhere in the page, so I guess it's included somewhere.
05:54 < topolik:#liferay> yeah
05:54 < topolik:#liferay> it should be included from main.css
05:55 < topolik:#liferay> probably you know that themes CSS should be overridden using custom.css file
05:55 < topolik:#liferay> themes work on inheritance
05:55 < Tar-Minyatur:#liferay> Our theme is not built from a Liferay theme. :-(
05:55 < topolik:#liferay> oh
05:55 < Tar-Minyatur:#liferay> I have no clue how built this mess like this.
05:55 < topolik:#liferay> you didn't use Plugins SDK?
05:55 < Tar-Minyatur:#liferay> They took a ready HTML layout and "Liferayified" it.
05:55 < topolik:#liferay> aaah
05:56 < topolik:#liferay> uhm
05:56 < Tar-Minyatur:#liferay> We don't use plugins SDK. All our plugins are Maven projects.
05:56 < topolik:#liferay> n/p, there is also maven plugins sdk
05:56 < topolik:#liferay> but I'm not sure if you use it
05:56 < topolik:#liferay> ok, so
05:56 < topolik:#liferay> question
05:57 < topolik:#liferay> is override.css  referenced from main.css using the import statement?
05:57 < Tar-Minyatur:#liferay> Not in one of the two main.css references I found in the page.
05:58 < Tar-Minyatur:#liferay> I couldn't find any mention of override.css in either of them.
05:58 < topolik:#liferay> it should be in the http://liferay.local/my-theme/css/main.css file
05:59 < topolik:#liferay> I'm afraid that if it's not referenced then it cannot be loaded
06:00 < topolik:#liferay> can you search through your theme sources if override.css is mentioned anywhere?
06:00 < Tar-Minyatur:#liferay> I'm fairly sure that it is loaded.
06:01 < topolik:#liferay> ok, we need to find how it is loaded
06:01 < topolik:#liferay> from where it's referenced
06:01 < Tar-Minyatur:#liferay> Mhm.
06:01 < Tar-Minyatur:#liferay> ./main/webapp/css/main.css:33:@import url(override.css);
06:01 < topolik:#liferay> it's also possible that it's referenced directly from theme velocity templates like portal_normal.vm or so
06:01 < topolik:#liferay> ok
06:02 < Tar-Minyatur:#liferay> When I go to /mytheme/css/main.css I can't find it in there.
06:02 < topolik:#liferay> is it deployed?
06:02 < Tar-Minyatur:#liferay> Yes. I merely added one directive to the override.css and wanted it to be hotdeployed.
06:03 < Tar-Minyatur:#liferay> When I directly access the override.css I can see the new directive.
06:07 < Tar-Minyatur:#liferay> Looks to me like there is some kind of assembly task done that merges the CSS files?
06:07 < Tar-Minyatur:#liferay> And this isn't triggered again when I only hotdeploy a single CSS file?
06:08 < topolik:#liferay> depends
06:08 < topolik:#liferay> there is sort of caching
06:08 < Tar-Minyatur:#liferay> I'm fairly sure I deactivated the caching for everything I could find.
06:08 < topolik:#liferay> ok
06:09 < topolik:#liferay> what does this mean "/mytheme/css/main.css"?
06:09 < topolik:#liferay> that the import statement is deployed on server?
06:09 < topolik:#liferay> I meant: "When I go to /mytheme/css/main.css I can't find it in there."
06:09 < Tar-Minyatur:#liferay> The VM template of the theme seems to link to that file.
06:10 < Tar-Minyatur:#liferay> I found that in the sourcecode of the portal as it is delivered by Liferay.
06:10 < Tar-Minyatur:#liferay> There are three different links to a main.css...one of them to the one in the theme.
06:10 < topolik:#liferay> ok, still, I have the question
06:10 < topolik:#liferay> the theme/css/main.css file on the server
06:11 < topolik:#liferay> does it contain the @import url(override.css); ?
06:11 < topolik:#liferay> here I mean the file on file system, not what you get by HTTP request
06:12 < Tar-Minyatur:#liferay> No. It looks like the override.css has been merged into the main.css
06:12 < Tar-Minyatur:#liferay> Oh. On the file system. Mom.
06:13 < Tar-Minyatur:#liferay> Doesn't look like it's in there.
06:13 < Tar-Minyatur:#liferay> So the merging is done at build time?
06:14 < Tar-Minyatur:#liferay> In my theme soucecode I see only import statements in main.css. In the theme deployed on the server the main.css is huge and contains no more import statements.
06:20 < topolik:#liferay> ok
06:20 < topolik:#liferay> so it's the deployment process that merges the files together
06:20 < topolik:#liferay> this way the CSS hot-deploy cannot work
06:20 < Tar-Minyatur:#liferay> Looks like it...yes. Is that something Liferay does or has one of our guys implemented this?
06:21 < topolik:#liferay> nope
06:21 < topolik:#liferay> AFAIK portal doesn't touch the original CSS files
06:21 < topolik:#liferay> it merges them but put the merged result into temp folder
06:23 < Tar-Minyatur:#liferay> Okay. So I have to track down the guy how built out Maven project...
06:23 < Tar-Minyatur:#liferay> Thanks!
06:24 < Tar-Minyatur:#liferay> I have another issue, if you can spare some more time. Our dev system reports a 404 on /html//html/themes/control_panel/css/compass
06:24 < Tar-Minyatur:#liferay> Uh. Sorry. /html/themes/control_panel/css/compass
06:24 < Tar-Minyatur:#liferay> And I vaguely recall that compass is some CSS magic util.
06:24 < Tar-Minyatur:#liferay> So it's probably wrong that the portal tries to retrieve this from the CDN, right?
06:32 < topolik:#liferay> uhm
06:32 < topolik:#liferay> I don't understand it
06:33 < topolik:#liferay> I can't find comass directory there
06:33 < topolik:#liferay> *compass
06:33 < Tar-Minyatur:#liferay> Okay. More context: We are using a CDN (S3 bucket).
06:33 < topolik:#liferay> uhm, I see - https://github.com/liferay/liferay-portal/blob/6.1.1-ga2/portal-web/docroot/html/themes/control_panel/_diffs/css/custom.css
06:33 < Tar-Minyatur:#liferay> Liferay is configured to use this CDN.
06:33 < topolik:#liferay> first line
06:33 < topolik:#liferay> there is @import "compass";
06:33 < Tar-Minyatur:#liferay> Yeah.
06:34 < topolik:#liferay> but I believe this should be processed by Liferay on the CDN server
06:34 < topolik:#liferay> and not returned in the output
06:34 < Tar-Minyatur:#liferay> Probably.
06:34 < Tar-Minyatur:#liferay> Looks like the wrong files were uploaded to the CDN.
06:34 < topolik:#liferay> uhm
06:34 < Tar-Minyatur:#liferay> Because the entire CP looks broken.
06:34 < topolik:#liferay> does your CDN run the portat
06:34 < topolik:#liferay> portal
06:35 < Tar-Minyatur:#liferay> No. As I said...it's only an S3 bucket.
06:35 < topolik:#liferay> aah, got it
06:35 < topolik:#liferay> so there are only the CSS files
06:35 < Tar-Minyatur:#liferay> We actually have the entire theme deployed there.
06:35 < Tar-Minyatur:#liferay> I think they just extracted the theme war file there...
06:35 < topolik:#liferay> got it
06:36 < Tar-Minyatur:#liferay> And they also uploaded some Liferay assets.
06:36 < topolik:#liferay> I never created a CDN but I believe there should be the result CSS files, not the source ones
06:36 < Tar-Minyatur:#liferay> Because Liferay prepends everything with the CDN host when the feature is activated.
06:36 < topolik:#liferay> look at this: https://github.com/liferay/liferay-portal/blob/6.1.1-ga2/portal-web/docroot/html/themes/control_panel/_diffs/css/custom.css#L151,L160
06:37 < topolik:#liferay> this is clearly not a css file
06:37 < topolik:#liferay> but SASS or something like this
06:38 < topolik:#liferay> so it seems the file cannot be used as-is
06:38 < topolik:#liferay> but requires pre-processing
06:39 < daqSam:#liferay> Hello fellas! Does anyone here know how to inhibit sitemap.xml from having localization entries (http://mysite.url/page/pt, http://mysite.url/page/uk) when my site is English only? Tks
06:40 < Tar-Minyatur:#liferay> topolik: Okay. So I have to review which files have been deployed and probably change the process. Thanks.
06:41 < topolik:#liferay> Tar-Minyatur: y/w
06:42 < topolik:#liferay> daqSam: which portal version do you use?
06:50 < daqSam:#liferay> LR 6.1.2
07:00 < topolik:#liferay> https://github.com/liferay/liferay-portal/blob/6.1.2-ga3/portal-impl/src/com/liferay/portlet/layoutsadmin/util/SitemapImpl.java#L251
07:00 < topolik:#liferay> so it prints the sitemap using all available locales
07:02 < daqSam:#liferay> @topolik: Liferay Portal Enterprise Edition 6.1.20 EE (Paton / Build 6120 / July 31, 2012)
07:02 < topolik:#liferay> ah
07:02 < topolik:#liferay> ok
07:03 < daqSam:#liferay> The problem with this for us is that our portal is multilingual
07:03 < daqSam:#liferay> but one specific site isn't
07:03 < topolik:#liferay> uhm
07:03 < daqSam:#liferay> and the localized sitemap is affection SEO
07:03 < topolik:#liferay> I understand
07:03 < daqSam:#liferay> *affecting even
07:03 < topolik:#liferay> this is implemented in 6.2
07:04 < daqSam:#liferay> is it? how is it dealt with in 6.2?
07:04 < topolik:#liferay> per-site settings
07:04 < topolik:#liferay> https://github.com/topolik/liferay-portal/commit/88707c9b0bf8c91a20de457fde8074a75f4bf936
07:05 < topolik:#liferay> it's this feature: https://issues.liferay.com/browse/LPS-37886
07:06 < daqSam:#liferay> i see... cool
07:06 < daqSam:#liferay> thanks for the info
07:07 < daqSam:#liferay> do u know of any workaround this for 6.1.2? Like some sort of hook or something?
07:07 < topolik:#liferay> hmm, yes
07:07 < topolik:#liferay> you can write a servlet filter in the hook
07:08 < topolik:#liferay> that would remove all the unnecessary entries from XML
07:08 < daqSam:#liferay> I see... and that could be made site specific instead of portal wide? (sorry, not much exp in that area)
07:09 < topolik:#liferay> sure
07:09 < topolik:#liferay> you know what to remove and what to left there
07:10 < daqSam:#liferay> I think after some investigation I might be able to work it out
07:10 < daqSam:#liferay> Thanks for the help on this
07:10 < topolik:#liferay> n/p :)
07:10 < daqSam:#liferay> I'll get back to you guys in case I'm successful just in case anyone else is interested
07:10 < daqSam:#liferay> =)
07:11 < topolik:#liferay> good luck! :)
07:47 < hufg:#liferay> ach there is a horrible bug in 6.1GA2 with themedisplay getPathThemeImages
07:50 < Tar-Minyatur:#liferay> topolik: About that compass stuff again...on my local Tomcat I have the unmodified CSS file deployed for the control panel theme.
07:51 < Tar-Minyatur:#liferay> This seems to work.
07:51 < Tar-Minyatur:#liferay> But pushing the same to the CDN doesn't seem to work properly. I'm confused.
07:57 < topolik:#liferay> Tar-Minyatur: what is returned using HTTP request is the same compared to what is deployed?
08:02 < Tar-Minyatur:#liferay> Yeah. Looks like Liferay somehow processes the files.
08:02 < Tar-Minyatur:#liferay> The import "compass"; is removed when I retrieve the custom.css via HTTP.
08:03 < Tar-Minyatur:#liferay> But this would mean that I can't deliver the CSS via the CDN.
08:03 < Tar-Minyatur:#liferay> If that is the case, why does Liferay use the CDN host for CSS files then? Oo
08:04 < topolik:#liferay> if you don't have portal running on your CDN you need to deliver already processed CSS files there
08:04 < Tar-Minyatur:#liferay> I'm sure that I'm missing something here...
08:05 < Tar-Minyatur:#liferay> And how to do that? Is there some special build goal for that?
08:06 < topolik:#liferay> well, I don't know, I never did that :)
08:06 < topolik:#liferay> I'd use something like curl to crawl the web site CSS files
08:06 < topolik:#liferay> first for not authenticated users
08:07 < Tar-Minyatur:#liferay> It just seems weird to me that Liferay tries to fetch all JS and CSS from the CDN.
08:07 < topolik:#liferay> and then authenticated content
08:07 < topolik:#liferay> well, "static content" should be served from CDN
08:08 < topolik:#liferay> so that the servers are geographically nearer to your users
08:08 < topolik:#liferay> and you save network latency/traffic/etc.
08:08 < Tar-Minyatur:#liferay> I only put the CDN hostname into the config. Liferay decided to retrieve all JS and CSS from there for the control panel.
08:10 < topolik:#liferay> I see
08:11 < topolik:#liferay> Control panel don't need to be on CDN because it's not so frequently used
08:11 < Tar-Minyatur:#liferay> Searching the forums reveals that a lot of people seem to have encountered that problem.
08:12 < Tar-Minyatur:#liferay> Maybe...but I can't deactivate the CDN for the CP.
08:28 < topolik:#liferay> hmm, you could do it probably using Hook
08:32 < topolik:#liferay> create a custom action that overrides themeDisplay for control panel, and specify it in servlet.service.events.pre
08:32 < topolik:#liferay> *override=overwrite
08:35 < topolik:#liferay> do you know what I mean?
08:50 < aj_:#liferay> anyon in here know how to check for a null value in velocity?
08:50 < aj_:#liferay> none of the tricks I have found online seem to work.
08:51 < aj_:#liferay> maybe the $validator...
08:52 < hufg:#liferay> "$!var" == ""
08:53 < hufg:#liferay> if true then empty or null
08:53 < hufg:#liferay> would be hilarious if someone had overridden toString to empty
08:56 < aj_:#liferay> haha
08:57 < aj_:#liferay> actually... the $validator seems to work as well
08:57 < aj_:#liferay> BUT
08:57 < aj_:#liferay> I am doing  #set (myVar = $request.getSession().getAttribute("xxx"))
08:57 < aj_:#liferay> .. it evaluates to false with the $valdiator.isNotNull
08:57 < aj_:#liferay> BUT
08:58 < aj_:#liferay> when I output the value (in the log) of myVar ... I see $myVar. So I suspect that it is not actually assigning the variable
08:59 < hufg:#liferay> the method is isNotNull
09:00 < hufg:#liferay> --> false --> is null? 8)
09:01 < aj_:#liferay> hufg, isNull evaluates to true... but it shouldn't is the point I am making :)
09:01 < aj_:#liferay> because the object is thre.
09:02 < aj_:#liferay> soooooooooooo... really, isNull should be false. And if I output the $myVar then I should seen the tostring for my object, not the var name right?
09:02 < hufg:#liferay> yes
09:02 < hufg:#liferay> if you see $myVar then it's unassigned in the velocity context or null
09:02 < aj_:#liferay> usually when you see the var name that is because the assignment failed ... at least that is what I understand
09:02 < hufg:#liferay> it may be null
09:02 < aj_:#liferay> ah
09:03 < aj_:#liferay> well... it also should not be null lol
09:03 < hufg:#liferay> getAttribute almost certainly gives you null with invalid attribute name or unset attribute name
09:03 < aj_:#liferay> right
09:03 < aj_:#liferay> I wish I could inspect my sessoin object here to see for sure
09:03 < hufg:#liferay> $!myVar is "" with null or unassigned velocity var
09:03 < hufg:#liferay> actually i think unassigned velocity var == null
09:03 < hufg:#liferay> yes yes
09:03 < hufg:#liferay> it's like that
09:04 < hufg:#liferay> this is why set a=1, set a=null --> a=1
09:04 < hufg:#liferay> now i remember
09:04 < hufg:#liferay> because once the variable has been set in the context it cannot be removed (setting null)
09:04 < hufg:#liferay> so it will be preserved
09:05 < aj_:#liferay> hufg, but the value can change between page refereshes right?
09:05 < hufg:#liferay> yes
09:06 < aj_:#liferay> so essentially I am trying to hide/show an icon based on whether or not a user has a cart
09:06 < hufg:#liferay> in theme or article template?
09:06 < aj_:#liferay> so I am trying to grab the users order from the session and if there is on present, then I show the icon, otherwise hide it
09:06 < aj_:#liferay> theme
09:07 < hufg:#liferay> jsut print the $request var and see whats there
09:07 < hufg:#liferay> $request
09:07 < aj_:#liferay> $request is an object, $session is an object. but $session.getAttribute("xxx") is coming back null, BUT, it shouldn't when the user has a cart. For example, I am in the middle of the order process so it should be showing.
09:07 < hufg:#liferay> or session object
09:08 < aj_:#liferay> printing both gives me the tostring --
09:08 < aj_:#liferay>  com.liferay.portal.kernel.servlet.ProtectedServletRequest@37b85be0
09:08 < aj_:#liferay> same deal for the session
09:08 < hufg:#liferay> ah ok
09:08 < aj_:#liferay> I suppose I could get the list of attributes from the session and loop over them to ouput them.. but I was hoping to avoid that mjuch work hahah
09:08 < hufg:#liferay> you may have a problem sharing the session with theme ?
09:08 < hufg:#liferay> yeah
09:10 -!- mode/#liferay [+o jhf] by ChanServ
09:11 < aj_:#liferay> hufg, I am pushing the details into the rquest (portal) session .. I thought that woul dbe enough to be honest.
09:12 < hufg:#liferay> mm yeah
09:14 < aj_:#liferay> awesome. Session attributes are an enumeration and velocity doesn't have a while loop. super.
09:15 < hufg:#liferay> mm?
09:15 < hufg:#liferay> 8)
09:15 < hufg:#liferay> dont take it so hard just loop for ever and break i recall velocity having break
09:16 < hufg:#liferay> some doc is saying enumeration works with foreach
09:18 < hufg:#liferay> rotty3000: why is not document library caching enabled in ehcache configuration by default?
09:19 < hufg:#liferay> does it even matter?
09:20 < aj_:#liferay> hufg, I think I figured it out
09:20 < aj_:#liferay> to make the order available in the portal session you need to use one of the prefixes... for example, LIFERAY_SHARED_[myvar]
09:20 < aj_:#liferay> I forgot about that
09:20 < aj_:#liferay> then it can be shared across the portlets etc
09:20 < hufg:#liferay> 8)
09:20 < aj_:#liferay> because it's not there :)
09:21 < aj_:#liferay> soooooooooo the bull makes sense
09:25 < aj_:#liferay> \o/
09:46 < hufg:#liferay> hmm any ideas how to remove version numbers from layout deployments
09:46 < hufg:#liferay> now they are deployed with layout-1.0.0 etc
10:53 < hufg:#liferay> maan i don't want to use maven finalName on build time
10:53 < hufg:#liferay> if i add "portlet" or "theme" string to the layout artifact the version number is stripped
