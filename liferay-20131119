--- Log opened Tue Nov 19 00:00:18 2013
04:19 < hufg:#liferay> anyone ever wondered how massive a theme can be? 8)
04:20 < hufg:#liferay> maan there is a lot of code in the theme
04:22 < hufg:#liferay> ehh this theme i meant
04:41 < Tar-Minyatur:#liferay> Our theme loads 40 JS files on every page.
04:41 < Tar-Minyatur:#liferay> Tell me about massive.
04:42 < Tar-Minyatur:#liferay> They were to dumb to do it properly and now there is all JS code embedded in the theme...and the different JS files use indexOf('some-url-snippet') to check if they should be run on the current page. So sad.
04:47 < hufg:#liferay> Tar-Minyatur: hehe
04:48 < hufg:#liferay> Tar-Minyatur: we use requirejs for that
04:48 < hufg:#liferay> a few problems still exists but it's the right choice
04:48 < Tar-Minyatur:#liferay> The problem is that refactoring this mess will be very difficult and time-consuming.
04:49 < hufg:#liferay> 8)
04:49 < hufg:#liferay> yeah it would have some work load
04:50 < Tar-Minyatur:#liferay> Mhm. One of my frontend devs is complaining that CSS hotdeployment doesn't work.
04:51 < Tar-Minyatur:#liferay> Is there an easy way to check if he disabled the CSS fast load stuff correctly?
04:52 < hufg:#liferay> mm just see portal-ext.props
04:52 < Tar-Minyatur:#liferay> I think he added -Dexternal-properties=portal-developer.properties to his Tomcat run configuration.
04:52 < Tar-Minyatur:#liferay> This should pretty much disable all caching, shouldn't it?
04:55 < hufg:#liferay> mm
04:55 < hufg:#liferay> no idea
04:55 < Tar-Minyatur:#liferay> The file is correctly deployed...I can access it directly and see the change. But apparently the process behind this main.css stuff didn't recognize this change.
04:55 < Tar-Minyatur:#liferay> I thought it should be deactivated when I shut off all this caching stuff. -.-
05:07 < Tar-Minyatur:#liferay> Sometimes I think it would be cheaper to give all content editors HTML training and work with static pages only...
05:26 < Tar-Minyatur:#liferay> Mhm. I get a 404 for /html/themes/control_panel/css/compass, because it tries to retrieve that from our CDN.
05:27 < Tar-Minyatur:#liferay> I would assume that this is some kind of CSS magic that does some optimization or something...and this definitely shouldn't be retrieved from the CDN...
05:31 < Tar-Minyatur:#liferay> topolik: Hi there. I remember reading some CSS related things in your blog. Do you know your way around Liferay's CSS stuff?
05:32 < topolik:#liferay> Tar-Minyatur: Hi, well, CSS basics :)
05:32 < topolik:#liferay> how can I help?
05:33 < topolik:#liferay> I see, the previous conversation, right?
05:36 < topolik:#liferay> so when you directly hit the http://portal/xxx-portlet/css/main.css the changes are there, right?
05:36 < topolik:#liferay> but they are not visible on the page
05:36 < topolik:#liferay> can you verify how is the CSS file linked from the page?
05:37 < topolik:#liferay> it should be something like http://portal/xxx-portlet/main.css?browserId=...&themeId=...t=...
05:38 < topolik:#liferay> can you display that file in your browser and try force refresh? i.e. CTRL+F5?
05:45 < Tar-Minyatur:#liferay> When I access the main.css?browser... directly, I get a bunch of import statements.
05:46 < topolik:#liferay> and what you get without the query string, the same?
05:47 < Tar-Minyatur:#liferay> The same but with some empty lines between the imports.
05:47 < Tar-Minyatur:#liferay> There is also another link to a main.css, which provides much more CSS.
05:47 < topolik:#liferay> hmm
05:47 < Tar-Minyatur:#liferay> The first is /html/css/main.css?browser....
05:47 < Tar-Minyatur:#liferay> The second is from the Theme.
05:48 < topolik:#liferay> ah, right, one is portal default styles
05:48 < Tar-Minyatur:#liferay> http://liferay.local/my-theme/css/main.css?browser...
05:49 < Tar-Minyatur:#liferay> I can't find my change in the latter.
05:49 < Tar-Minyatur:#liferay> But if I directly call the CSS file from the theem folder, the change is there.
05:50 < topolik:#liferay> hmm
05:51 < topolik:#liferay> which css file is it?
05:51 < topolik:#liferay> the one imported?
05:51 < topolik:#liferay> from main.css?
05:53 < Tar-Minyatur:#liferay> I have no clue how main.css works.
05:54 < Tar-Minyatur:#liferay> We have an override.css in our theme.
05:54 < Tar-Minyatur:#liferay> I can't find that anywhere in the page, so I guess it's included somewhere.
05:54 < topolik:#liferay> yeah
05:54 < topolik:#liferay> it should be included from main.css
05:55 < topolik:#liferay> probably you know that themes CSS should be overridden using custom.css file
05:55 < topolik:#liferay> themes work on inheritance
05:55 < Tar-Minyatur:#liferay> Our theme is not built from a Liferay theme. :-(
05:55 < topolik:#liferay> oh
05:55 < Tar-Minyatur:#liferay> I have no clue how built this mess like this.
05:55 < topolik:#liferay> you didn't use Plugins SDK?
05:55 < Tar-Minyatur:#liferay> They took a ready HTML layout and "Liferayified" it.
05:55 < topolik:#liferay> aaah
05:56 < topolik:#liferay> uhm
05:56 < Tar-Minyatur:#liferay> We don't use plugins SDK. All our plugins are Maven projects.
05:56 < topolik:#liferay> n/p, there is also maven plugins sdk
05:56 < topolik:#liferay> but I'm not sure if you use it
05:56 < topolik:#liferay> ok, so
05:56 < topolik:#liferay> question
05:57 < topolik:#liferay> is override.css  referenced from main.css using the import statement?
05:57 < Tar-Minyatur:#liferay> Not in one of the two main.css references I found in the page.
05:58 < Tar-Minyatur:#liferay> I couldn't find any mention of override.css in either of them.
05:58 < topolik:#liferay> it should be in the http://liferay.local/my-theme/css/main.css file
05:59 < topolik:#liferay> I'm afraid that if it's not referenced then it cannot be loaded
06:00 < topolik:#liferay> can you search through your theme sources if override.css is mentioned anywhere?
06:00 < Tar-Minyatur:#liferay> I'm fairly sure that it is loaded.
06:01 < topolik:#liferay> ok, we need to find how it is loaded
06:01 < topolik:#liferay> from where it's referenced
06:01 < Tar-Minyatur:#liferay> Mhm.
06:01 < Tar-Minyatur:#liferay> ./main/webapp/css/main.css:33:@import url(override.css);
06:01 < topolik:#liferay> it's also possible that it's referenced directly from theme velocity templates like portal_normal.vm or so
06:01 < topolik:#liferay> ok
06:02 < Tar-Minyatur:#liferay> When I go to /mytheme/css/main.css I can't find it in there.
06:02 < topolik:#liferay> is it deployed?
06:02 < Tar-Minyatur:#liferay> Yes. I merely added one directive to the override.css and wanted it to be hotdeployed.
06:03 < Tar-Minyatur:#liferay> When I directly access the override.css I can see the new directive.
06:07 < Tar-Minyatur:#liferay> Looks to me like there is some kind of assembly task done that merges the CSS files?
06:07 < Tar-Minyatur:#liferay> And this isn't triggered again when I only hotdeploy a single CSS file?
06:08 < topolik:#liferay> depends
06:08 < topolik:#liferay> there is sort of caching
06:08 < Tar-Minyatur:#liferay> I'm fairly sure I deactivated the caching for everything I could find.
06:08 < topolik:#liferay> ok
06:09 < topolik:#liferay> what does this mean "/mytheme/css/main.css"?
06:09 < topolik:#liferay> that the import statement is deployed on server?
06:09 < topolik:#liferay> I meant: "When I go to /mytheme/css/main.css I can't find it in there."
06:09 < Tar-Minyatur:#liferay> The VM template of the theme seems to link to that file.
06:10 < Tar-Minyatur:#liferay> I found that in the sourcecode of the portal as it is delivered by Liferay.
06:10 < Tar-Minyatur:#liferay> There are three different links to a main.css...one of them to the one in the theme.
06:10 < topolik:#liferay> ok, still, I have the question
06:10 < topolik:#liferay> the theme/css/main.css file on the server
06:11 < topolik:#liferay> does it contain the @import url(override.css); ?
06:11 < topolik:#liferay> here I mean the file on file system, not what you get by HTTP request
06:12 < Tar-Minyatur:#liferay> No. It looks like the override.css has been merged into the main.css
06:12 < Tar-Minyatur:#liferay> Oh. On the file system. Mom.
06:13 < Tar-Minyatur:#liferay> Doesn't look like it's in there.
06:13 < Tar-Minyatur:#liferay> So the merging is done at build time?
06:14 < Tar-Minyatur:#liferay> In my theme soucecode I see only import statements in main.css. In the theme deployed on the server the main.css is huge and contains no more import statements.
06:20 < topolik:#liferay> ok
06:20 < topolik:#liferay> so it's the deployment process that merges the files together
06:20 < topolik:#liferay> this way the CSS hot-deploy cannot work
06:20 < Tar-Minyatur:#liferay> Looks like it...yes. Is that something Liferay does or has one of our guys implemented this?
06:21 < topolik:#liferay> nope
06:21 < topolik:#liferay> AFAIK portal doesn't touch the original CSS files
06:21 < topolik:#liferay> it merges them but put the merged result into temp folder
