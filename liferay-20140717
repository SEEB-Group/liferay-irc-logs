--- Log opened Thu Jul 17 00:00:22 2014
00:05 < sl33k:#liferay> hi jardineworks....
00:06 < sl33k:#liferay> so sorry i'm always cutting convos half-way, it happens sometimes when i am att work
00:06 < sl33k:#liferay> hi all
00:16 < sl33k:#liferay> anyone with experience with Mapping portlets in spring portlet mvc?
04:16 < sl33k:#liferay> i am trying to redirect from one renderMapping method to another
04:16 < Yam`:#liferay> hi
05:23 < sl33k:#liferay>  hello does spring mvc portlet support wild card mappings?
05:30 < sl33k:#liferay> http://pastebin.com/jiJ9SQ8Z
05:49 < sl33k:#liferay> such that it handles ALL render request?
09:26 < jardineworks:#liferay> sl3can you also pastebin the actual JSP code?
09:26 < jardineworks:#liferay> hey Yam
09:31 < Yam_:#liferay> Hi
09:46 < jardineworks:#liferay> hey Yam_
10:01 < Yam_:#liferay> Can I easily remove the notifications? The "0" notification button in the user bar for example
10:07 < jardineworks:#liferay> did you make your own theme yet?
10:07 < jardineworks:#liferay> :)
10:08 < jardineworks:#liferay> Yam_, it's part of the dockbar. TO try to find that file to override here is what I would normally do ...
10:09 < jardineworks:#liferay> use the inspector to find something in the html that might be unique to it. .. for example
10:09 < jardineworks:#liferay> class="dropdown-toggle user-notification-link"
10:10 < jardineworks:#liferay> then in eclipse, assuming you have the portal-src as a project as a project (which if you don't you should)... ctrl-h and do a file search for something that "contains" that string. Then see where it comes up. Figure out the file and write a hook.
10:13 < Yam_:#liferay> Ok thank you. I don't have a theme project yet because I'm setting up a new Liferay instance in a physical computer but I'll do it soon!
10:16 < jardineworks:#liferay> you don't need a theme for that one actually, you would likely do it with a hook. UNLESS, I suppose if it is part of the javascript libraries (Alloy thingee). Easiest solution is porbably a CSS override to hide it.
10:18 < Yam_:#liferay> What do you mean by a hook?
10:19 < jardineworks:#liferay> it's a different plugin type.
10:19 < Yam_:#liferay> Ok.
10:19 < jardineworks:#liferay> If you want to change a JSP from the main portal then you would create a JSP Hook
10:19 < jardineworks:#liferay> If you want to alter the way a service works then you would write a service hook
10:19 < jardineworks:#liferay> If you want to change what happens in a portal action (say create account action) then you would create a strusts action hook
10:20 < jardineworks:#liferay> Hooks allow you to alter the default behaviour of the portal as well as add additional functionaly.
10:20 < jardineworks:#liferay> functionality*
10:20 < Yam_:#liferay> Ok, thanks :)
11:02 < Yam_:#liferay> jardineworks: to create a theme I either launch the command "ant -Dtheme.name=project (...)" in a terminal in [plugins directory]/themes or in Eclipse : New Project Liferay-Plugin Project option theme
