--- Log opened Wed Nov 20 00:00:19 2013
04:36 < hufg:#liferay> topolik: layouttpl is the correct string
04:36 < hufg:#liferay> goddamn motherfucking shit
04:36 < hufg:#liferay> 8)
04:37 < topolik:#liferay> hehe :)
04:39 < hufg:#liferay> such a pain in the ass to change project name
06:58 < hufg:#liferay> lol if i access the site with server name my workflow tasks does not open edit task when pressing "assign to me"
06:58 < hufg:#liferay> through load balancer it opens the edit task view
06:58 < hufg:#liferay> that is just crazy
06:58 < hufg:#liferay> plain nuts
09:07 < hufg:#liferay> we need a liferay therapy group where you can bitch and whine
09:08 < Azrae|:#liferay> hufg: I thought this was it ;)
09:08 < hufg:#liferay> Azrae|: it should be strictly for bitching and whining
09:08 < hufg:#liferay> there is some good stuff here from time to time
09:08 < hufg:#liferay> 8)
09:10 < hufg:#liferay> anyone got ideas on web content wrecking structure field data
09:10 < hufg:#liferay> repeatable-field=field1, repeatable-field=field2, save --> field2 changes to field1
09:12 < hufg:#liferay> i have a huge structure and template :Z
09:23 -!- mode/#liferay [+o jhf] by ChanServ
09:27 < Azrae|:#liferay> hufg: I have no ideas (good or bad) on anything. Totally new to liferay, so hoping that by lurking here I'll learn stuff by osmosis
09:33 -!- mode/#liferay [+o jhf_] by ChanServ
09:44 < hufg:#liferay> Azrae|: yes yes that's a good plan
09:44 < hufg:#liferay> Azrae|: the most important thing is to get liferay src and import it to the ide of your choice
09:45 < hufg:#liferay> the second most important thing is to get rid of windows if you have one
09:46 < hufg:#liferay> then just learn to track everything you need
09:58 < Azrae|:#liferay> hufg: get rid of windows? oh I wish!
10:01 < hufg:#liferay> you are doomed without a decent shell+grep/sed/find
10:01 < hufg:#liferay> 8)
10:05 < pnutbutr_:#liferay> cygwin if you must!
10:07 < Azrae|:#liferay> I do have cygwin installed
10:08 < Azrae|:#liferay> and I won't actually be doing any development in liferay, that'll be for my colleagues :)
10:10 < hufg:#liferay> what will you be doing?
10:12 < Azrae|:#liferay> hopefully nothing at all ;) because I'll be given stuff to do that I was hired to... however... coming back to reality... until we go live with a hosted solution I'm the one who installs our test server and keeps it going and hooks it up to ldap (and crashes ldap) etc.
10:56 < Tar-Minyatur:#liferay> Having somebody who knows how to set up Liferay properly is important.
10:57 < Tar-Minyatur:#liferay> Our current live system has a broken cluster config and everything is a huge mess.
10:57 < Tar-Minyatur:#liferay> We're trying to fix it, but Liferay infrastructure takes quite some research.
10:58 < Azrae|:#liferay> looking after our IBM websphere stuff for a few years has been a nightmare, so we are hoping a hosted solution will mean we do nothing but sit back and eat biscuits all day
10:59 < Tar-Minyatur:#liferay> Good luck with that. :D
10:59 < Azrae|:#liferay> (though I suspect all the money we save from not paying IBM won't get spent on biscuits)
11:03 < hufg:#liferay> Azrae|: :D
11:03 < hufg:#liferay> haha
11:04 < hufg:#liferay> our hosting solution is a cljusterfuck
11:04 < hufg:#liferay> they get nothing right
11:05 < hufg:#liferay> the problem is that you'd need maintainers who know your liferay stuff intimately and this shit will never happen when hosted and maintained somewhere else
11:06 < hufg:#liferay> the process should be like hey i want you to deploy this and then they'd know how to deploy a hook, theme, portlet and whatever may go wrong with it or a new configuration
11:07 < hufg:#liferay> not like write step by step instructions with commands and pray to god no typos are present and then wait for your voodoo consultant to execute the steps
11:08 < hufg:#liferay> the only hope is they have dedicated people that will learn ie. no offshore rotations and shit like that+good management or that they host other liferay stuff
11:08 < Azrae|:#liferay> are you with a dedicated liferay hosting company?
11:09 < hufg:#liferay> no
11:11 < Azrae|:#liferay> ahh.. I think we're looking at going with liferay.com and as much of a saas as possible
11:11 < hufg:#liferay> mm
11:13 < Azrae|:#liferay> but that shouldn't preclude us knowing as much as possible about how it works
11:13 < hufg:#liferay> Tar-Minyatur: i think it's somewhat easy work but you absolutely need to have to exact infrastructure when the infrastructure is being designed/done
11:13 < hufg:#liferay> the exact
11:14 < hufg:#liferay> essentially a test environment where you can test everything
11:14 < hufg:#liferay> from multicasting to whatever
11:14 < hufg:#liferay> though clustering docs have come a long way probably
11:16 < Tar-Minyatur:#liferay> We still don't have a working setup.
11:16 < Tar-Minyatur:#liferay> Because multicast is impossible in the Amazon cloud.
11:16 < hufg:#liferay> were you the guy that wanted to configure jgroups to unicast?
11:16 < hufg:#liferay> what happened to that? 8)
11:17 < Tar-Minyatur:#liferay> We considered it at some point.
11:17 < hufg:#liferay> but?
11:18 < Tar-Minyatur:#liferay> By now we will probably try to do it with memcache.
11:18 < Tar-Minyatur:#liferay> This way we can use Amazon's ElastiCache.
11:18 < Tar-Minyatur:#liferay> And we don't really need a clustering setup, because all instances use the same cache.
11:18 < hufg:#liferay> hehe
11:18 < Tar-Minyatur:#liferay> At least that's the theory.
11:18 < Tar-Minyatur:#liferay> We will see how it pans out.
11:19 < hufg:#liferay> disable ehcache!
11:19 < hufg:#liferay> 8)
11:27 < hufg:#liferay> Tar-Minyatur: well at least you have seen your prod system!
11:28 < Tar-Minyatur:#liferay> Yay. ;)
11:28 < hufg:#liferay> ours has existed a few months but still unusable
11:28 < hufg:#liferay> perhaps we can get it for the launch date and test it in production hehe
11:30 < Tar-Minyatur:#liferay> We have the "lovely" situation that we are replacing a live system and our new one will be tested against the old one
11:31 < Tar-Minyatur:#liferay> Because "all" we do is exchange some of the underlying architecture.
11:44 < guli:#liferay> hi everybody
11:44 < guli:#liferay> i have an issue with Liferay :'(
11:46 < Tar-Minyatur:#liferay> Don't we all? ;D
11:46 < guli:#liferay> I have a custom portlet Service (MyPluginLocalService). In impl i call expandoValueLocalService.addValue(...).
11:46 < guli:#liferay> After that an exception is thrown but the changs made to Expando values are not rolledBack....
11:47 < guli:#liferay> samone has an idea on this ?
15:22 < jardineworks:#liferay> jhf, rotty3000 -- do you guys know how to get around the scanline error? I upgraded us to 1.7 and 6.1.2GA3 but we are still getting it when we start our staging server
15:22 <@jhf:#liferay> one workaround is to identify the offending images, and delete them :)
15:22 <@jhf:#liferay> I know of three in liferay that cause it.. all tiny little images used to decorate the calendar that can be deleted as a workaround.
15:22 < jardineworks:#liferay> jhf, dude... you've seen the site I am building. That is not an option lol
15:23 <@jhf:#liferay> the other workaround is to load the images into an image editor and re-save them
15:23 < jardineworks:#liferay> jhf, I think I tried that without success
15:23 < jardineworks:#liferay> the delete option I mean
15:23 <@jhf:#liferay> with the RGB colorspace, not the one that they are currently in. can't remember. or make them jpgs or something.
15:23 < jardineworks:#liferay> I thought the bug was fixed?
15:23 <@jhf:#liferay> hmm.. yes in 6.2.. not sure about 6.1.2.. lemme go loko.
15:23 <@jhf:#liferay> look.
15:23 <@jhf:#liferay> (and loco :) )
15:23 < jardineworks:#liferay> loco is what I am becoming right now :)
15:24 <@jhf:#liferay> do you know which images are causing it?
15:24 < jardineworks:#liferay> no idea.
15:24 < jardineworks:#liferay> is there a way to figure that out?
15:24 < jardineworks:#liferay> we have about 100000000 images on this site.
15:25 <@jhf:#liferay> hahaha
15:25 <@jhf:#liferay> exactly that many?
15:25 <@jhf:#liferay> ;-)
15:25 < jardineworks:#liferay> its beautiful. and has lept me awake for about 5 days staright now
15:25 < jardineworks:#liferay> maybe 100000000+1 by the end of today
15:25 < jardineworks:#liferay> +2 by the end of the week with the last one being a picture of me giving the user the finger :)
15:25 < jardineworks:#liferay> haha
15:25 < jardineworks:#liferay> there are seriously hundreds though
15:26 < jardineworks:#liferay> this site is a designers wet dream
15:27 <@jhf:#liferay> is it an option to re-save the offending images (if you knew which ones caused it)?
15:27 < jardineworks:#liferay> possibly.
15:27 <@jhf:#liferay> also, when you say you have a zillion images - are they images in the doc library, or images as part of a theme?
15:27 < jardineworks:#liferay> the issue is that the site uses a lot of png because there are so many layers of beauty
15:28 < jardineworks:#liferay> images in the theme
15:29 <@jhf:#liferay> ok. can you run the "file" command over all the images and see if any are in the "gray+alpha" colorspace (as opposed to RGB or RGBa)?
15:29 <@jhf:#liferay> e.g. I can do this on my unix (mac os) system: file foo.png
15:29 <@jhf:#liferay> and get "jhf-head.png: PNG image data, 82 x 84, 8-bit/color RGB, non-interlaced"
15:29 <@jhf:#liferay> so it's in the RGB colorspace. the ones that were in the "gray+alpha" colorspace triggered the issue.
15:31 < jardineworks:#liferay> jhf, ok there are a few guys on this project with macs... I'll get them to do it.
15:32 < jardineworks:#liferay> in the mean time, where can I see the fix in GitHub?
15:32 < jardineworks:#liferay> if you have it handy...
15:32 <@jhf:#liferay> https://issues.liferay.com/browse/LPS-37920
15:32 <@jhf:#liferay> click the 'commits' tab
15:32 <@jhf:#liferay> https://issues.liferay.com/browse/LPS-37920?page=com.atlassian.jira.plugins.jira-bitbucket-connector-plugin:dvcs-commits-tabpanel
15:33 <@jhf:#liferay> yeah its fixed in 6.2, but I don't think 6.1.2
15:35 < jardineworks:#liferay> jhf, ran the command. all the offending files are aui images.
15:35 < jardineworks:#liferay> :S
15:35 <@jhf:#liferay> as in, AlloyUI, and shipped by Liferay?
15:36 < jardineworks:#liferay> we ran it on our theme. our images come out clean but I am told that the aui images are the culprit
15:36 < jardineworks:#liferay> can I use an ext hook to backport?
15:37 <@jhf:#liferay> yep, you could.
15:37 < jardineworks:#liferay> jhf, wait... apparently we might have found one
15:38 < jardineworks:#liferay> negative
