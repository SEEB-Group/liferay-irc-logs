--- Log opened Thu Nov 21 00:00:21 2013
02:58 < hufg:#liferay> here is the protip of today: do not write invalid html in article structure instructions
02:58 < hufg:#liferay> if displayAsToolTip is true
05:39 < lapache_:#liferay> Hello, does someone use liferay on debian's tomcat ? How to do this plz. I followed http://www.liferay.com/fr/documentation/liferay-portal/6.1/user-guide/-/ai/lp-6-1-ugen11-installing-liferay-on-tomcat-7-0 whithout results
05:59 < lapache_:#liferay> If not how to update tomcat and liferay keeping my website working ?
06:13 < Tar-Minyatur:#liferay> Do you have a specific reason for using manual install over a bundle?
06:37 < lapache_:#liferay> No i'm using a bundle, the website is developped on it, but my problem is that i want to know how to update this for avoid my server being exploited
06:59 < hufg:#liferay> helloo helloo
07:40 -!- mode/#liferay [+o jhf] by ChanServ
08:03 < guli1:#liferay> Hi
08:04 < guli1:#liferay> Is there someone that can help me with Liferay @transactional issue?
09:12 < guli1:#liferay> Hi
09:12 < guli1:#liferay> Is there someone that can help me with Liferay @transactional issue?
09:22 < topolik:#liferay> guli1: perhaps, what's the issue?
09:41 < jardineworks:#liferay> topolik, are variables declared in the theme available in the layout templates?
09:56 < guli1:#liferay> topolik: hey topolik
09:57 < guli1:#liferay> topolik: after 1 day of investigations i've found that the issue is linked to cache.
09:57 < guli1:#liferay> topolik: the transaction are well rollbacked but the cache is not...
09:57 < guli1:#liferay> topolik: i search for documentation on this (dark) side of liferay but i didn't found.... :(
09:58 < guli1:#liferay> sorry the initial issue is that data are not rollbacked when my service throws a PortalException...
10:14 < topolik:#liferay> jardineworks: I believe they are either the same or similar - except what's defined in init.vm
10:14 < topolik:#liferay> guli1: uhm, I think I remember some issue
10:14 < topolik:#liferay> guli1: let me search JIRA
10:17 < guli1:#liferay> topolik: portal.transactional.cache is enabled .
10:22 < jardineworks:#liferay> topolik, except meaning that those in init.vm are not present?
10:22 < topolik:#liferay> jardineworks: right
10:22 < topolik:#liferay> those which are created by init.vm
10:23 < jardineworks:#liferay> gotcha. ok thanks :)
10:23 < topolik:#liferay>  n/p )
10:24 < topolik:#liferay> guli1: just a question - in your transaction, do you use just one thread?
10:25 < guli1:#liferay> i use PortletEntity service mixed with core Liferay services
10:25 < guli1:#liferay> topolik: i can give you some code if you want
10:28 < guli1:#liferay> topolik: i continue searching and it seems that there is localCacheAvailable in EntityCacheImpl, so value is got from the localCache and not from the portalCache.
10:28 < guli1:#liferay> topolik: the portalCache is transactional and not the local.
10:55 < jardineworks:#liferay> topolik, do you know how to include stuff like this <!--[if gte IE 8]><!--> in the portal_normal.vm?
10:57 < guli1:#liferay> topolik: no idea of where i can get documentation on that point?
10:58 < jardineworks:#liferay> i dunno.. the front end wizards put it in lol
10:59 < jardineworks:#liferay> I am getting Uncaught SyntaxError: Unexpected token <  in my chrome console
10:59 < jardineworks:#liferay> I assumed it was from that
10:59 < jardineworks:#liferay> but maybe not
10:59 < jardineworks:#liferay> actually... it looks like it is in ok
11:00 < guli1:#liferay> jardineworks:     <!--[if lte IE 8]>
11:00 < guli1:#liferay> 		<script src="$javascript_folder/respond.min.js"></script>
11:00 < guli1:#liferay>     <![endif]-->
11:00 < guli1:#liferay> jardineworks: i think that the [endif] is missing
11:01 < jardineworks:#liferay> guli1, Nah, I just didn't paste the whole thing :)
11:01 < jardineworks:#liferay>     <!--[if gte IE 8]><!-->
11:01 < jardineworks:#liferay>         <script src="javascripts/vendor/jquery.parallax.min.js"></script>
11:01 < jardineworks:#liferay>         <script src="javascripts/main-banner-parallax-ck.js"></script>
11:01 < jardineworks:#liferay>     <!--<![endif]-->	
11:06 < guli1:#liferay> jardineworks: but you have <!--> that i did't have
11:06 < guli1:#liferay> jardineworks: what do you add this?
11:08 < Tar-Minyatur:#liferay> Is there a default Liferay webservice that can be used to retrieve a rendered journal article?
11:09 < Tar-Minyatur:#liferay> I couldn't find one...retrieving structure, template and content separately does nothing for me.
11:12 < Tar-Minyatur:#liferay> Or is /c/journal/view_article_content the right way to do it?
11:12 < jardineworks:#liferay> guli1, i dunno.. that's a question for the guys :). Looks pointless to me ... but they did that a few places so I left it in.
11:15 < guli1:#liferay> have you try to remove it?
11:17 < jardineworks:#liferay> nope
11:17 < jardineworks:#liferay> drop to client tomorrow... no time for experimentation to be honest :)
11:34 < topolik:#liferay> jardineworks: guli1: guys, I'm sorry, I have some family obligations, will be back in about 2-3hrs, thanks
11:59 < guli1:#liferay> topolik: no problem dude.
12:00 < guli1:#liferay> topolik: i found a way to workaround this issue by disabling the local cache.
12:00 < guli1:#liferay> using in portal.properties
12:00 < guli1:#liferay> ##Disable local cache
12:00 < guli1:#liferay> value.object.finder.thread.local.cache.max.size=0
12:00 < guli1:#liferay> value.object.entity.thread.local.cache.max.size=0
16:25 < jardineworks:#liferay> hey rotty3000 -- do you have a second for a cache question?
16:27 < jardineworks:#liferay> or jhf maybe? -- I am pushing some collections I have (custom model objects) into the cache, but then after a few retrievals (which appear to work without issue) I start getting class cast exceptions
16:30 <@jhf:#liferay> yeah, sorry, that sounds like a rotty3000 question...
16:31 <@jhf:#liferay> I would have to resort to googling :)
16:31 <@jhf:#liferay> which I'm sure you've done..
16:31 < jardineworks:#liferay> yeah
16:31 < jardineworks:#liferay> its random ... or so it seems
16:31 < jardineworks:#liferay> like I said I get a few page refreshes in there no issue.
16:31 <@jhf:#liferay> did you fix the image issue?
16:32 < jardineworks:#liferay> yeah -- told the client to downgrade to 1.6
16:32 < jardineworks:#liferay> hahah
16:32 <@jhf:#liferay> hahah
16:32 < jardineworks:#liferay> problem solved.
16:32 < jardineworks:#liferay> ;)
16:32 < jardineworks:#liferay> release to end client tomorrow so no time to dick around
16:32 < jardineworks:#liferay> but we are going to put the image magick command line stuff into our build scripts to do it on the fly and hope that works... but release is coming so we need to stay on point.
16:33 < jardineworks:#liferay> i'm gonna try an ext plugin patch too for fun i think
16:33 < jardineworks:#liferay> .. the cache issue is only resolved by restarting the server which is BAAAAAAAAAAAAAAAAAAD...
16:34 <@jhf:#liferay> so one restart fixes it forever?
16:34 < jardineworks:#liferay> nope
16:34 < jardineworks:#liferay> fixes it for a few more refreshes
16:34 <@jhf:#liferay> ah
16:34 < jardineworks:#liferay> ALTHOUGH
16:34 < jardineworks:#liferay> ...
16:34 < jardineworks:#liferay> I am doing continous builds as I am actively developing so perhaps that is the issues
16:34 < jardineworks:#liferay> but I am not changing the model definition... hmmm
16:35 <@jhf:#liferay> hmm is right! perhaps you're not fully deploying.. or liferay's cache doesn't get along with CI environments.
16:36 < jardineworks:#liferay> probably the latter.
16:37 < jardineworks:#liferay> question while I have you jhf. In this case I am pulling a list of categories from a service. I have them in a java.util.List. They're going to be the same for all users. I am caching them, but could I also, or would it be better maybe for me to store them in a static member variable for the portlet?
16:38 < jardineworks:#liferay> I am using the cache for the expiration in case they add more... that was my thinking... but really, they are probably never going to change.
16:38 <@jhf:#liferay> is it really impossible that they would change? or just unlikely?
16:38 < jardineworks:#liferay> liek once a year?
16:38 < jardineworks:#liferay> like restart the server kind of often
16:38 <@jhf:#liferay> well requiring a recompile/redeploy just to add a category sounds.. sub-optimal
16:38 < jardineworks:#liferay> they could just redeploy the portlet irght? or I could put a configuration in to reload recipes.
16:39 <@jhf:#liferay> if anything, I'd put it in a config properties file
16:39 <@jhf:#liferay> not in compiled code
16:39 <@jhf:#liferay> like a portlet.properties
16:39 <@jhf:#liferay> then you can create a portlet-ext.properties to configure it later on
16:39 < jardineworks:#liferay> oh! no no
16:40 < jardineworks:#liferay> the categories come from a rest service
16:40 <@jhf:#liferay> oh I see
16:40 < jardineworks:#liferay> there is just no point in calling it for every render
16:40 < jardineworks:#liferay> they are managed externally
16:40 <@jhf:#liferay> is this in a cluster? cause then I don't think you can do that.
16:40 <@jhf:#liferay> (put it in a static member var at runtime)
16:41 < jardineworks:#liferay> hmmm
16:41 < jardineworks:#liferay> it might be
16:41 < jardineworks:#liferay> but would the portlet exist on each server?
16:42 <@jhf:#liferay> yes it would, but if you set a member variable in java, that won't propagate to the other JVMs unless you're using some super-fancy clustering thing that does that (they do exist, I just can't remember their name)
16:43 <@jhf:#liferay> although, you don't need it to be synchronized across a cluster
16:44 <@jhf:#liferay> you just need each node to load the same list at least once.
16:44 < jardineworks:#liferay> jhf, sure. But in this case, lets say for arguments sake i use a static on PortletA. ServerA and ServerB have their own instances and each would pull the categories from the service and store them. Users have sticky sessions so they always go to the same box. You add categories. Redeploy the portlets and since they would go to both servers both servers would then call the service to refresh the list and store in the static member right?
16:45 <@jhf:#liferay> yep,
16:45 <@jhf:#liferay> yep!
16:45 < jardineworks:#liferay> ok -- phew. I had a moment there man.
16:45 < jardineworks:#liferay> :)
16:45 <@jhf:#liferay> so the first time you need the categories list, check to see if you've fetched it. if not, fetch it. if so, just return it. standard dumb cache.
16:45 < jardineworks:#liferay> at least I know the old ticker is still working.
16:45 < jardineworks:#liferay> though it may have just skipped a couple.
17:12 < jardineworks:#liferay> jhf, is it possible to set the page title programatically? for example any time the user goes to a sign in page I want the title bar to say Sign in... not the page tile for whereever they were..
17:14 < jardineworks:#liferay> hmmm maybe this -- com.liferay.portal.util.PortalUtil.setPageTitle(String, title, HttpServletRequest request);
17:18 <@jhf:#liferay> yeah, that should do it for that particular request. but no idea if Liferay overrides that at some other point, since every page (layout) has an html title associated with it via layout config.
17:18 <@jhf:#liferay> bbl
17:20 < jardineworks:#liferay> jhf, I just put it in the JSP at the top of the page.
