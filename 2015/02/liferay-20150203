--- Log opened Tue Feb 03 00:00:45 2015
--- Log opened Tue Feb 03 03:21:52 2015
03:21 -!- Topic for #liferay: Liferay Community Discussion Channel! *THIS CHANNEL IS LOGGED* (Log: http://goo.gl/SMte1N) Plz be patient - timezones matter :)  Please vote Liferay! http://awards.cmscritic.com/vote Liferay 6.2 GA2 RELEASE http://goo.gl/uclhsq   Forum: http://forums.liferay.com Homepage: http://liferay.org User Groups http://goo.gl/WFVtPe Nightly build http://goo.gl/vQngHn
03:21 -!- Topic set by jhf [~cygnuseck@97.101.250.88] [Mon Sep 15 12:22:21 2014]
03:21 [Users #liferay]
03:21 [@ChanServ    ] [ csierra  ] [ jardineworks ] [ modd_   ] [ Tar-Minyatur] 
03:21 [ avinashrbhat] [ doged    ] [ jardineworks_] [ murmie  ] [ Tm_T        ] 
03:21 [ Axxell      ] [ Gorith   ] [ juan__       ] [ Naenyn  ] [ topolik1    ] 
03:21 [ bijoo       ] [ henriquev] [ marcoceppi_  ] [ plekplek] [ vaor        ] 
03:21 [ Bryanstein  ] [ izaera   ] [ mcbonz       ] [ smind   ] 
03:21 -!- Irssi: #liferay: Total of 24 nicks [1 ops, 0 halfops, 0 voices, 23 normal]
03:21 -!- Channel #liferay created Wed Nov 11 15:40:06 2009
03:21 -!- Irssi: Join to #liferay was synced in 5 secs
03:22 < Axxell:#liferay> Caused by: java.lang.IllegalArgumentException
09:28 -!- mode/#liferay [+o jhf] by ChanServ
10:00 < jardineworks_:#liferay> jhf, \o/!
10:00 <@jhf:#liferay> Mr. JardineWorks!
10:00 <@jhf:#liferay> isn't that french for Garden?
10:01 < jardineworks_:#liferay> pretty close .. jardin is garden.
10:01 <@jhf:#liferay> yeah without the 'e'
10:01 <@jhf:#liferay> I thought so. those two years of high school francais really paying off
10:01 < jardineworks_:#liferay> my dad is scottish and the scottish and the french we're pretty friendly against the english for some time :)
10:01 <@jhf:#liferay> mais oui!
10:01 < jardineworks_:#liferay> hahah
10:02 < jardineworks_:#liferay> but there are some that say the origin is norse because of when it showed up in Scotland... around 1103 A.D
10:02 <@jhf:#liferay> oooohhhhh norse! vikings! gnomes and trolls!
10:02 < jardineworks_:#liferay> much more exciting than just being from france.
10:02 < jardineworks_:#liferay> but if I were a betting man, I'd guess french
10:03 < jardineworks_:#liferay> anyway!
10:03 < jardineworks_:#liferay> quick one for you :)
10:04 < jardineworks_:#liferay> I'm wandering into the world of freemarker. Outside of the freemaker website... are there any good resources for using it specifically with LR?
10:05 <@jhf:#liferay> hmmm
10:05 <@jhf:#liferay> good question!
10:06 <@jhf:#liferay> when I made the transition from VM to FM I mostly relied on FM docs. But there are a few blogs on liferay.com, most specifically that show how to use Liferay taglibs from FM
10:06 <@jhf:#liferay> and there was a few blogs from Barrie Selack last year I think showing some advanced FM usage (specically with macros)
10:07 <@jhf:#liferay> https://www.liferay.com/web/bselack/blog/-/blogs/using-freemarker-in-liferay-web-content-wcm-
10:08 < jardineworks_:#liferay> checking..
10:10 < jardineworks_:#liferay> cool -- that looks useful. I was expecting a link to your own blog lol... but ok :)
10:10 <@jhf:#liferay> hahahahaha
10:10 <@jhf:#liferay> barrie is better at FM than I am
10:10 <@jhf:#liferay> but IMO, the biggest benefits are
10:10 <@jhf:#liferay> 1 - no silent errors when you screw up (and you will)
10:10 <@jhf:#liferay> 2 - using taglibs
10:10 <@jhf:#liferay> 3 - builtins !!
10:11 <@jhf:#liferay> oh and 4 - looping constructs are better (there is a 'continue' and 'break' I think)
10:11 <@jhf:#liferay> oh and 5 - metaprogramming
10:11 <@jhf:#liferay> oh and 6 - it's NOT velocity
10:11 < jardineworks_:#liferay> 2 and 3 is why I am leaning towards it. 1 is the one giving me all my headaches at the moment
10:11 < jardineworks_:#liferay> that and .. frustratingly... the "editor" in LR is tripping me up.
10:12 <@jhf:#liferay> yeah........... I don't use it for more than 'token' templates
10:12 <@jhf:#liferay> for real templates, I use intellij
10:12 <@jhf:#liferay> (but don't tell anyone)
10:12 <@jhf:#liferay> whoops.. did I say that out loud?
10:12 < jardineworks_:#liferay> for example, I have an ADT template. I use the ${renderRequest} object from the left hand area, then use the intellisense to choose getAttribute('myvar')
10:12 <@jhf:#liferay> the ONLY reason I don't use it though is that it doesn't do auto-complete for dynamic variabels
10:12 < jardineworks_:#liferay> but that gives me an error!
10:13 <@jhf:#liferay> renderRequest, the one in ADT templates, isn't a "real" request object
10:13 <@jhf:#liferay> it's a hashmap IIRC
10:13 <@jhf:#liferay> I think you have to use get('myvar')
10:13 < jardineworks_:#liferay> right -- Krystov or the forums helped me witht hat
10:13 < jardineworks_:#liferay> but!
10:14 < jardineworks_:#liferay> why does it give me the intellisense as though it were a real object! BLAST YOU!
10:14 <@jhf:#liferay> the ADT editor ?
10:15  * jhf:#liferay fires it up
10:15 <@jhf:#liferay> also, I love that noun 'intellisense'
10:15 <@jhf:#liferay> it sounds cool. does Liferay have that?
10:16 < jardineworks_:#liferay> it did for me
10:16 <@jhf:#liferay> omg
10:16 <@jhf:#liferay> somehow I have all my local Liferay's en francais
10:16 < jardineworks_:#liferay> haha
10:16 <@jhf:#liferay> Mot de passe ? is that like apple sauce?
10:16 < jardineworks_:#liferay> 2 years!
10:17 <@jhf:#liferay> yeah I was helping someone via email with an issue, so I had to put my portal in french to make an animated gif explaining something to them
10:17 <@jhf:#liferay> and now it no goes back
10:17 < jardineworks_:#liferay> haha -- depends on whether or not you use @pp13sau(3 as a password
10:24 <@jhf:#liferay> well I take that back jardineworks_
10:24 <@jhf:#liferay> ${renderRequest.getAttribute("CURRENT_URL")!"dunno"}
10:24 <@jhf:#liferay> that seems to work
10:24 <@jhf:#liferay> and gets me the CURRENT_URL
10:24 <@jhf:#liferay> changing CURRENT_URL to some unknown attribute gets me "dunno"
10:24 <@jhf:#liferay> (this is in a blogs ADT)
10:25 < jardineworks_:#liferay> what if you don't use the !"dunno"
10:25 < jardineworks_:#liferay> ?
10:25 <@jhf:#liferay> yeah that fails because the expression is evaluated to null
10:25 <@jhf:#liferay> and FM can't "print" that
10:25 < jardineworks_:#liferay> I see
10:26 < jardineworks_:#liferay> if I did an #assign first... and then printed the thing I assigned it to?
10:26 < jardineworks_:#liferay> or used the getter util to get a string?
10:28 <@jhf:#liferay> testing..
10:29 <@jhf:#liferay> same
10:29 <@jhf:#liferay> well.. it says
10:29 <@jhf:#liferay> renderRequest.getAttribute("CURRENT_URL12") is undefined.
10:29 <@jhf:#liferay> It cannot be assigned to foo
10:29 <@jhf:#liferay> (when evaluating <#assign foo = renderRequest.getAttribute("CURRENT_URL12") />
10:29 <@jhf:#liferay>  
10:29 <@jhf:#liferay> this is the statement I tried: <#assign foo = renderRequest.getAttribute("CURRENT_URL12") />
10:29 < jardineworks_:#liferay> hmm -- so I should always use the ![default value] ??
10:29 < jardineworks_:#liferay> ah
10:29 < jardineworks_:#liferay> but the getter util might work
10:30 < jardineworks_:#liferay> as long as I know the value is a string for example
10:30 <@jhf:#liferay> yeah if you wrap getterutil with everything it might
10:30 <@jhf:#liferay> <#assign foo = getterUtil.getString(renderRequest.getAttribute("CURRENT_URL12")) />
10:30 <@jhf:#liferay> the problem is that you'll get empty string for $foo
10:30 <@jhf:#liferay> which gets you back to velocity. or worse.
10:31 <@jhf:#liferay> because in velocity sometimnes it would assign the literal string value of the statement to the var
10:31 <@jhf:#liferay> which would give you a clue about what's wrong
10:32 < jardineworks_:#liferay> hmm so I guess the ! to get a default value is the best option
10:32 <@jhf:#liferay> jardineworks: read http://freemarker.org/docs/app_faq.html#faq_picky_about_missing_vars
10:33 <@jhf:#liferay> "Most scripting languages and template languages are rather forgiving with missing variables (and with null-s), and they usually treat them as empty string and/or 0 and/or logical false. This behavior has several problems"
10:33 <@jhf:#liferay> AMEN
10:33 < jardineworks_:#liferay> lol
10:33 <@jhf:#liferay> lol
10:33 <@jhf:#liferay> "Just because it's not know what's your current balance at your bank, can we just say it's $0? Just because it is not known if a patient has penicillin allergy, we can just say he/she doesn't have it"
10:34 <@jhf:#liferay> it says to use ! if you really want to
10:35 <@jhf:#liferay> but "If you use them too often, try to rethink your data-model"
10:35 <@jhf:#liferay> ALSO
10:35 <@jhf:#liferay> there is a hidden method to get at static methods
10:35 <@jhf:#liferay> read the comments of https://issues.liferay.com/browse/LPS-50931
10:36 <@jhf:#liferay> but here's the shortcut: <#assign fields = staticUtil["com.liferay.portlet.dynamicdatamapping.storage.StorageEngineUtil"].getFields(fileEntryMetadata.getDDMStorageId()) />
10:36 <@jhf:#liferay> (this is an example of calling the static method "getFields" of the com.liferay.portlet.dynamicdatamapping.storage.StorageEngineUtil class
10:36 <@jhf:#liferay> it uses 'staticUtil' which is secretly injected for you in the context of Freemarker evaluation in Liferay
10:36 <@jhf:#liferay> staticUtil is part of this set of handy freemarker tools we include
10:37 <@jhf:#liferay> rotty was instrumental in getting them into LR 6.0
10:37 <@jhf:#liferay> see https://issues.liferay.com/browse/LPS-15913
10:37 <@jhf:#liferay> for a little history lesson
10:38 <@jhf:#liferay> somewhere in LR source code you can find out exactly which objects are avilable to you (they should ALL be listed in the template palette but I don't think they all are)
