--- Log opened Wed Feb 04 00:00:50 2015
--- Log opened Wed Feb 04 03:22:05 2015
03:22 -!- Topic for #liferay: Liferay Community Discussion Channel! *THIS CHANNEL IS LOGGED* (Log: http://goo.gl/SMte1N) Plz be patient - timezones matter :)  Please vote Liferay! http://awards.cmscritic.com/vote Liferay 6.2 GA2 RELEASE http://goo.gl/uclhsq   Forum: http://forums.liferay.com Homepage: http://liferay.org User Groups http://goo.gl/WFVtPe Nightly build http://goo.gl/vQngHn
03:22 -!- Topic set by jhf [~cygnuseck@97.101.250.88] [Mon Sep 15 12:22:21 2014]
03:22 [Users #liferay]
03:22 [@ChanServ    ] [ Gorith      ] [ longbeach      ] [ plekplek    ] 
03:22 [ avinashrbhat] [ henriquev   ] [ marcoceppi-sast] [ quercus     ] 
03:22 [ bijoo       ] [ izaera      ] [ mcbonz         ] [ Tar-Minyatur] 
03:22 [ Bryanstein  ] [ jardineworks] [ modd_          ] [ Tm_T        ] 
03:22 [ csierra     ] [ jbub        ] [ murmie         ] 
03:22 [ doged       ] [ juan__      ] [ Naenyn         ] 
03:22 -!- Irssi: #liferay: Total of 22 nicks [1 ops, 0 halfops, 0 voices, 21 normal]
03:22 -!- Channel #liferay created Wed Nov 11 15:40:06 2009
03:22 -!- Irssi: Join to #liferay was synced in 6 secs
09:12 -!- mode/#liferay [+o rotty3000] by ChanServ
10:49 < jardineworks:#liferay> hey rotty3000 can I as you an architecture question?
10:49 <@rotty3000:#liferay> sure
10:51 < jardineworks:#liferay> rotty3000, if I have a portlet where I can configured a scheduler. My scheduler fires and runs. The listener for that scheduler check a table and pulls down a series of "jobs" -- basically reports that have been requested. If I loop over the request and create a "Message" to a custom destination for each job, will they, by default, be executed in parallel?
10:56 <@rotty3000:#liferay> reading..
10:57 <@rotty3000:#liferay> if they are fired as individual jobs, then yes they should be executed in parallel
10:58 <@rotty3000:#liferay> wait...
10:59 <@rotty3000:#liferay> so you have a scheduled listener which is collecting some form of job?
10:59 <@rotty3000:#liferay> ok, I think I see
11:00 <@rotty3000:#liferay> different message destinations should execute in parallel of they are parallel destinations
11:01 <@rotty3000:#liferay> two different destinations should be parallel regardless of whether they are themselves serial
11:03 < jardineworks:#liferay> rotty3000, so I have two job types. BuildReport and UpdateReport. Let's say my scheduled job pulls down 3 "BuildReport" jobs and 2 "UpdateReport" jobs. I'll send 3 messages to the BuildReportMessageListener and 2 message to the UpdateReportMessageListener.
11:03 < jardineworks:#liferay> would that equate to 5 threads running in parallel?
11:03 <@rotty3000:#liferay> not really
11:03 < jardineworks:#liferay> or will the destination process one message at a time?
11:04 <@rotty3000:#liferay> if the listener for either type is a serial destination, then those "messages" will be processed serially
11:04 < jardineworks:#liferay> rotty3000, but if the destination is parallel ... then they will be processed in parallel?
11:04 <@rotty3000:#liferay> yup
11:04 <@rotty3000:#liferay> to some threshold
11:05 < jardineworks:#liferay> hah -- I always though that the parallel just meant multiple destination processing the same message at the same time.
11:05 < jardineworks:#liferay> is the threshold configruable?
11:05 <@rotty3000:#liferay> let's say you set the parallelism of the endpoint to 5, then 5 messages can be processed in parallel, the rest will be queued
11:06 <@rotty3000:#liferay> you can set pretty much the same options you can on a standard threadpool
11:06 < jardineworks:#liferay> and that is part of the settings when you register the destination?
11:06 <@rotty3000:#liferay> min threads, max threads, min free threads.. etc.
11:07 <@rotty3000:#liferay> I believe so
11:07 < jardineworks:#liferay> hah!
11:07 < jardineworks:#liferay> 	public ParallelDestination(
11:07 < jardineworks:#liferay> 		String name, int workersCoreSize, int workersMaxSize) {
11:07 < jardineworks:#liferay> 		super(name, workersCoreSize, workersMaxSize);
11:07 < jardineworks:#liferay> 	}
11:07 < jardineworks:#liferay> how about that :)
11:07 <@rotty3000:#liferay> you got it!
11:07 < jardineworks:#liferay> \o/!
11:07 <@rotty3000:#liferay> an API that makes sense... go figure!
11:07 < jardineworks:#liferay> I <3 Liferay
