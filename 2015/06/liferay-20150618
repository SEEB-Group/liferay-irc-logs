--- Log opened Thu Jun 18 00:00:58 2015
--- Log opened Thu Jun 18 05:23:05 2015
05:23 -!- Topic for #liferay: Liferay Community Discussion Channel! *THIS CHANNEL IS LOGGED* (Log: http://goo.gl/SMte1N) Plz be patient - timezones matter :)  6.2 CE GA4 RELEASE http://goo.gl/AjubK5   Forum: http://forums.liferay.com Homepage: http://liferay.org User Groups http://goo.gl/WFVtPe Nightly build http://releases.liferay.com/portal/nightly-master/
05:23 -!- Topic set by jhf [~cygnuseck@97-101-250-88.res.bhn.net] [Fri Apr 17 17:33:27 2015]
05:23 [Users #liferay]
05:23 [@ChanServ  ] [ g00se       ] [ jbub       ] [ Naenyn  ] [ vsingleton] 
05:23 [ bijoo     ] [ Gorith      ] [ josuebc    ] [ plekplek] 
05:23 [ bodik     ] [ henriquev   ] [ kermitt    ] [ quercus ] 
05:23 [ Bryanstein] [ iDavid_     ] [ MagnoBooter] [ Tm_T    ] 
05:23 [ doged     ] [ jardineworks] [ marcoceppi ] [ topolik ] 
05:23 -!- Irssi: #liferay: Total of 21 nicks [1 ops, 0 halfops, 0 voices, 20 normal]
05:23 -!- Channel #liferay created Wed Nov 11 15:40:06 2009
05:23 -!- Irssi: Join to #liferay was synced in 5 secs
09:37 < hufg:#liferay> hello!
09:37 < hufg:#liferay> i'm trying to make another portal instance but if i'm logged in as omniuser can't access the pages
09:37 < hufg:#liferay> huh?
09:38 < hufg:#liferay>  com.liferay.portal.NoSuchResourcePermissionException: No ResourcePermission exists with the key {companyId=20552, name=com.liferay.portal.model.Layout, scope=4, primKey=20581, roleId=20164}
10:03 < jardineworks:#liferay> hufg, are you one on the main instance? or on the newly created instance?
10:05 < hufg:#liferay> newly created
10:08 < dave_k:#liferay> A coworker created a Liferay Service using a String as Primary Key. Now I have to enable its entities to be used as an asset. Is my hunch correct that if want to call assetEntryLocalService.updateEntry(), the classPK argument must be the PrimaryKey used in service.xml? And because of the method signature, PrimaryKeys have to be of type long? And that I have to restructure the whole Service?
10:09 < jardineworks:#liferay> hufg, but you created the NEW instance from the main instance, correct?
10:09 < hufg:#liferay> yes
10:09 < jardineworks:#liferay> hufg, which version are you on?
10:09 < hufg:#liferay> latest 6.2 ee sp11
10:09 < jardineworks:#liferay> hufg, ok cool... I have that one too.
10:09 < jardineworks:#liferay> hufg, and then when you try to log into your new instance, you get that error?
10:09 < hufg:#liferay> hmm well
10:10 < hufg:#liferay> the thing is it's an external env somewhere
10:11 < hufg:#liferay> i create the portal by logging through the public http address
10:11 < hufg:#liferay> then the first thing i did was to create another instance, i use the public http address as instance virtualhost
10:11 < hufg:#liferay> this is everything with the first user omniadmin
10:11 < hufg:#liferay> after that i'm unable to log into the instance at all with the omni user
10:12 < hufg:#liferay> shouldn't it be possible though?
10:12 < jardineworks:#liferay> dave_k, normally PKs are longs. If you can't change the service, then you could wrap the value in a GetterUtil.getLong() ... sosomething like..
10:13 < jardineworks:#liferay> assetEntryLocalServiceUtil.updateEntry( GetterUtil.getLong(classPkThatIsAString) );
10:13 < hufg:#liferay> then i'm actually unable to log at all
10:14 < jardineworks:#liferay> hufg, the omniadmin doesn't mean you can log into everything... it just means you have access to all portal functions (including those normally restricted to the main instance) from any instance. For example, Portal Instances, and Server Administrator
10:14 < jardineworks:#liferay> those are normally only allowed to be accessed from the main instance.
10:14 < hufg:#liferay> uhuh ok
10:14 < jardineworks:#liferay> but I believe omniadmin users can get to them anywhere.
10:15 < jardineworks:#liferay> but when you craete a new instance, then another "admin" user record will be created, scoped with a different companyId
10:15 < hufg:#liferay> mm ok so uhh how to access that admin
10:15 < jardineworks:#liferay> sooo lets say Main instance admin user is 1234
10:15 < hufg:#liferay> this is wierd
10:15 < jardineworks:#liferay> so you put ominiadmin.users=1234
10:16 < jardineworks:#liferay> but then in the new instance, the admin user is 4567
10:16 < hufg:#liferay> i've got it as default
10:16 < jardineworks:#liferay> .. you log into the new instance with the 4567
10:16 < jardineworks:#liferay> but you need to (I think -- been a while since I used this!) add 4567 to the omniadmin.users property
10:17 < jardineworks:#liferay> once you do, then the 4567 user should be able to see Portal Instances and Service Administration from the Second (non main) instance you created.
10:17 < jardineworks:#liferay> (again, all from memory here .. and it's been a while)
10:18 < hufg:#liferay> yeah ok well nevermind i think i can get some support on monday anyways
10:18 < hufg:#liferay> this shit just took me by surprise
10:18 < hufg:#liferay> figured i got the env working
10:19 < jardineworks:#liferay> can you log into the new instance with test@liferay.com / test?
10:20 < dave_k:#liferay> jardineworks: Thanks, but since the PK is actually a URL String, there's no point in converting it.
10:20 < jardineworks:#liferay> dave_k, :|
10:20 < jardineworks:#liferay> fail/
10:20 < jardineworks:#liferay> lol
10:20 < hufg:#liferay> nope cant
10:20 < jardineworks:#liferay> then I would add another attribute to the entity definition, a long
10:20 < jardineworks:#liferay> remove the PK from the URL
10:21 < jardineworks:#liferay> update the table records ... just increment a value
10:21 < dave_k:#liferay> exactly my reaction, jardineworks m)
10:21 < jardineworks:#liferay> and update the source to use the CounterLocalServiceUtil when creating a new entity
10:21 < jardineworks:#liferay> hufg - can you see the database?
10:22 < hufg:#liferay> yeah probably with some tinkering
10:22 < jardineworks:#liferay> hufg, if you can... select the records from the VirtualHost table. Pick out the companyId for your nnew instance and then query the User_ table filtering by companyId
10:25 < hufg:#liferay> ok let's see
10:26 < hufg:#liferay> ooh it was test@maildomain.com
10:26 < jardineworks:#liferay> ;)
10:27 < dave_k:#liferay> anyway, thanks jardineworks... now I have to break that gently to the project lead... :/
10:28 < jardineworks:#liferay> dave_k, no problem. Good luck :)
10:28 < hufg:#liferay> dave_k: i'd probably check that the service.xml primary key maps to classPK
10:28 < hufg:#liferay> it's not always so obvious
10:29 < hufg:#liferay> before telling hehe
10:30 < hufg:#liferay> jardineworks: there seems to be something wrong with the omniadmin.user prop
10:30 < hufg:#liferay> in theory the first omniadmin should be admin to the other instance
10:30 < hufg:#liferay> s
10:30 < hufg:#liferay> but whatever it works!
10:31 < hufg:#liferay> jardineworks: i got some sick utils in this project
10:31 < jardineworks:#liferay> hufg, does the first admin user (from the default instance) have a user record scoped to the second instance companyId in the user table?
10:31 < hufg:#liferay> someone has made adt/structure/template instllation via deployment
10:31 < hufg:#liferay> + custom fields
10:32 < hufg:#liferay> first time i've seen this
10:32 < hufg:#liferay> no idea i'll probably leave it alone now and see it on monday
10:33 < jardineworks:#liferay> hufg, resources-importer on the theme you mean?
10:35 < hufg:#liferay> hehe i've been told it doesn't work
10:35 < hufg:#liferay> no someone has coded it
10:35 < jardineworks:#liferay> resources-importer?
10:35 < hufg:#liferay> yeah
10:35 < jardineworks:#liferay> I have several themes that would show otherwise.
10:36 < jardineworks:#liferay> we actually use one to build out an entire application on deploy
10:36 < jardineworks:#liferay> all pages, portlets, settings, structures, templates, static content items, adts, etc.
10:36 < hufg:#liferay> hmm interestin
10:36 < hufg:#liferay> g
10:36 < jardineworks:#liferay> we just forked it to add a resource property that allows you to scope the theme to a company (we're in a multi-tenant env as well)
10:37 < jardineworks:#liferay> people told me it was useless.
10:37 < jardineworks:#liferay> the developers would spend 1 - 2 hours at a time manually reconfiguring everything.
10:37 < jardineworks:#liferay> I spent less than a day making the resources definition... now it takes about 3 seconds to build the entire app
10:37 < hufg:#liferay> cool
10:37 < jardineworks:#liferay> and in this case, it actually makes our builds part of a disposable infrastructure solution.
10:38 < hufg:#liferay> my sick utils don't seem so sick now
10:38 < hufg:#liferay> you can do adt/structure/template/custom fields with it np?
10:39 < hufg:#liferay> holy shit you can even do portlet config with it?
10:41 < hufg:#liferay> the customers also sometimes have an excel or whatever for pages definition
10:42 < hufg:#liferay> would be nice to copy paste sed magic into actual page tree
10:43 < jardineworks:#liferay> hufg, I haven't done the custom fields... but the other stuff yeah. In fact, you can just put a freaking LAR file into the thing and it will import the LAR on deployment!
10:43 < hufg:#liferay> :Z yeah but importing whole sites etc haven't personally tried it but i've heard only bad thinsg about it
10:44 < hufg:#liferay> like single page lar yeah maybe but for example environment export import, not a chance
10:49 < hufg:#liferay> i'm out have a nice weekend!
11:46 < ulrichschmid:#liferay> Hey guys.  I've created a blog post with what I hope will become a link to an image viewer to show an image.  To make this happen, I've created a new page, dropped the Media Gallery portlet on the page and can browse down to my image to view it, but can I get a direct link to this page which will directly show my image so I can use that URL in as the link in my blog post?
11:56 < modd:#liferay> hi ulrichschmid
11:57 < modd:#liferay> use the document library portlet, not the gallery
11:57 < modd:#liferay> there you can browse down to your image and copy the link
11:59 < modd:#liferay> viele grüße nach göttingen
12:04 < ulrichschmid:#liferay> Hey, thanks, that worked. But I don't want to display all the image metadata. I'd like to have a nice end user experience, if possible.
12:05 < modd:#liferay> basically, you don't need all the url parameters at the end of the url
12:05 < modd:#liferay> it will still work
12:06 < modd:#liferay> so cut everything behind the filename
12:07 < modd:#liferay> or you could use this to get a custom url: https://www.liferay.com/de/marketplace/-/mp/application/46084347
12:09 < ulrichschmid:#liferay> Sorry for the long paste, but I'm unsure about what to chop off http://coptot.manuscriptroom.com/images?p_p_id=20&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&_20_struts_action=%2Fdocument_library%2Fview_file_entry&_20_redirect=http%3A%2F%2Fcoptot.manuscriptroom.com%2Fimages%3Fp_p_id%3D20%26p_p_lifecycle%3D0%26p_p_state%3Dnormal%26p_p_mode%3Dview%26_20_entryEnd%3D20%26_20_displayStyle%3D%26_20_viewEntries%3D1%26_20_viewFo
12:09 < ulrichschmid:#liferay> lders%3D1%26_20_folderStart%3D0%26_20_action%3DbrowseFolder%26_20_struts_action%3D%252Fdocument_library%252Fview%26_20_folderEnd%3D20%26_20_entryStart%3D0%26_20_folderId%3D22947&_20_fileEntryId=23135
12:10 < modd:#liferay> oh
12:10 < modd:#liferay> well
12:11 < modd:#liferay> do you want to have a link to the image itself or to the page which shows the image
12:12 < modd:#liferay> because your url points to the page
12:12 < modd:#liferay> not the image
12:12 < ulrichschmid:#liferay> Actually, I would like to have a nice image viewer for the end user
12:15 < modd:#liferay> ok, so maybe the media gallery is better in this case
12:16 < modd:#liferay> because you can set the root folder as a configuration so the user gets a nice image viewer other the whole folder
