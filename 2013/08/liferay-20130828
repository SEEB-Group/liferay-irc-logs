--- Log opened Wed Aug 28 00:00:18 2013
02:15 < Axxell:#liferay> Hey guys, still trying to get nested groups in AD to work with ldap on liferay
02:15 < Axxell:#liferay> trying to do what they have here http://www.liferay.com/community/forums/-/message_boards/message/16668284
02:48 < sgeef:#liferay> I'm trying to get The workflowTask of an defined JournalArticle.. but can't manage to achieve this.. any ideas?
03:21 < sgeef:#liferay> Anyone here with experience of workflow.
03:21 < sgeef:#liferay> ?
03:53 < Axxell:#liferay> so has anyone tried to get nested groups imported to liferay?
04:45 < Tar-Minyatur:#liferay> *sigh*
04:45 < Tar-Minyatur:#liferay> Morning...
04:46 < Tar-Minyatur:#liferay> When I load our theme plugin and call a page that uses this theme, I get an infinite loop and on the console something about the InvokeFilterChain is being repeated over and over again.
04:46 < Tar-Minyatur:#liferay> Anybody ever encountered something like this? I have no clue where to start debugging. :-/
04:51 < mls_:#liferay> hi there
05:13 < topolik:#liferay> Tar-Minyatur: hi, can you share the call stack?
05:15 < Tar-Minyatur:#liferay> Not really. All I can see in the console is the same three lines repeated over and over.
05:16 < Tar-Minyatur:#liferay> Nowhere in the log files could I find the rest of the stack...
05:16 < topolik:#liferay> so maybe there is some repeating request
05:17 < Tar-Minyatur:#liferay> The odd thing is that the theme is being used in production.
05:18 < Tar-Minyatur:#liferay> I just can't get it to work locally.
05:18 < topolik:#liferay> do you have access logs of the production?
05:18 < topolik:#liferay> perhaps you could see the requests there
05:18 < Tar-Minyatur:#liferay> Nope.
05:18 < topolik:#liferay> and what are the 3 repeating lines?
05:19 < topolik:#liferay> it's from InvokerFilter?
05:19 < Tar-Minyatur:#liferay> I already cross-checked the portal-ext.properties if there are any config options that deactivate any filtering or something...couldn't find anything.
05:19 < Tar-Minyatur:#liferay>         at com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilterChain.doFilter(InvokerFilterChain.java:105)
05:19 < Tar-Minyatur:#liferay>         at com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilter.doFilter(InvokerFilter.java:70)
05:19 < Tar-Minyatur:#liferay>         at com.liferay.portal.kernel.servlet.filters.invoker.InvokerFilterChain.processDoFilter(InvokerFilterChain.java:
05:19 < Tar-Minyatur:#liferay> This is being repeated over and over again.
05:20 < Tar-Minyatur:#liferay> And because it's apparently and inifite loop, I can't get the first lines of the exception. I'm not that fast.
05:30 < Tar-Minyatur:#liferay> There is nothing particularly odd in the access log either.
05:31 < Tar-Minyatur:#liferay> Just my request to / and then all the assets being loaded.
05:31 < Tar-Minyatur:#liferay> Nothing repetitive or something.
05:39 < mls_:#liferay> we're on liferay 5.2.3, and we would like to change the default 404 page (which is by us an empty page with a message : "not found" followed by the url).
05:39 < mls_:#liferay> i've found this : http://www.liferay.com/fr/community/forums/-/message_boards/message/26220931
05:40 < mls_:#liferay> but doesn't seems to work, exceptions occurs when giving a bad url
05:49 < Tar-Minyatur:#liferay> topolik: http://pastie.org/private/kurimlz4mtzdgnwbhvkrha <-- Finally got the entire stack. Not helpful at all, however. :-(
05:52 < topolik:#liferay> hmm, I don't see the point where it starts to repeat
05:53 < Tar-Minyatur:#liferay> It keeps repeating those last three lines.
05:53 < Tar-Minyatur:#liferay> Endlessly.
05:56 < topolik:#liferay> I see now, thanks
05:57 < Tar-Minyatur:#liferay> I found some posts on the forums about a similar problem.
05:57 < Tar-Minyatur:#liferay> However, I'm confused, because apparently the theme works on our live servers.
05:58 < Tar-Minyatur:#liferay> I'm using exactly the same version on my local box.
05:58 < Tar-Minyatur:#liferay> And the posts were always talking about JSF portlets.
05:58 < topolik:#liferay> http://support.liferay.com/browse/LPS-25973
06:01 < topolik:#liferay> question, do you have InvokerFilter in liferay-web.xml ?
06:02 < topolik:#liferay> in any liferay-web.xml
06:05 < Tar-Minyatur:#liferay> On my local box there is no InvokeFilter in there.
06:08 < Tar-Minyatur:#liferay> It's in the web.xml however.
06:08 < Tar-Minyatur:#liferay> Oh. And in the liferay-web.xml of the plugins/hooks.
06:09 < Tar-Minyatur:#liferay> It's pretty much everywhere. ;)
06:20 < topolik:#liferay> bingo ;)
06:21 < topolik:#liferay> (https://www.liferay.com/community/forums/-/message_boards/message/11404138)
06:21 < Tar-Minyatur:#liferay> What about it?
06:22 < Tar-Minyatur:#liferay> Mhm.
06:22 < Tar-Minyatur:#liferay> But why would it work on the live environment?
06:22 < Tar-Minyatur:#liferay> That's sooo odd.
06:23 < topolik:#liferay> seems this problem is caused by Liferay IDE
06:23 < topolik:#liferay> so perhaps the hook was build/deployed using IDE
06:23 < Tar-Minyatur:#liferay> I guess I'll download the most recent build from our build server and check if that works better.
06:34 < Tar-Minyatur:#liferay> Could a different deployment process be the reason?
06:35 < Tar-Minyatur:#liferay> Looks like they put the .war file for the theme directly into webapps/ on the live system rather then deploying it via the deploy/ folger.
06:35 < Tar-Minyatur:#liferay> *folder
07:46 < Tar-Minyatur:#liferay> topolik: I have no clue why, but that seems to be the cause of the problem...
07:52 < Tar-Minyatur:#liferay> I have to place the .war for the theme directly into webapps/ and not into the deploy/ folder. Then the error doesn't occur anymore...
07:54 < Axxell:#liferay> hey guys do i need to configure something with liferay when using SSL on apache with mod_jk?
08:02 < topolik:#liferay> Tar-Minyatur: I think Liferay deploy process takes filters from web.xml and place them to liferay-web.xml. If you have InvokerFilter in your war's web.xml, then this may be the problem also
08:05 < topolik:#liferay> Axxell: perhaps company.security.auth.requires.https=true if you want to force users to use HTTPS for signing
08:05 < Axxell:#liferay> topolik: just wondering when i use mod_jk it doesnt seem to require for the communication between apache and tomcat to be secure..
08:05 < Axxell:#liferay> topolik: and if i just force apache to serve https
08:06 < topolik:#liferay> then I recommend to set web.server.protocol=https
08:06 < topolik:#liferay> this way portal will generate all urls with HTTPS
08:07 < Axxell:#liferay> ok will try
08:07 < topolik:#liferay> and if you have valid certificate, then configure HSTS
08:07 < Axxell:#liferay> HSTS?
08:07 < topolik:#liferay> https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
08:08 < topolik:#liferay> just one header
08:17 < Tar-Minyatur:#liferay> topolik: Mhm. Probably nobody realized that and they just found that deploying it differently works. Thanks for your help. :)
08:17 < topolik:#liferay> y/w :)
08:27 < mls_:#liferay> hi there. I'm trying to customise the 404 error page. In webapps/ROOT/errors/404.jsp I'm putting some new code, including some jstl. I imported the jstl core taglib in the page using import, but got errors saying the core taglib cannot be found in web.xml or jars from the application. Any idea ?
08:45 < Tar-Minyatur:#liferay> Mhm. When I use CDN to serve static context I have to put all the static content that belongs to Liferay over there as well?
08:46 < Tar-Minyatur:#liferay> Looks like JS and Images essential for Liferay are pulled from there as well when I set a cdn host in the settings.
08:46 < Tar-Minyatur:#liferay> That's kind of annoying...
08:58 < jardineworks:#liferay> Tar-Minyatur, maybe -- but it's the best way to use a CDN.
08:58 < jardineworks:#liferay> Tar-Minyatur, waht's the point of having one if you are only going to half use it?
08:59 < Tar-Minyatur:#liferay> Sure. Only problem is: If nobody ever put the Liferay stuff on there, every instance using the CDN will have a broken CP.
09:00 < Tar-Minyatur:#liferay> And I just found that we actually have three machines in every environment. 2 using the CDN and serving the page, one not using the CDN and used as admin instance with a working CP.
09:00 < jardineworks:#liferay> sounds like more of a user error than a system error :)
09:00 < jardineworks:#liferay> sadly, there is no solution to stupid users.
09:01 < jardineworks:#liferay> and I believe they have the monopoly
09:01 < Tar-Minyatur:#liferay> True.
09:01 < Tar-Minyatur:#liferay> My only problem is that I'm setting up a local dev environment.
09:02 < Tar-Minyatur:#liferay> And now I have to chose...use a CDN and have the content displayed correctly...or don't use the CDN and have a working CP.
09:02 < Tar-Minyatur:#liferay> Such a mess.... :-/
09:03 < jardineworks:#liferay> http://www.fromdev.com/2011/06/create-cdn-content-delivery-network.html
09:04 < Tar-Minyatur:#liferay> Our CDN is a Amazon S3...
09:04 < jardineworks:#liferay> Tar-Minyatur, sure -- but if you are setting up a local dev environment then I would consider setting up a local (simple) CDN
09:04 < jardineworks:#liferay> if that is an option I mean
09:04 < Tar-Minyatur:#liferay> Problem is that I have no way of synchronizing it with the live system.
09:05 < Tar-Minyatur:#liferay> Damn it. This project is so messed up...it's giving me a headache.
09:06 < Tar-Minyatur:#liferay> So much stupid and unnecessary bullsh**.
09:06 < Tar-Minyatur:#liferay> All it's supposed to do is serve a website with a responsive design and allow content people to change the content of the pages.
09:07 < Tar-Minyatur:#liferay> And if there is one thing it doesn't do, it's that... -.-
09:09 < jardineworks:#liferay> mls_, I've have that problem before... you need to make sure that you import the correct JSTL version
09:10 < jardineworks:#liferay> mls_, <%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
09:11 < jardineworks:#liferay> I think the old one was similar but missing the /jsp portion of the uri
09:11 < jardineworks:#liferay> same thing for prefix and format.
09:11 < jardineworks:#liferay> sorry -- functions and format
09:11 < jardineworks:#liferay> <%@ taglib uri="http://java.sun.com/jsp/jstl/functions" prefix="fn" %>
09:11 < jardineworks:#liferay> <%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
09:12 < jardineworks:#liferay> and make sure that in your liferay-plugin-package.properties for your hook you include dependencies on the jstl.jar and the jstl tld.
09:14 < mls_:#liferay> I added the library in the WEB-INF/lib/ and it's ok now
09:14 < mls_:#liferay> but.. now, "request" is not found in the jsp
09:14 < mls_:#liferay> which I though it was an object always available from the jsp
09:15 < mls_:#liferay> anything to do to get request from a jsp from webapps/ROOT/errors/my404.jsp ?
09:16 < mls_:#liferay> jardineworks btw for now I was not working in a hook, but directly on a test server files
09:21 < jardineworks:#liferay> mls_, don't do that. Create a JSP hook and use the liferay-plugin-package.properties -- you don't need to deploy the jar with your pluging as it is already available through the portal libs.
09:22 < jardineworks:#liferay> mls_, the request object should be in the JSP ... I've never overridden an error page before (but I will be shortly).. but I am pretty sure that it is there as a result of velocity variables.
09:23 < jardineworks:#liferay> if you use the JSP override I bet most of your pain will vanish
09:28 < mls_:#liferay> jardineworks: whant I'm doing is : 1 : define a page for 404 in portal-ext.properties under "layout.friendly.url.page.not.found=". 2 - create the page in webapps/ROOT/errors/. 3 - in this page I try to get from <c:import url="<%= PortalUtil.getPortalURL(request) + myPageUrl %>"/>. 4 - myPageUrl is actually a page created in the site (hidden) which will be the 404 error page
09:28 < mls_:#liferay> sounds correct or ?
09:34 < jardineworks:#liferay> mls_, I suppose you could do it that way, but it would be so much easier to just create a [xxxx]-404-jsp-hook and leave all the default mappings and everything. At least in my mind it is. The hook (assuming you are using eclipse) will give you the entire 404 page as it is and then you just make your modifications to it. If you ever decide you want to go back to the old one, just undeploy. Problem with the portal-ext changes is tha
09:34 < jardineworks:#liferay> t if you change your mind, you have to restart the portal to get a new property picked up.
09:34 < jardineworks:#liferay> I think the rule of thumb for LR is, if you can do it with a plugin, then you should.
09:44 < mls_:#liferay> ok I understand. But btw, (I'm new to hooks), how to do a new hook project, and how from there to override the 404 page ?
09:49 < jardineworks:#liferay> mls_, are you using eclipse?
09:50 < mls_:#liferay> yes
09:50 < jardineworks:#liferay> right click in the prject pane > New > Liferay Project -- choose hook as the type. When the project is created Right click on the project and choose New > Liferay Hook. A dialog will show up and you check the JSP box. It will then ask you to specify the JSP you want to override ...
09:51 < jardineworks:#liferay> and when it is done you have a META-INF/custom_jsps (or wherever you chose to put it) and a JSP in there which will be 404.jsp. You make your changes and deploy it.
09:51 < jardineworks:#liferay> the server will rename the LIFERAY one to 404.jsp.original and place yours beside it
09:51 < jardineworks:#liferay> when a 404 occurs, yours is served up.
09:51 < jardineworks:#liferay> done.
10:53 < mls_:#liferay> wow nice
10:53 < mls_:#liferay> thanks jardineworks
10:54 < mls_:#liferay> but this method might be for liferay 6 no ? We're on 5.2.3
11:05 < jardineworks:#liferay> mls_, oh
11:06 < jardineworks:#liferay> no JSP hooks in 5.2.3?
11:07 < jardineworks:#liferay> mls_, looks like there are -- you just have to do all the plubming that the Liferay IDE plugins do for you by hand.
11:07 < jardineworks:#liferay> mls_, for example -- http://www.liferay.com/community/wiki/-/wiki/Main/Custom+Attributes+and+JSP+Hooks
11:10 < mls_:#liferay> ok thanks
11:11 < mls_:#liferay> we need liferay 6, my fingers are bored
11:12 < jardineworks:#liferay> mls_, definitely. And in particular 6.1. THe customization of struts actions via hook is so powerful.
11:13 < mls_:#liferay> well thanks for the info
11:25 < g33kyboi:#liferay> hi there
11:26 < g33kyboi:#liferay> Pls i need help on how to take full control of the liferay user registration/login portlet
11:30 <@jhf:#liferay> g33kyboi: ok how far have you gotten so far
11:33 < jardineworks:#liferay> g33kyboi, I jsut did this.. what version of LR are you on? (please say 6.1 :) )
11:34 < g33kyboi:#liferay> I'm new to this and i've not been able to figure out anything that works. I can only access the admin front end
11:34 < g33kyboi:#liferay> jardineworks am on 6.1:-D
11:35 < jardineworks:#liferay> g33kyboi,
11:35 < jardineworks:#liferay> oops
11:35 < jardineworks:#liferay> haha
11:36 < jardineworks:#liferay> g33kyboi, alright so you can do it with a combination of JSP Hooks, Struts Actions hooks and a custom Authenticator (if you are looking to authenticate a user with something other than LR)
11:41 < g33kyboi:#liferay> any link where i can get a guide on this?
11:56 < g33kyboi:#liferay> thank you. i figured it out
11:58 < jardineworks:#liferay> g33kyboi, sorry -- just on a call. I didn't find a guide, I just carawled through the portal source and figured out piece meal what things to change.
12:03 < g33kyboi:#liferay> :)
--- Log closed Thu Aug 29 00:00:19 2013
