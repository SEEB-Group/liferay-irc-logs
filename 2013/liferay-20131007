--- Log opened Mon Oct 07 00:00:51 2013
03:18 < hufg:#liferay> helloo helloo
03:18 < hufg:#liferay> any ideas how to programmatically define the used deployment of theme? 8)
04:41 < Tar-Minyatur:#liferay> hufg: What exactly do you mean? I don't really get it. Maybe it's too early and my brain is still booting up. ;)
04:41 < hufg:#liferay> let's say i make a two deployments in 5h and then  want to identify which one a page request uses
04:42 < hufg:#liferay> probably won't be easy and not worht the hassle
04:42 < hufg:#liferay> just playing with the idea
04:47 < hufg:#liferay> huu where is the global properties template
04:47 < hufg:#liferay> never seen it
04:47 < hufg:#liferay> 8)
04:50 < hufg:#liferay> Tar-Minyatur: we have some hilarious caching issue figured it could help
04:50 < hufg:#liferay> got 3 different themes running on the site
04:50 < Tar-Minyatur:#liferay> Ah. Mhm. Tricky doesn't even cut it I think.
04:51 < hufg:#liferay> it's particularly funny when there is some wierd fuck up with parsed vm files, it appears that a single velocity file can be from cache or where ever
04:51 < Tar-Minyatur:#liferay> The only easy soulution I can come up with now is placing a HTML comment with the theme version in the portal-normal.vm or something like that.
04:51 < hufg:#liferay> like edit two vm files and the other one depends on the other and remove or rename variable and then update the dependency and then deploy ---> null pointer
04:55 < Tar-Minyatur:#liferay> "soulution" is a nice typo. A solution with soul. Great stuff. ;D
04:56 < Tar-Minyatur:#liferay> hufg: I'm no expert, but Liferay has some serious caching going on. This holds especially for templates.
04:58 < Tar-Minyatur:#liferay> I think there is a property that allows you to deactivate most of the template caching for development purposes.
06:02 < hufg:#liferay> hehe soulution
06:02 < hufg:#liferay> yeah
06:03 < hufg:#liferay> but i eventually have to deploy this to production  where caching will be enabled
06:04 < hufg:#liferay> i have a hilarious script
06:05 < hufg:#liferay> once a day it prints out quotes by sed'ing itself if added to linux user profile
06:15 < hufg:#liferay> back to previous topic, booting the domain for deployments sucks
06:20 < hufg:#liferay> add the mvc spring 6.1 ga2 bug to the equation and it's pzzz zz
06:20 < hufg:#liferay> mvc spring portlet
08:40 < hufg:#liferay> what does the LocaleTransformerListener actually do?
09:00 < hufg:#liferay> only com.liferay.portlet.journal.util.LocaleTransformerListener seems relevant to vanilla liferay
09:01 < hufg:#liferay> not sure if it even is
12:11 < jardineworks:#liferay> anyone still around in here?
12:11 < jardineworks:#liferay> I have a mckey mouse question ... but I am a bit of a n00b with themes :0
12:11 < jardineworks:#liferay> :)
12:12 < jardineworks:#liferay> if I make my own vm template ... footer.vm, then to include it in the portal normal vm I just do #parse( "$full_templates_path + "portal_footer.vm") right?
12:39 < topolik1:#liferay> jardineworks: try #parse( "$full_templates_path/portal_footer.vm")
12:41 < jardineworks:#liferay> topolik1, got it but thanks! :)
12:41 < topolik1:#liferay> ah, ok :)
12:57 < jardineworks:#liferay> topolik1, you still there?
12:57 < topolik1:#liferay> yes
12:58 < jardineworks:#liferay> topolik1, is it possible to do the same thing with a theme that you do with a portlet ... by way of external references? or do I need to put the script tags in the template to accomplish that?
12:59 < topolik1:#liferay> uhm, I'm not sure I understand
12:59 < topolik1:#liferay> you can include javascript files together with your theme
12:59 < topolik1:#liferay> and reference it from the template
12:59 < topolik1:#liferay> if you mean this?
13:01 < jardineworks:#liferay> so for example... http://www.jquery.com/files/jquery.min.js .... which I know is not a real url, but pretend :)
13:02 < jardineworks:#liferay> in a portlet I can <javascript-footer-... etc and put the url in. But there is no such animal in a theme so does that mean that I just put the script tag in the template?
13:58 < jardineworks:#liferay> topolik1, what is the context of a VM file during rendering? I have templates/footer/footer.vm and I am trying to reference an image as ../../images/...jpg but it can't find it. images is at the same level as templates, so I don't understand why it can't find it
13:58 < jardineworks:#liferay> topolik1, is there a way to represent the docroot of the theme?
14:00 < jardineworks:#liferay> aha -- $themeDisplay.getPathThemeImages()
14:19 < topolik1:#liferay> jardineworks: I'm sorry, had to go AFK
14:22 < jardineworks:#liferay> topolik1, no worries... I remember better sometimes when I dig a little myself :)
14:22 < topolik1:#liferay> regarding the <javascript-footer- animal
14:23 < topolik1:#liferay> I haven't seen anything like this in wild
14:23 < topolik1:#liferay> there could be something in look_and_feel.xml
14:23 < topolik1:#liferay> I check XSD
14:24 < jardineworks:#liferay> I found that there is a #js dorective for VM.
14:25 < jardineworks:#liferay> Since they are globlal, I think it makes sense to #js them in the portal_normal.vm
14:27 < topolik1:#liferay> hmm
14:27 < jardineworks:#liferay> topolik1, do you know how to get jquery to work with 6.1.1 CE
14:27 < topolik1:#liferay> should work OOTB?
14:28 < jardineworks:#liferay> the refernces to $ are broken
14:28 < topolik1:#liferay> uhm
14:28 < topolik1:#liferay> ok, did you try to namespace it, or how is it called?
14:28 < topolik1:#liferay> I know there is something in JQuery
14:29 < topolik1:#liferay> btw, for CSS you can override main/custom.css where you can import your custom styles
14:29 < jardineworks:#liferay> yeah I thought I read somewhere that $ could not be used to reference it? you needed to use jQuery.[etc]
14:29 < topolik1:#liferay> I don't know if anything similar as the CSS is for JS
14:29 < jardineworks:#liferay> for the css I just added a @import to main.css for my custom file.
14:29 < topolik1:#liferay> anyway, I didn't find the #js directive :(
14:29 < topolik1:#liferay> css - good ! :)
14:30 < jardineworks:#liferay> the #js thing seems to work. I found a post of the forums where David said that was how you used it in VM
14:31 < jardineworks:#liferay> I'm not getting and JS exception of VM exceptions so it must be ok
14:32 < topolik1:#liferay> jQuery.noConflict()
14:32 < jardineworks:#liferay> I just put that anywhere?
14:33 < jardineworks:#liferay> I mean... in the header?
14:33 < topolik1:#liferay> or you could use jQuery("xxx") instead of $("xxx")
14:33 < topolik1:#liferay> yes, I believe so
14:33 < topolik1:#liferay> I always forget everything once I stop using it :D
14:34 < jardineworks:#liferay> so if I use the noConflict() (which rings a bell) if you allow me to use $?
14:35 < topolik1:#liferay> http://api.jquery.com/jQuery.noConflict/
14:35 < topolik1:#liferay> got it
14:36 < topolik1:#liferay> so it seems with that statement jQuery reloads everything into jQuery and leave $ for the original framework that used it before
14:36 < topolik1:#liferay> the examples are obvious
14:37 < jardineworks:#liferay> topolik1, but that means using JQuery.noConflict(), I would have to change all the references from $ to jQuery.
14:38 < topolik1:#liferay> hmm, right
14:40 < jardineworks:#liferay> what if I did $.noConflict() instead :)
14:41 < topolik1:#liferay> that would work if $ is bound to some older jQuery
14:41 < topolik1:#liferay> do you know who owns $?
14:41 < topolik1:#liferay> I'd appreciate any JS guy here :)
14:42 < jardineworks:#liferay> well, the site dev gave me the templates and he used JQuery... and libraries that depend on jQuery for the pages.
14:42 < jardineworks:#liferay> so i would assume no conflict .. but I dunno is AUI causes problems
14:44 < jardineworks:#liferay> really, all I know is what firebug is telling me :)
14:57 < jardineworks:#liferay> topolik1, if I have THEME/js/main.js, and THEME/main/blah.js and THEME/js/subfolder/blah2.js
14:57 < jardineworks:#liferay> topolik1, do you know if LR loads all of them? will it crawl subfolders?
14:58 < topolik1:#liferay> uhm, don't know\
14:58 < topolik1:#liferay> I try to look
15:01 < topolik1:#liferay> bottom.jsp:
15:01 < topolik1:#liferay> <script src="<%= HtmlUtil.escape(PortalUtil.getStaticResourceURL(request, themeDisplay.getPathThemeJavaScript() + "/main.js")) %>" type="text/javascript"></script>
15:02 < topolik1:#liferay> so - nope, it just loads the theme/js/main.js
15:02 < topolik1:#liferay> however, finally I found the JS macro: https://github.com/liferay/liferay-portal/blob/6.1.1-ga2/portal-impl/src/VM_liferay.vm
15:05 < jardineworks:#liferay> topolik1, ah. So i need to do #js("$themeDisplay.getPathThemeJavaScript()/javascripts/vendor/jquery.parallax.min.js")
15:05 < topolik1:#liferay> yes, seems so
15:06 < topolik1:#liferay> and it's also good to include timestamp
15:06 < topolik1:#liferay> the file modified time
15:06 < jardineworks:#liferay> ?
15:06 < jardineworks:#liferay> because of caching?
15:06 < topolik1:#liferay> browser may (and will) cache that file
15:06 < topolik1:#liferay> yes
15:07 < topolik1:#liferay> and when you redeploy your theme you can get into troubles
15:08 < topolik1:#liferay> #set ($js_main_file = $htmlUtil.escape($portalUtil.getStaticResourceURL($request, "$javascript_folder/main.js")))
15:09 < topolik1:#liferay> it's from here: https://github.com/liferay/liferay-portal/blob/6.1.1-ga2/portal-web/docroot/html/themes/_unstyled/templates/init.vm#L54
15:10 < topolik1:#liferay> the $portalUtil.getStaticResourceURL will add the other options
15:11 < topolik1:#liferay> you could try:
15:11 < topolik1:#liferay> #js( $htmlUtil.escape($portalUtil.getStaticResourceURL($request, "$javascript_folder/vendor/jquery.parallax.min.js"))) )
15:12 < jardineworks:#liferay> awesome. Thanks topolik1 ... JS issues gone. EHF
15:12 < jardineworks:#liferay> (electronic high five -- not european handball federation :) )
15:12 < topolik1:#liferay> :D
15:12 < topolik1:#liferay> ufff, glad we make it
15:13 < topolik1:#liferay> ✌
--- Log closed Tue Oct 08 00:00:53 2013
