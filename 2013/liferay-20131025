--- Log opened Fri Oct 25 00:00:43 2013
04:02 < hufg:#liferay> helloo helloo anyone freed liferay from the oppression of dynamiccssfilter?
04:27 < topolik:#liferay> hi hufg, I have a question related to  https://issues.liferay.com/browse/LPS-40416
04:28 < hufg:#liferay> yes go for it
04:28 < topolik:#liferay> can you reproduce it on 6.2?
04:28 < hufg:#liferay> i have not tried
04:28 < topolik:#liferay> because he can't
04:28 < topolik:#liferay> if not, Alex is going to close it and create another ticket for the other
04:28 < hufg:#liferay> have you tried with upgrade
04:28 < topolik:#liferay> for the other issues
04:29 < hufg:#liferay> has he
04:29 < topolik:#liferay> well, it's related to the upgrade, right?
04:29 < topolik:#liferay> so it can't be tried without upgrading?
04:29 < hufg:#liferay> yes :D
04:29 < hufg:#liferay> the problem is that with the steps and the commit he made it should be fixed almost now
04:30 < hufg:#liferay> https://issues.liferay.com/secure/attachment/79124/test-case-stacktrace.txt
04:30 < hufg:#liferay> fixed
04:30 < hufg:#liferay> https://issues.liferay.com/secure/attachment/79125/publish-1.txt
04:30 < hufg:#liferay> not fixed
04:30 < topolik:#liferay> he only didn't try on glasfish
04:30 < hufg:#liferay> same cause (local to nonlocal)
04:31 < topolik:#liferay> is it possible for you to update the steps?
04:31 < hufg:#liferay> he should examine the code how to trigger that method call
04:31 < topolik:#liferay> so that Alex knows how to reproduce it?
04:31 < hufg:#liferay> well hmm
04:32 < topolik:#liferay> he needs somehow to reproduce it to fix it
04:32 < hufg:#liferay> yes i understand that
04:32 < topolik:#liferay> I believe if you provide him with the new steps to reproduce what's not yet fixed, he's going to fix it
04:33 < topolik:#liferay> his problem is that he can't reproduce it
04:33 < topolik:#liferay> or perhaps don't know what to reproduce
04:33 < hufg:#liferay> mmh yes now i see he committed the fix for the reproducable part
04:34 < hufg:#liferay> the problem is this
04:34 < hufg:#liferay> Steps made in our environment:      Upgrade to 6.1 GA3     Publish, this will result into stacktrace included in publish-1.txt
04:35 < hufg:#liferay> i have no way of reproducing the state of document library from that
04:35 < hufg:#liferay> the best i could come up with was the test case with bundle
04:36 < hufg:#liferay> while i understand that you need a test case
04:36 < hufg:#liferay> sec
04:43 < hufg:#liferay> hwo do you test upgrades?
04:45 < hufg:#liferay> this is a very hard problem without understanding the root root cause
04:46 < hufg:#liferay> the best hope for reproducing this is to have a dl full of stuff by using everything OR figure out the root root cause and go from there
04:46 < hufg:#liferay> or it could be accepted that the local to non local calls shouldn't happen
04:47 < hufg:#liferay> but i certainly understand your position :/
04:48 < hufg:#liferay> the thing is i could take our GA2 system and upgrade it to latest 6.2 and debug it, but i seriously cannot do this
04:49 < hufg:#liferay> hehe
04:49 < hufg:#liferay> ok ok maybe i could sell it by telling them that there will be a showstopper in 6.2 if we don't debug it
05:11 < hufg:#liferay> ahh yees yees GA2 -> 6.2 rc5 upgrade fails on control panels
05:13 < hufg:#liferay> portlets
05:15 < hufg:#liferay> https://github.com/liferay/liferay-portal/blob/master/portal-impl/src/com/liferay/portal/upgrade/v6_2_0/UpgradePortletPreferences.java#L73 control panel portlets what ever they may be with layout friendlyurl of /manage have typesettings null
05:16 < hufg:#liferay> -> nullpointer exception
05:18 < topolik:#liferay> soooo? :D
05:18 < hufg:#liferay> soo?
05:20 < hufg:#liferay> so the upgrade process is broken from GA2 ->6.2 rc5
05:20 < hufg:#liferay> no wonder upgrades are hard when the SIMPLEST things are not done correctly
05:28 < topolik:#liferay> ok, but this is a different issue, right?
05:29 < topolik:#liferay> with control panel portlets
05:29 < hufg:#liferay> yes
05:29 < topolik:#liferay> hmm
05:29 < hufg:#liferay> but i need to upgrade to debug
05:29 < topolik:#liferay> got it
05:30 < hufg:#liferay> in GA3 the same portlest have an empty string
05:30 < hufg:#liferay> so there is your problem
05:33 < hufg:#liferay> you could start paying me for issues to keep the proper motivation *wink wink*
05:33 < topolik:#liferay> http://ulozto.net/xzPQL7cE/upgrade-patch-zip
05:33 < topolik:#liferay> I tried to fix the UpgradePortletPreferences class
05:33 < topolik:#liferay> can you please unzip that class into liferay/WEB-INF/classes folder?
05:34 < topolik:#liferay> ouch, bug
05:35 < topolik:#liferay> let me reupload
05:36 < topolik:#liferay> http://ulozto.net/xLZVJNjS/upgrade-patch-zip
05:36 < topolik:#liferay> can you test it now? thanks! :)
05:36 < topolik:#liferay> btw. yes, any feedback on upgrade is important :)
06:26 < hufg:#liferay> ajaj blocked
06:27 < hufg:#liferay> what did you modify?
06:29 < hufg:#liferay> if (typeSettings == null || typeSettings.contains(portletId))
06:29 < hufg:#liferay> i believe is the correct approach
06:45 < hufg:#liferay> and continue is completely unnecessary more like if (typeSettings != null && typeSettings.contains(portletId)){deletePortletPreferences(portletPreferencesId);}
06:55 < topolik:#liferay> ajaj blocked?
06:56 < topolik:#liferay>  if (typeSettings == null || typeSettings.contains(portletId)) << that's wrong
06:57 < topolik:#liferay> the code is trying to delete unnecessary portlet preferences
06:57 < topolik:#liferay> mainly, preferences of portlets that are not on the page
06:58 < topolik:#liferay> if typeSettings == null or empty, that means there is no portlet
06:58 < hufg:#liferay> yes and it continues
06:58 < hufg:#liferay> to the next one
06:58 < topolik:#liferay> and all portlet preferences associated to that page must be deleted
06:58 < topolik:#liferay> because there are no portlets on the page
06:58 < topolik:#liferay> but this doesn't apply on control_panel
06:58 < topolik:#liferay> where portlets displayed in control_panel are not based on typeSettings
06:59 < topolik:#liferay> but on <control-panel-entry> definition in liferay-portlet.xml
06:59 < hufg:#liferay> yes so continue will skip right over
06:59 < hufg:#liferay> most file storing websites are blocked
06:59 < topolik:#liferay> uhm
07:00 < topolik:#liferay> http://topolik.cz/temp/upgrade-patch.zip
07:00 < hufg:#liferay> ok cool
07:01 < hufg:#liferay> but inmo if (typeSettings == null || typeSettings.contains(portletId))  would still be correct hehe
07:01 < topolik:#liferay> nope
07:02 < topolik:#liferay> if typeSettings == null and there are portlets (you are in the while cycle) these should be deleted
07:02 < topolik:#liferay> but I believe there can be NPE
07:02 < topolik:#liferay> :)
07:03 < topolik:#liferay> should be if(typeSettings != null && typeSettings.contains(portletId)) { ... }
07:03 < hufg:#liferay> no
07:03 < topolik:#liferay> haha :D
07:03 < topolik:#liferay> ok, why?
07:03 < hufg:#liferay> if typeSettings == null typeSettings.contains wont be evaluated
07:04 < topolik:#liferay> yes, because there is nothing inside
07:04 < hufg:#liferay> no it won't be evaluated because java won't evaluate it
07:04 < hufg:#liferay> no npe
07:04 < topolik:#liferay> what it means "java won't evaluate it" ?
07:05 < topolik:#liferay> String typeSettings = rs.getString("typeSettings");
07:05 < topolik:#liferay> rs.getString() may return null
07:05 < hufg:#liferay> that java specification says that if a left hand operand in or is TRUE the right hand operand will not be evaluated
07:05 < hufg:#liferay> thus typeSettings == null || typeSettings.contains(portletId) --> continue; canno't produce NPE
07:06 < topolik:#liferay> right now in the code, there can be NPE
07:06 < hufg:#liferay> yes yes right now i know that :D
07:06 < topolik:#liferay> ah, ok :)(
07:06 < topolik:#liferay> I wanted to say just that  :)
07:06 < hufg:#liferay> hehe yeah
07:06 < hufg:#liferay> [12:13] <hufg> https://github.com/liferay/liferay-portal/blob/master/portal-impl/src/com/liferay/portal/upgrade/v6_2_0/UpgradePortletPreferences.java#L73 control panel portlets what ever they may be with layout friendlyurl of /manage have typesettings null
07:06 < hufg:#liferay> i knew it some hours ago!
07:06 < hufg:#liferay> 8)
07:07 < topolik:#liferay> hmmm, so, during the upgrade you got NPE?
07:07 < hufg:#liferay> yess
07:07 < topolik:#liferay> haha
07:07 < topolik:#liferay> good
07:10 < hufg:#liferay> dunno about that
07:10 < hufg:#liferay> this only proves you have 0 infrastructure to support migrations
07:11 < hufg:#liferay> GA3 works GA2 doesn't --> no testing with GA2 and it's rc5
07:11 < hufg:#liferay> it should be trivial to test the upgradeprocesses through any number of versions
07:12 < hufg:#liferay> testing testing testing
07:12 < topolik:#liferay> I agree
07:12 < topolik:#liferay> I don't know about the infrastructure
07:12 < hufg:#liferay> dunno
07:12 < topolik:#liferay> but I know you can always make a mistake and create regression
07:12 < hufg:#liferay> yes
07:12 < topolik:#liferay> and even automated upgrade testing may not catch this issue
07:12 < hufg:#liferay> true
07:13 < hufg:#liferay> but this one should be catched
07:13 < topolik:#liferay> for this one you need to browse control panel
07:13 < hufg:#liferay> no for this one you need to run the file from GA2 -> 6.2
07:13 < topolik:#liferay> nope
07:13 < topolik:#liferay> if you have clean DB you won't catch it
07:13 < hufg:#liferay> you will
07:13 < topolik:#liferay> because the portlet preferences are created during portlet render
07:13 < topolik:#liferay> if you never display the page, the preferences won't be created
07:13 < hufg:#liferay> uhuh and?
07:14 < hufg:#liferay> ah
07:14 < topolik:#liferay> and you get 0 results in the query
07:14 < topolik:#liferay> it's a side effect
07:14 < hufg:#liferay> ok
07:14 < topolik:#liferay> you would have been prepared for it to prepare the testing data properly
07:15 < topolik:#liferay> nevermind, this is just a theoretical discussion :)
07:15 < topolik:#liferay> you found the bug and I fix it
07:15 < topolik:#liferay> and that's why community is so important
07:20 < hufg:#liferay> mm
07:21 < hufg:#liferay> ok i'll test the class in 30mins or so
07:22 < hufg:#liferay> my archive manager is not working properly
07:56 < hufg:#liferay> i've usually used the archive manager in ubuntu to modify wars and jars directly
07:56 < hufg:#liferay> but now dunno it's brooken
07:57 < topolik:#liferay> do you ubuntu?
07:57 < hufg:#liferay> yes
07:57 < topolik:#liferay> can you just copy that file to WEB-INF/classes
07:57 < topolik:#liferay> and unzip ?
07:58 < hufg:#liferay> yeah it's done now, i will just need to revert my GA2 env
07:58 < hufg:#liferay> takes some 20mins
07:58 < hufg:#liferay> don't have a virtualmachine atm
07:58 < topolik:#liferay> uhm
07:58 < topolik:#liferay> just restoring the DB from backup doesnt' work?
07:59 < hufg:#liferay> yes it will work but it takes 20min to restore the DB
07:59 < topolik:#liferay> ouch
07:59 < hufg:#liferay> so that's why 20min
07:59 < topolik:#liferay> got it
07:59 < hufg:#liferay> i have made scripts for copying any environment db to other env db
08:00 < hufg:#liferay> single command and then wait
08:00 < hufg:#liferay> i'd rather wait 20min than work extra hehe
08:01 < hufg:#liferay> for this upgrade stuff i'd use a virtualmachine
08:10 < modd_:#liferay> hi
08:11 < modd_:#liferay> is there a class in liferay, which allows to read a custom property file by path+filename and return a map..liek PropsUtil just for custom files
08:15 < modd_:#liferay> like*
08:33 < hufg:#liferay> topolik: ok my archive manager made a miraculous revification
08:36 < topolik:#liferay> hufg: what DB do you use?
08:37 < hufg:#liferay> oracle
08:37 < hufg:#liferay> 11gr2 xe in dev
08:47 < topolik:#liferay> hufg: https://issues.liferay.com/browse/LPS-41688
08:47 < hufg:#liferay> gr8
08:48 < hufg:#liferay> topolik: yes no npe now
08:48 < hufg:#liferay> what did you do?
08:49 < topolik:#liferay> in your fix I excluded control panel layout
08:49 < topolik:#liferay> to be sure that it really is in control panel
08:49 < hufg:#liferay> mmh
08:49 < topolik:#liferay> but the fix I sent to Ray just tested typeSettings != null
08:49 < topolik:#liferay> based on our later discussion
08:49 < topolik:#liferay> it should work also and is more general
08:50 < topolik:#liferay> https://github.com/topolik/liferay-portal/commit/4a76b90a8d159d09e555c88189f4be9446f71231
08:51 < hufg:#liferay> i don't have the sql source but could it be possible the control panel portlets are made differently in GA3, i believe in GA3 EMPTY_CLOB() has been used for control panel portlet type settings
08:51 < hufg:#liferay> what i'm saying should the migration process include an update where they are updated to EMPY_CLOB() in GA2 -> GA3
08:52 < hufg:#liferay> then the existing works
08:52 < hufg:#liferay> i'm trying to say now you have a different db coming from GA3 to 6.2 than with GA2 to 6.2
08:52 < hufg:#liferay> does it matter, no idea but on a philosophical stand point
08:53 < hufg:#liferay> not sure about this
08:53 < hufg:#liferay> just a thought
08:53 < topolik:#liferay> well, I don't know
08:59 < hufg:#liferay> ahh stackoverflow
09:11 < dblessing:#liferay> is there any liferay foo that allows people to do cool stuff like the liferay.com homepage? assuming it's just javascript they did but thought i'd ask
09:16 < topolik:#liferay> hufg: what does that mean? successful upgrade? :)
09:19 < hufg:#liferay> topolik: no, a stackoverflow!
09:20 < topolik:#liferay> where? can you post the call stack?
09:20 < hufg:#liferay> just enabled debug logs and increased stack size to 1g lol
09:20 < hufg:#liferay> mm
09:23 < hufg:#liferay> 1g was enough
09:23 < hufg:#liferay> :D
09:24 < jardineworks:#liferay> dblessing, I'm building a site with that kinda mayhem right now. No magic, just templating
09:30 < hufg:#liferay> topolik: https://gist.github.com/anonymous/44fab24868a490809956
09:30 < hufg:#liferay> was fixed by setting more stack
09:30 < hufg:#liferay> but then
09:31 < hufg:#liferay> https://gist.github.com/anonymous/695e35fe404f4a0dc96e
09:31 < hufg:#liferay> it actually was running after that but unable to login and theme, dl weren't working
09:31 < hufg:#liferay> hehe yeah GA3 upgrade is probably more realistic :D
09:32 < dblessing:#liferay> jardineworks: really? neato. what about that little arrow you can click that zips you down?
09:33 < dblessing:#liferay> i feel like liferay has made leaps and bounds since i stopped following a year ago. makes me kind of sad i'm not around anymore
09:33 < hufg:#liferay> dblessing: what magic?
09:33 < hufg:#liferay> hehe cool stuff i mean
09:34 < hufg:#liferay> yeah we have pretty complex templates
09:34 < hufg:#liferay> jquery,jquery-ui and templating will take you far
09:34 < dblessing:#liferay> hufg: i'm guessing it's mostly the theme and templates. the edge to edge business looks amazing
09:34 < hufg:#liferay> yeah
09:34 < dblessing:#liferay> will 6.2 come with other awesome templates like the default? i know 6.1 did
09:34 < hufg:#liferay> with require js you can CLUTTER your theme to death with js libs
09:35 < hufg:#liferay> it's awesome
09:35 < hufg:#liferay> mmh no idea
09:36 < jardineworks:#liferay> dblessing, The one I am working on is fully responsive and it has all sorts of animation stuff. Like when you scroll past the page fold the header converts into a bar (all animated like) and stick with you as you move down the page.
09:36 < jardineworks:#liferay> you leave IE 6 and 7 behind of course to get all this working, but I would happily leave microsoft behind any day :)
09:36 < dblessing:#liferay> jardineworks: that sounds cool. open source? ;)
09:37 < dblessing:#liferay> heck, i'd make the theme so it displays a big banner that says "Sorry, upgrade your browser to view this site" if it was IE 6 or 7
09:37 < hufg:#liferay> jardineworks: hey man don't steal our ideas!
09:37 < jardineworks:#liferay> dblessing, sadly, this is for my client so its all proprietary
09:37 < jardineworks:#liferay> haha
09:38 < jardineworks:#liferay> I think it should just redirect you to a site with a garbage can
09:38 < jardineworks:#liferay> :)
09:38 < dblessing:#liferay> haha
09:41 < hufg:#liferay> i'd say the site we are doing is very awesome, you'll see when it launches
09:42 < hufg:#liferay> jsf portlets and all kinds of js craziness in theme/on pages
09:42 < hufg:#liferay> good stuff
09:43 < jardineworks:#liferay> hufg, sounds like we have some competition then. I've never seen a Liferay site with this kind of presentation. It makes sesame street look like it belongs in the 90s
09:43 < jardineworks:#liferay> :)
09:44 < jardineworks:#liferay> hufg, when do you go live?
09:46 < hufg:#liferay> early next year
09:46 < hufg:#liferay> pretty much cruising to the finish minus single showstopper hehe
09:46 < jardineworks:#liferay> Our client wants to hit this year ... which I think is wishful thinking.
09:46 < jardineworks:#liferay> what made you decide to upgrade mid-project?
09:47 < hufg:#liferay> we are doing so good that i have time to kill, it's for our benefit if we can somehow upgrade liferay without throwing tons of money at it
09:47 < hufg:#liferay> :D
09:47 < hufg:#liferay> just playing with the upgrade
09:47 < hufg:#liferay> we are not really upgrading
09:48 < hufg:#liferay> we were hoping to upgrade to GA3 from GA2
09:48 < jardineworks:#liferay> if you don't mind my asking, how big is your team?
09:48 < hufg:#liferay> me+technical lead \o/
09:49 < hufg:#liferay> and now a junior dev for some months
09:49 < hufg:#liferay> the motivation behind GA2 to GA3 upgrade were staging virtualhost bug and some bug fixes on admin ui
09:52 < hufg:#liferay> then there are some people doing the infrastructure and visual design
09:52 < jardineworks:#liferay> midn if I ask who you work for?
09:53 < hufg:#liferay> ahh i'll tell when the site launches 8)
09:53 < topolik:#liferay> hufg: did you try to upgrade from 6.1 GA3 to 6.2?
09:53 < jardineworks:#liferay> not the client.. who you work for I mean. Or is the site you are building for your company?
09:53 < hufg:#liferay> topolik: no but GA3 doesn't have any upgrade process or if it has they are minimal, shouldn't matter
09:53 < hufg:#liferay> jardineworks: my company
09:53 < jardineworks:#liferay> ah
09:54 < hufg:#liferay> jardineworks: we have outsourced the infrastructure and it has been the only thing that has SUCKED
09:55 < hufg:#liferay> 8)
10:10 < jardineworks:#liferay> +1 to no outsourcing.
10:11 < jardineworks:#liferay> actually +0.5 ... its offshore that I think is a sham. :)
10:12 < hufg:#liferay> hehe
10:12 < hufg:#liferay> yeah but i think it's usually both
10:12 < hufg:#liferay> so +1.5? 8)
10:12 < hufg:#liferay> outsource something and they offshore the work
10:13 < hufg:#liferay> i once phoned a seniour consultant and told the dude to start googling that shit
10:13 < hufg:#liferay> senior
10:13 < hufg:#liferay> well done!
10:14 < hufg:#liferay> like let me google that for you but through the phone
10:18 < hufg:#liferay> check this out http://foaas.com/
10:18 < hufg:#liferay> hilarious
10:19 < topolik:#liferay> hufg: does your glassfish+6.2 env. work with empty DB?
10:19 < hufg:#liferay> topolik: no idea :Z can't see why not
10:20 < topolik:#liferay> the stacktraceoverflow doesn't seem to be related with DB upgrade
10:20 < topolik:#liferay> but rather with portal/plugins
10:20 < topolik:#liferay> and their ServiceContext
10:22 < topolik:#liferay> are you able to try to run your upgraded portal with, for example, empty HSQL db?
10:22 < topolik:#liferay> to don't touch your oracle DB
10:24 < hufg:#liferay> no time :/ weekend starts now
10:24 < hufg:#liferay> but yes i'd say it's not the upgrade
10:26 < hufg:#liferay> i don't know the default stack size
10:28 < hufg:#liferay> jardineworks: honestly i don't even think it's the consultants fault, more like management and cultural thing. They probably have 150 projects to attend to and if something doesn't go according to plan zero energy is put to any initiative
10:29 < hufg:#liferay> or if something unexpected happens
10:36 -!- mode/#liferay [+o jhf] by ChanServ
10:49 < jardineworks:#liferay> lol -- foaas awesome.
10:49 < jardineworks:#liferay> have you seen http://www.lmgtfy.com?
11:05 < jardineworks:#liferay> too good not to share -- especially because this happened to me last year when my son was also 2 years old -- http://i.imgur.com/e0s2qNT.jpg
12:16 < scribe:#liferay> Hey guys.  Is there some place I can insert code which will execute on successful portal login?
12:17 < jardineworks:#liferay> scribe, PostLoginHook
12:17 < scribe:#liferay> sounds perfect!
12:17 < jardineworks:#liferay> login.post.hook I think is the property
12:17 < scribe:#liferay> googling...
12:19 < apucay:#liferay> don't google, open portal-impl.jar and extract portal.properties
12:20 < jardineworks:#liferay> or setup the portal source as a project and ctrl-shift-r and enter portal.properties.
12:20 < jardineworks:#liferay> then ctrl-f "login"
12:20 < npskirk:#liferay> What jardineworks said
12:21 <@jhf:#liferay> or bookmark https://github.com/liferay/liferay-portal/blob/master/portal-impl/src/portal.properties or https://github.com/liferay/liferay-portal/blob/6.1.x/portal-impl/src/portal.properties
12:23 < scribe:#liferay> So, can't I just override login.events.post=com.test.sample.MyAction in portal-ext.properties and be sure a jar including my class is available to liferay?
12:25 < scribe:#liferay> I don't want to have to extract portal-impl.jar each time I do an install.  I'd like to just give our clients a jar and tell them to override a property
12:26 < npskirk:#liferay> the recommended extraction of the impl was just so you could look at the file
12:27 < npskirk:#liferay> a hook plugin doesn't require you to do anything with that jar
12:27 <@jhf:#liferay> scribe: just make a hook that overrides that property via the liferay-hook.xml, and includes the needed classes in the hook.
12:27 <@jhf:#liferay> https://www.liferay.com/documentation/liferay-portal/6.1/development/-/ai/extending-and-overriding-%3Cem%3Eportal-properties%3C-e-1
12:27 < scribe:#liferay> jhf, is there a sample you can send a link to?
12:27 < scribe:#liferay> :)
12:27 < scribe:#liferay> looking, thanks.
12:28 <@jhf:#liferay> the example there overrides the login.events.pre but you can just do login.events.post
12:28 <@jhf:#liferay> here's the example: https://www.liferay.com/documentation/liferay-portal/6.1/development/-/ai/performing-a-custom-acti-4
12:54 < modd:#liferay> jhf: now my colleagues are jealous^^
12:56 < modd:#liferay> btw.: tested 6.2 rc5 with the new announcements-count..pretty similar to what I've posted on jira, nice feature!
13:23 < scribe:#liferay> jhf, just got around to trying this... Sorry, don't mean to look a gift horse in the mouth, but that page sucks.
13:23 < scribe:#liferay> :)
13:24 < scribe:#liferay> the instructions are not valide
13:24 < scribe:#liferay> valid
13:24 < scribe:#liferay> They say: create this new folder: example-hook/docroot/WEB-INF/src/com/liferay/sample/hook
13:24 < jardineworks:#liferay> question: should this -- portletSession.getAttribute("XXX" ,PortletSession.APPLICATION_SCOPE); -- get me a value from the portal level session?
13:25 < scribe:#liferay> and then later tell me to modify the file: liferay-hook.xml inside example-hook/docroot/WEB-INF, adding the following line above <custom-jsp-dir>
13:26 < scribe:#liferay> Since I created the folder, there is not liferay-hook.xml file inside for me to modify.  I would create it but is says to add a live ABOVE something, which tells me they expect the file to have other contents.
13:35 < scribe:#liferay> jhf, Thank for your pointer.  I got it to work.  I needed to use the ./create.sh file inside the hook folder to initialize my new hook with necessary files.
13:36 < scribe:#liferay> jhf, then ignore the advice about placing that line in liferay-hook.xml above <custom-jsp-dir>, but just place it inside the <hook></hook> node.
13:36 < scribe:#liferay> and it work!
13:36 < scribe:#liferay> Thank you!
13:59 <@jhf:#liferay> scribe: yay!
14:00 < apucay:#liferay> jardine, i think that can only be used to share variables between porlets deployed from the same WAR
14:38 < dblessing:#liferay> hey jhf. long time no see.
14:38 < dblessing:#liferay> i may be jumping back in for a side project :) i can't believe all the changes that've happened. liferay 6.2 looks amazing
14:55 <@jhf:#liferay> dblessing !!!!!!!!!!!!!!!!!!!!
14:55 < jardineworks:#liferay> apucay, hmmm.. but then what is the point of APPLICATION_SCOPE?
14:55 <@jhf:#liferay> on con call..
15:06 < dblessing:#liferay> jhf: ping me when you get done
15:49 <@jhf:#liferay> dblessing: done.. welcome back!
15:49 < apucay:#liferay> jardineworks, don't ask me, for some reason i think that's a spec thing
15:49 < dblessing:#liferay> jhf: hey thanks.
15:49 < apucay:#liferay> my best guess is that portlets described in the same portlet.xml are an "application"
15:49 <@jhf:#liferay> still @ buckle?
15:49 < apucay:#liferay> maybe i'm reaching
15:50 < dblessing:#liferay> jhf: yep. i am. and sadly still no liferay love here. but i am going to pick up a project here soon
15:51 < dblessing:#liferay> i'm blown away by 6.2 so far. i just wanna see more awesome themes. will 6.2 ship with new themes like the default one?
15:51 <@jhf:#liferay> there are a handful of nice ones on marketplace - seen them?
15:51 <@jhf:#liferay> they all are prefixed with the marketing brand "Zoe"
15:51 < jardineworks:#liferay> apucay, no you're right... I remember that now
15:52 < jardineworks:#liferay> if you want to share them across portlets you need to set the private something or other in the liferay-portlet.xml
15:52 < jardineworks:#liferay> OR
15:52 < jardineworks:#liferay> Prefix them with LIFERAY_SHARED_
15:52 < apucay:#liferay> ah
15:52 < jardineworks:#liferay> or add your own key to the portal-ext.properties file and prefix with that
15:52 < jardineworks:#liferay> I am using the LFIERAY_SHARED for another
15:53 < jardineworks:#liferay> but I read that the users unencrypted password is stored in the session (if you have a particular property set in the portal-ext). I set it and with the debugger I am able to see the value -- it is in fact in there unexcrypted.
15:53 < jardineworks:#liferay> but I can't see to get to it
15:58 < dblessing:#liferay> jhf: yeah those are great. but will they be modified at all for 6.2? cuz the 6.2 default theme is all shiny and new and makes Zoe look slightly less shiny
16:00 <@jhf:#liferay> hmm.. I believe so, but I'm asking now.
16:01 < dblessing:#liferay> ok. to be fair, the zoe themes are still very nice themes. but once you see the liferay.com homepage and the new default theme you get all excited ;)
16:21 < jardineworks:#liferay> question for the group. If I add soemthing to the SessionMessages in actionRequest, is it not copied (automagically) to the renderRequest?
16:22 < apucay:#liferay> that doesn't sound right, cuz wouldn't you just consume it from SessionMessages just the same?
16:24 < jardineworks:#liferay> that's what I figured... but I definitely set them in the ProcessAction handler and in my JSP I have and if-else where the condition on the if is !SessionMessages.isEmpty -- then use an iterator and just output the, but what I am getting is the else "No SessionMessages found"
16:24 < jardineworks:#liferay> wait
16:24 < jardineworks:#liferay> do I have my check backwards?
16:25 < jardineworks:#liferay> no I have it right... if its !empty -- output them, otherwise show the no messages.
16:25 < jardineworks:#liferay> which is what it is showing
16:26 < jardineworks:#liferay> hmmm
16:28 < jardineworks:#liferay> ah!
16:28 < jardineworks:#liferay> SessionMessage.isEmpty( renderRequest )... duh, not SessionMessages.isEmpty( request );
16:29 < apucay:#liferay> ah
16:31 < apucay:#liferay> wait, your code executed? cuz what is the type of "request"? i wasn't aware you could just get the http request with "request", or maybe it's just null in your case
16:32 < jardineworks:#liferay> well, I am shoving them into the actionRequest which is a descendant of the PortletRequest... where as request (in the JSP) is HttpServletRequest right? so the messages were not in the request. They are copied from the actionRequest into the renderRequest.
16:34 < jardineworks:#liferay> hmmm although this doesn't seem to work.
16:34 < jardineworks:#liferay> ...
16:34 < jardineworks:#liferay> 		while( iterator.hasNext() )
16:34 < jardineworks:#liferay> 		{
16:34 < jardineworks:#liferay> 			message = iterator.next();
16:34 < jardineworks:#liferay> %>
16:34 < jardineworks:#liferay> 		<liferay-ui:error key="<%= message %>"/>
16:34 < jardineworks:#liferay> <%			
16:34 < jardineworks:#liferay> 		}// end while
16:41 < apucay:#liferay> where'd that iterator come from?
16:44 < jardineworks:#liferay> apucay, SessionMessages.iterator( renderRequest )
16:44 < jardineworks:#liferay> it has values because I can log the keys.
16:44 < jardineworks:#liferay> jut not making it into the tag
16:46 < apucay:#liferay> the error tag uses SessionErrors class i think
16:46 < jardineworks:#liferay> the iterator() method says it returns Iterator<String>
16:47 < jardineworks:#liferay> ou I think I know.
16:48 < jardineworks:#liferay> gonna try this -- 		<liferay-ui:error key="<%= (String)SessionMessages.get(renderRequest, message) %>"/>
16:49 < jardineworks:#liferay> though I am not sure why that should matter.
16:49 < jardineworks:#liferay> gotta love dart board coding ;)
16:50 < jardineworks:#liferay> negatve.
16:50 < apucay:#liferay> i mean if you look at util-taglib\src\com\liferay\taglib\ui\ErrorTag.java, the key value passed in the tag is used against SessionErrors
16:50 < apucay:#liferay> no SessionMessages
16:52 < jardineworks:#liferay> OH
16:52 < jardineworks:#liferay> I see
16:53 < apucay:#liferay> i suppose if your message is in SessionMessages itself, there is not taglib that will pull it out
16:53 < apucay:#liferay> you just have to print it yourself with SessionMessages.get
16:54 < jardineworks:#liferay> liferay-ui:message probably does
16:54 < apucay:#liferay> from my searching, that tag gets fetches the key from Language.props, not SessionMessages
16:55 < apucay:#liferay> take a look at portal-web\docroot\html\portlet\layouts_admin\publish_layouts.jsp and see how they print a message from SessionMessages
16:56 < jardineworks:#liferay> hmmm
16:57 < jardineworks:#liferay> I put <%== message %> right above the liferay-ui:error tag and I can see the key value
16:57 < jardineworks:#liferay> ah wrong key name
16:57 < jardineworks:#liferay> :)
16:59 < jardineworks:#liferay> bah! still doesn't work.
17:05 < apucay:#liferay> the portal does this:
17:05 < apucay:#liferay> 		<%
17:05 < apucay:#liferay> 		String successMessage = (String)SessionMessages.get(renderRequest, "request_processed");
17:05 < apucay:#liferay> 		%>
17:05 < apucay:#liferay> 		<%= HtmlUtil.escape(successMessage) %>
17:06 < jardineworks:#liferay> apucay, but my messages are error messages so I want them to have the red box... not the green one.
17:07 < jardineworks:#liferay> I guess I want to do this --
17:07 < jardineworks:#liferay> 				<c:when test='<%= SessionMessages.contains(request, "user_pending") %>'>
17:07 < jardineworks:#liferay> 					<%
17:07 < jardineworks:#liferay> 					String userEmailAddress = (String)SessionMessages.get(request, "user_pending");
17:07 < jardineworks:#liferay> 					%>
17:07 < jardineworks:#liferay> 					<div class="portlet-msg-success">
17:07 < jardineworks:#liferay> 						<%= LanguageUtil.format(pageContext, "thank-you-for-creating-an-account.-you-will-be-notified-via-email-at-x-when-your-account-has-been-approved", userEmailAddress) %>
17:07 < jardineworks:#liferay> 					</div>
17:07 < jardineworks:#liferay> 				</c:when>
17:08 < jardineworks:#liferay> but with class="portlet-msg-error"
17:10 < jardineworks:#liferay> btu I can't use LanguageUtil because that is part of portal-impl
17:10 < jardineworks:#liferay> arg
17:11 < apucay:#liferay> i see LanguageUtil as part of portal-service, i'm looking at 6.1.20 source
17:12 < jardineworks:#liferay> oops... I stand corrected.
17:12 < jardineworks:#liferay> apologies.
17:17 < jardineworks:#liferay> apucay, hmmm it seems like it is not looking up the value from the bundle.
17:17 < jardineworks:#liferay> becasue the iterator key is correct (what I put in there)
17:18 < jardineworks:#liferay> but then when I do LangaugeUtil.get( themeDisplay.getLocale(), key ) ... I get the key value back which usually means it can't find the property
17:19 < apucay:#liferay> is the message itself in SessionMessages? or did you stuff a key in there?
17:19 < jardineworks:#liferay> just the key
17:19 <@jhf:#liferay> so dblessing the plan is to have the zoe themes for 6.2, but not in time for the first GA :) as you probably know, themes rarely survive upgrades :) but the other plugins will be ready for 6.2 GA1
17:19 < jardineworks:#liferay> I did SessionMessages.add( actionRequest, "my-property-key-here")
17:21 < jardineworks:#liferay> interesting. I can do <liferay-ui:message key="<%= key %>" /> where the key is the iterator value and THAT works.
17:22 < jardineworks:#liferay> ... and it I wrap it in a <div> with the class set to portlet-msg-error....
17:22 < dblessing:#liferay> jhf: awesome sounds good. i'm sure this project will take the better part of a year so
17:22 < jardineworks:#liferay> \o/
17:22 < jardineworks:#liferay> EHF apucay -- thanks for rubber ducking with me
17:23 < apucay:#liferay> jardineworks, interesting, the only thing that tag does differently is use the LanguageUtil.get that takes a page context not locale
17:26 < jardineworks:#liferay> apucay, hmm the example I was looking at (from the login.jsp) actually used the LanguageUtil.format( pageContext ...)
17:26 < jardineworks:#liferay> I suppose I could probably do the same. I would assume that the themeDisplay or the locale are in the pageContext then and that it implicitly uses it to lookup in the correct bundle
17:30 < apucay:#liferay> i'm looking at LanguageImpl, and that's exactly what it does
17:55 -!- mode/#liferay [+o jhf] by ChanServ
--- Log closed Sat Oct 26 00:00:44 2013
