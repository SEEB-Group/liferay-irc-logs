--- Log opened Fri Sep 27 00:00:37 2013
00:44 < rocknroll_:#liferay> i have to say this hook concept is absolutely fab
06:25 < hufg:#liferay> ajjajj what is this man, i have multiple parse clauses in theme and somehow one of the parsed files is the previously deployed version
06:26 < Tar-Minyatur:#liferay> Sounds like caching shenanigans.
06:27 < hufg:#liferay> yeah
06:33 < rocknroll_:#liferay> i still have my locale issue in search. dont get any results if my user interface is in a different language to what the wed content is in
06:34 < rocknroll_:#liferay> web content
06:34 < rocknroll_:#liferay> my head hurts -.-
06:34 < hufg:#liferay> hmm?
06:34 < hufg:#liferay> it probably maps the language to the search and doesn't try article translations
06:34 < hufg:#liferay> whats the problem
06:35 < rocknroll_:#liferay> well i have a def language in my web coontent. Finnish
06:35 < rocknroll_:#liferay> all the content is in finnish
06:35 < rocknroll_:#liferay> no other languages needed
06:35 < rocknroll_:#liferay> but when i log in as someone whose UI is in english, i dont get any search results
06:36 < rocknroll_:#liferay> when I log in as someone who has finnish as display language, then search works fine
06:41 < rocknroll_:#liferay> I dont have the energy to research this now :)
06:42 < rocknroll_:#liferay> what does a Liferay Architect actually do all day and does it pay well?
06:42  * rocknroll_:#liferay is considering career options
06:42 < charith:#liferay> hi
06:43 < charith:#liferay> i m building liferay themes using eclipse plugin
06:43 < charith:#liferay> i want to build them using command line to be copied to jboss in live server itself
06:43 < charith:#liferay> how can i achieve this?
06:44 < hufg:#liferay> rocknroll_: it's supposed to work like that
06:44 < hufg:#liferay> the user lang is the selected lang
06:44 < hufg:#liferay> why would you want to see search results in different lang
06:44 < rocknroll_:#liferay> well that sucks
06:45 < hufg:#liferay> i write fi article and swe article and search with user lang and see only fi results
06:45 < hufg:#liferay> npo
06:45 < hufg:#liferay> why
06:45 < hufg:#liferay> it would suck more to get results in all languages
06:45 < rocknroll_:#liferay> but if there is no english translation, then its supposed to use the default?
06:46 < hufg:#liferay> no it's supposed to use the selected language
06:46 < rocknroll_:#liferay> crap
06:46 < hufg:#liferay> whats the problem
06:46 < hufg:#liferay> force user lang to fi?
06:47 < rocknroll_:#liferay> guess so
06:47 < hufg:#liferay> hint: liferay won't help you there
06:47 < hufg:#liferay> hint 2: can be done with js and cookies
06:48 < hufg:#liferay> or actually you may benefit of liferay if you do not have any requirements considering urls
06:48 < hufg:#liferay> just configure the default language url to be / and then  default lang to fi
06:49 < hufg:#liferay> then -> /web/whaeve/ -> fi
06:49 < rocknroll_:#liferay> hmm ok
06:50 < rocknroll_:#liferay> I've now set up the portal to only have finnish available
06:50 < rocknroll_:#liferay> def language: finnish, available languages: fi_FI
06:51 < rocknroll_:#liferay> still, at some point I had english available as well and admin sees everything in english
06:52 < rocknroll_:#liferay> which i s the way i like it, as the ui translations suck big time
06:52 < rocknroll_:#liferay> but i digress
06:53 < rocknroll_:#liferay> so when admin does a search, he does not find anything
06:56 < hufg:#liferay> yepp
06:56 < hufg:#liferay> there is an easy solution to that
06:56 < hufg:#liferay> do you this for fun or profit
06:56 < hufg:#liferay> don't lie to me man
06:56 < hufg:#liferay> :)
07:02 < rocknroll_:#liferay> hehe :) mostly both
07:03 < hufg:#liferay> if we can upgrade to GA3 i'll tell the solution
07:03 < hufg:#liferay> sorry mate hehe
07:03 < hufg:#liferay> but you can find it probably easy
07:04 < hufg:#liferay> so good luck
07:27 < hufg:#liferay> rotty3000: https://issues.liferay.com/browse/LPS-40416 the commit is insufficient
07:35 < hufg:#liferay> rotty3000: https://github.com/liferay/liferay-portal/blob/master/portal-impl/src/com/liferay/portlet/documentlibrary/service/impl/DLFileEntryLocalServiceImpl.java#L2449
07:38 < hufg:#liferay> rotty3000: reopen :(
07:38 < hufg:#liferay> we implemented the original commit with bytecode manipulation only to discover it's not even called :D
08:33 < jardineworks:#liferay> good morning guys
08:33 < jardineworks:#liferay> has anyone tried to use this magical preferences saving technique that shipped with 6.1?
08:35 < Tar-Minyatur:#liferay> Hi there.
08:36 < Tar-Minyatur:#liferay> Magical preferences saving technique? I did something with portlet preferences at some point...maybe I did what you mean by accident? ;)
08:37 < hufg:#liferay> what magical preferences?
08:37 < hufg:#liferay> :)
08:42 < hufg:#liferay> rotty3000: helloo helloo i commented on the issue, check out that grep. Are you seriously implying they are all wrong calls?
08:42 < hufg:#liferay> or anyone else care to comment https://issues.liferay.com/browse/LPS-40416
08:44 < hufg:#liferay> and if they are why are they still in the trunk
08:46 < rocknroll_:#liferay> you mean the preferences--myPreferenceName--
08:47 < rocknroll_:#liferay> it is pretty magical
08:48 < hufg:#liferay> what is that
08:49 < rocknroll_:#liferay> <aui:input name="preferences--myPreferenceName"> will save automatically without having to save it in your code
08:49 < hufg:#liferay> okk okk
08:50 < rocknroll_:#liferay> i've gone wild with it, added a ton of settings to different portlets :D
08:55 < jardineworks:#liferay> Tar-Minyatur, hufg apparently in 6.1 if you include a default configuration xml element in the liferay-portlet.xml and then prefix your form fields with preferences--[fieldname]-- it will automatically save them for you
08:56 < jardineworks:#liferay> doesn't seem to work for me.
08:56 < hufg:#liferay> ah ok
08:57 < rocknroll_:#liferay> i've only used it when extending portlets via hook
08:59 < Tar-Minyatur:#liferay> jardineworks: Ah ok. Nope...didn't know that and I also didn't use it by accident.
09:06 < jardineworks:#liferay> apaprently is you use this action url <liferay-portlet:actionURL portletConfiguration="true" var="savePreferences" /> and do the prefixing thing you dpn't have to write the code to save preferences.
09:06 < jardineworks:#liferay> APPARENTLY.
09:24 -!- mode/#liferay [+o rotty3000] by ChanServ
09:46 < jardineworks:#liferay> I love people who write blog posts that don't work. It totally makes me question whether or not they ACTUALLY did it, or even know what they are doing, or if they just saw someone elses and copied it.
09:47 < jardineworks:#liferay> for example -- http://www.liferay.com/web/jit066124/blog/-/blogs/unique-way-to-save-portlet-preferences-in-liferay-6-1
09:49 < jardineworks:#liferay> his preferences.getValue( String ) is a method that doesn't exist. He fails to mention the need for <liferay-portlet:actionURL portletConfiguration="true"/> but best of all.. he doesn't mention the hidden field that is required with a value of Contants.UPDATE.
09:49 < jardineworks:#liferay> so in fact, the post is completely useless.
09:49 < jardineworks:#liferay> mind you, the one time I had to work with Cginex, that was pretty much the end result. Useless.
09:51 < Tar-Minyatur:#liferay> I'm always suspicious when something looks too easy. ;D
09:51 < Tar-Minyatur:#liferay> Nothing is really easy...or we wouldn't need people writing articles about stuff.
09:52 < jardineworks:#liferay> 50$ says the guy has never even done it
09:53 < jardineworks:#liferay> If you look at the DefaultConfigurationAction processAction method there is a very important line
09:53 < jardineworks:#liferay> 		if (!cmd.equals(Constants.UPDATE)) {
09:53 < jardineworks:#liferay> 			return;
09:53 < jardineworks:#liferay> 		}
09:53 < jardineworks:#liferay> maybe that should be mentioned somewhere? since it shor circuits the entire thing?
09:55 < Tar-Minyatur:#liferay> Bu it's so much fun to figure stuff out on your own!
09:55 < Tar-Minyatur:#liferay> Especially if you're working on a time budget. ;)
09:57 < rocknroll_:#liferay> hehee
10:38 < hufg:#liferay> rotty3000: helloo helloo my main man are you here
10:39 <@rotty3000:#liferay> :)
11:03 < Tar-Minyatur:#liferay> rotty3000: Hi. :) Did you by any chance see my question yesterday concerning the ValidateDocumentsLibrary issue?
11:03 <@rotty3000:#liferay> no sorry
11:04 < Tar-Minyatur:#liferay> When DL is configured to use S3 this validation process accesses every single file and every file version on the S3 bucket.
11:04 < Tar-Minyatur:#liferay> It takes ages and in my case never finishes.
11:05 < Tar-Minyatur:#liferay> I filed an issue for it today, if you want to take a quick look: http://issues.liferay.com/browse/LPS-40699
11:05 < hufg:#liferay> rotty3000: check out my comment on lps404016
11:05 < Tar-Minyatur:#liferay> I can't believe that this is the intended behaviour. ;)
11:06 < Tar-Minyatur:#liferay> My main question is: Do I have any chance of deactivating this except for directly commenting the lines in the core source code?
12:06 < hufg:#liferay> Tar-Minyatur: hehe we are being too harsh. Hello rotty! --> issue issue issue issue ;)
12:07 < Tar-Minyatur:#liferay> And all that on a Friday.
12:07 < Tar-Minyatur:#liferay> I'm happy about any information I can get, but I don't take it for granted.
12:08 < Tar-Minyatur:#liferay> And I hate being in a position where I have so many open questions in the first place...but what can you do.
12:09 < hufg:#liferay> hehe
12:10 < hufg:#liferay> we finally gave up on GA3 =(
12:11 <@rotty3000:#liferay> :( sorry guys
12:12 <@rotty3000:#liferay> Tar-Minyatur: I'm not familar with the S3 support
12:12 <@rotty3000:#liferay> probably not intended to have that bad of a behaviour
12:12 < Tar-Minyatur:#liferay> Too many config combinations by now to test everything, I'd say.
12:13 <@rotty3000:#liferay> hufg:  is that the wrong LPS id?
12:13 < Tar-Minyatur:#liferay> I'll probably just remove those two lines and recompile next week. It's only a temporary change anyway.
12:14 < jardineworks:#liferay> does anyone know how to get the value from a aui:input using alloy?
12:14 < jardineworks:#liferay> I am able to get the object using A.one('#<portlet:namespace/>name'); ... but I can't get the value out of it
12:15 < jardineworks:#liferay> .val() fails. .value is undefined. .attr('value'); fails.
12:18 <@rotty3000:#liferay> jardineworks: try .get('value')
12:23 < hufg:#liferay> rotty3000: https://issues.liferay.com/browse/LPS-40416
12:23 < hufg:#liferay> woops
12:23 < hufg:#liferay> yeah it was
12:23 < hufg:#liferay> sorry
12:24 < jardineworks:#liferay> rotty3000, that worked. Thanks. Can I ask how you knew that? just from usage? or did you look it up somehow?
12:25 <@rotty3000:#liferay> google
12:25 <@rotty3000:#liferay> "alloy ui form value"
12:26 < jardineworks:#liferay> :S
12:26 <@rotty3000:#liferay> wasn't the first result.. had to read 3-4 results
12:26 <@rotty3000:#liferay> specifically http://liferayguru.blogspot.ca/p/alloy.html
12:27 < hufg:#liferay> rotty3000: anyways the issue is not fixed imo
12:28 <@rotty3000:#liferay> hufg: how so? what do you get?
12:28 < hufg:#liferay> rotty3000: check out my comment
12:28 < hufg:#liferay> rotty3000: there are more classes doing the local -> non-local thing
12:28 < hufg:#liferay> in dl portlet
12:29 < hufg:#liferay> rotty3000: nothing, a dude spent a week implementing the commit only to conclude the class of the commit doesn't actually do anything at that point of publishing
12:29 <@rotty3000:#liferay> yeah, I realize that
12:29 < hufg:#liferay> which iscool
12:30 <@rotty3000:#liferay> it's still not supposed to be that way
12:30 < hufg:#liferay> DLFileEntryLocalServiceImpl is the problem
12:30 <@rotty3000:#liferay> and someone who didn't realize it was making those changes
12:30 <@rotty3000:#liferay> and they got past review
12:30 < hufg:#liferay> yes feel free to pass that find sed grep thing on the comments hehe
12:30 < hufg:#liferay> pass on
12:31 <@rotty3000:#liferay> yup
12:31 <@rotty3000:#liferay> DL in my view has several busted issues
12:31 <@rotty3000:#liferay> we need to fix them :(
12:32 < hufg:#liferay> so what are your thoughts on those method calls
12:32 < hufg:#liferay> from the grep sed thing
12:32 < hufg:#liferay> my point is that from local to nonlocal service -> wrong?
12:32 <@rotty3000:#liferay> they are the same issue, and should not be called that way
12:32 <@rotty3000:#liferay> exactly, one should never do that
12:32 < hufg:#liferay> hehe so that sed grep thing is indeed for your architectural testing needs
12:32 <@rotty3000:#liferay> non-local requires authorization context to be set
12:33 <@rotty3000:#liferay> the local should not require it
12:33 <@rotty3000:#liferay> so that machine trust is all that's required
12:33 < hufg:#liferay> mm
12:33 < hufg:#liferay> anyways reopen?
12:33 <@rotty3000:#liferay> I have explained this to the developer
12:33 < hufg:#liferay> i have seen some issues that are marked fixed even if they aren't
12:34 < hufg:#liferay> wouldn't want to see this being one of them
12:34 <@rotty3000:#liferay> no, I believe the one change was applied as expected.. if there are more cases please open a new ticket
12:34 < hufg:#liferay> it's not true, if you look at the stack trace you can see the commit is insufficient
12:35 < hufg:#liferay> it's the wrong class
12:35 <@rotty3000:#liferay> yeah, I see your point
12:36 <@rotty3000:#liferay> .. thinking
12:36 < hufg:#liferay> imo reopen just to prove a point
12:36 <@rotty3000:#liferay> yeah, if you can please do
12:36 < hufg:#liferay> aah i can't
12:37 < hufg:#liferay> i'm not worthy :(
12:37 <@rotty3000:#liferay> Done!
12:37 <@rotty3000:#liferay> with assignment back to the developer, and comment for him to read your comments
12:38 < hufg:#liferay> i think it was a friday evening "takki päällä commit" which means when you  commit when you have your coat on and leaving
12:39 < hufg:#liferay> hopefully
12:39 < hufg:#liferay> hehe
12:40 <@rotty3000:#liferay> well, I think he just didn't realize the depth of the issue. we did discuss it and I explained the consequences, and the reasons why you couldn't do that.. and he understood.. I even reviewed the pull request.. it might have been multiple levels of "overworked and rushed-ness" which let it get resolved without actually getting fixed
12:40 <@rotty3000:#liferay> apologies for that :(
12:41 <@rotty3000:#liferay> since I was the reviewer, it was really more my fault than his.
12:42 < hufg:#liferay> mm np np
12:42 < hufg:#liferay> have a nice weekend
12:42 < hufg:#liferay> bye
12:42 < hufg:#liferay> a date hehe
13:15 < Naenyn:#liferay> Is there an easy way to find out what sites are using a page template? I have a page template I need to delete but am unable to because something is still referencing it.
13:53 < jardineworks:#liferay> hey rotty3000 -- is it possible to shove my own stuff into the Liferay cache?
13:53 <@rotty3000:#liferay> yeah
13:54 <@rotty3000:#liferay> you want cluster cache? or VM local?
13:54 < jardineworks:#liferay> hmm
13:55 < jardineworks:#liferay> well, my local is not using a cluster (assuming that makes a difference) but in prod I suspect we will be
13:55 <@rotty3000:#liferay> com.liferay.portal.kernel.cache.MultiVMPoolUtil (clustered invalidation)
13:55 <@rotty3000:#liferay> com.liferay.portal.kernel.cache.SingleVMPoolUtil (non-clustered)
13:55 <@rotty3000:#liferay> even in a cluster, you might want an unclustered cache
13:55 < jardineworks:#liferay> is there any problem using the multi in a single install?
13:55 < jardineworks:#liferay> oh really?
13:56 <@rotty3000:#liferay> yeah
13:56 <@rotty3000:#liferay> very expensive to replicate, or things which are very node specific
13:56 < jardineworks:#liferay> what I have is a result from a rest service. Categories. They are the same for.. well, forever pretty well. I don't want to call the service over and over so I thought cache might be a better option
13:56 <@rotty3000:#liferay> right
13:56 < jardineworks:#liferay> i'd basically load them .. i would guess... once a day?
13:56 < jardineworks:#liferay> just incase they decided to add something
13:56 <@rotty3000:#liferay> in that case I would really go for the unclustered cache
13:57 < jardineworks:#liferay> ok
13:57 <@rotty3000:#liferay> there is probably no need to "sync"  the states across the cluster
13:57 <@rotty3000:#liferay> let each node deal with it's own timeouts and connections toe the remote service
13:58 < jardineworks:#liferay> gotcha
13:58 < jardineworks:#liferay> and if I do a getCache() looking for a cache that does not yet exist, will it create it for me?
13:58 <@rotty3000:#liferay> yup
13:59 < jardineworks:#liferay> and is it shared across all portlet instances? .. I mean, these are "portal" level right? not portlet level?
13:59 <@rotty3000:#liferay> whole VM
14:00 <@rotty3000:#liferay> .. across the portal
14:00 <@rotty3000:#liferay> note that even crosses the "portal instances"
14:01 <@rotty3000:#liferay> so if you need to have "instance" level granularity, usually we make a compound "key" for entries in the cache
14:01 <@rotty3000:#liferay> key includes the companyId
14:04 < jardineworks:#liferay> ah -- that makes sense
14:17 < Naenyn:#liferay> rotty3000: any chance you could help me craft a query to find sites that reference a page template?
14:17 <@rotty3000:#liferay> hmm..
14:18 <@rotty3000:#liferay> I think you;ll have to find all pages that reference the page template and then groupBy groupId
14:18 < Naenyn:#liferay> that'll work
14:44 < Naenyn:#liferay> rotty3000: found two layouts that are using the page template.. but there are no groups that correspond to their group ids. =| any ideas how that could happen?
14:45 <@rotty3000:#liferay> maybe they are site templates?
14:45 <@rotty3000:#liferay> but I think they should still have groups
14:54 < Naenyn:#liferay> rotty3000: the sourcePrototypeLayoutUuid column in the Layout table.. what does that correspond to in the prototype table?
14:55 <@rotty3000:#liferay> _uuid
14:57 < Naenyn:#liferay> thought it was the layoutPrototypeUuid column that corresponded to that.. hm
14:57 <@rotty3000:#liferay> perhaps.. it's been too long
14:59 < Naenyn:#liferay> hm. I have a bunch of entries where Layout.uuid_ == Layout.sourcePrototypeLayoutUuid
15:00 <@rotty3000:#liferay> yeah
15:00 <@rotty3000:#liferay> was gonna suggest that
15:01 < Naenyn:#liferay> what does that mean..? that the layout is it's own source?
15:07 < Naenyn:#liferay> I wish I understood this structure better =(
19:16 < nicholasdipiazza:#liferay> hi
19:17 < nicholasdipiazza:#liferay> so liferay i always have to restart the server when redeploying a new jsr286 portlet
19:17 < nicholasdipiazza:#liferay> any way to avoid that?
--- Log closed Sat Sep 28 00:00:39 2013
