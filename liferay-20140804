--- Log opened Mon Aug 04 00:00:43 2014
07:05 < Jadobi:#liferay> Hi, i'm fairly new to portals, but i have to figure out which portal solution we should use, to get Portlet 2.0 (and in the future 3.0) support. Right now we use an older uPortal Version 2.x but we want move to Liferay 6 or uPortal 4.
07:05 < Jadobi:#liferay> An important criteria is to integrate existing portlets and webapps form the old portal setup and also have LDAP and CAS support for SSO. I have already configured Liferay to use Jasig CAS for SSO and integrated some portlets. This was not a big problem. The bigger challenge seems to be to get the web applications(they CASified and Spring MVC based) running in Liferay. After a user logged on Liferay, it should be also logged on to the web applications
07:05 < Jadobi:#liferay> What is the best way to achieve this? IFrame or the WebProxyPortlet? Can someone give me please an advise how to do this in Liferay?
07:08 < mvlach:#liferay> hi all
07:09 < Jadobi:#liferay> hi
07:09 < mvlach:#liferay> is there any real posibility to split some portlets to other JVM ? especial in CE edition ?
07:09 < mvlach:#liferay> can I use WSRP ?
07:45 < Jadobi1:#liferay> nobody a clue?
09:39 < jardineworks:#liferay> Jadobi1, Just want to make sure I understand .. you have the user logging into Liferay but you want them to access the data from an external system. Is that right?
09:39 < jardineworks:#liferay> So basically, the portlet in Liferay becomes more just the view for data that is pulled in from elsewhere?
09:41 -!- mode/#liferay [+o jhf] by ChanServ
09:43 < Jadobi1:#liferay> @jardineworks correct
09:46 < jardineworks:#liferay> Jadobi1, and the external applications can't leverage SSO?
09:46 < jardineworks:#liferay> that is afterall the main benefit...
09:50 < jardineworks:#liferay> Jadobi1, Alternatively... how is the data in the other application accessed? via services? direct database connection?
09:50 < Jadobi1:#liferay> I can authenticate the app outside the portal via CAS, but inside the portal the user is already logged on via cas but the app can't find the ticket ... i need some sort of proxying from the portal
09:50 < Jadobi1:#liferay> Direct database connection
09:51 < jardineworks:#liferay> Jadobi1, so you have a portlet in Liferay that is connecting to the external applicaiton database -- Is it read only? or can you update records as well?
09:52 < Jadobi1:#liferay> no right now i have only the webapplication running on the same server as liferay
09:55 < jardineworks:#liferay> Jadobi1, ok -- there is a feature in Liferay called Service Builder. Using this tool you can model entities in XML and use a code generation tool to generate 80% of the Java code you need to work with them. The code generated follows the same model as the core Liferay entities ... User, Group, Org, etc. So you end up with the same deign pattern of *LocalServiceUtil. If you put your custom entities in Liferay it will even gener
09:55 < jardineworks:#liferay> ate the sql source and automagically create the tables for you when you deploy the plugin. HOWEVER, it is also possible to define a model and map it to an existing table ... basically external datasource.
09:55 < jardineworks:#liferay> If I were you I would probably do that..
09:55 < jardineworks:#liferay> Define a service builder model, specify an external datasource, and then in your portlet use the generated code to read the external database.
09:56 < jardineworks:#liferay> you could forego integration with the other application altogether ... but leave it in place if certain groups require it. But if you migrate the UI features to portlets and deploy them in Liferay, it means you could sunset the other application altogether.
10:02 < Jadobi1:#liferay> I cannot rewrite all the web applications ... basically i want to display this web applications(spring based) inside the portal and also leverage SSO ... (via IFrame or ProxyPortlet)
10:06 < Jadobi1:#liferay> In the future, these web applications are then converted into portlets gradually.
10:07 < jardineworks:#liferay> Jadobi1, This is Liferay 6.2 I assume?
10:09 < jardineworks:#liferay> Jadobi1, I've never done what you are trying to do... all my external systems integration has been what I described above, or using services that were exposed by the external application ... or, lastly, using OpenSSO. But I am happy to try to figure it out with you.
10:10 < Jadobi1:#liferay> yes Liferay 6.2 CE
10:10 < jardineworks:#liferay> Jadobi1, so I can catch up with where you are at... you have followed the Liferay cas guide already right?
10:12 < Jadobi1:#liferay> Yes Jasig CAS is running on an different tomcat locally and the portal can use it for user auth
10:12 < Jadobi1:#liferay> with SSL
10:13 < yam_:#liferay> hi
10:13 < yam_:#liferay> you there jardineworks? :)
10:13 < jardineworks:#liferay> yep
10:13 < Jadobi1:#liferay> also it works for an portlet i have already ported
10:14 < jardineworks:#liferay> Jadobi1, can you share with me the link that you followed so I know I am looking at the same one? One of the problems with Liferay is that there are often a dozen different people posting to solve the same problem, but using different solutions :)
10:14 < jardineworks:#liferay> what's up yam_
10:15 < yam_:#liferay> jardineworks: I don't understand how roles really work. I have an organization and I want to add a role to all users in this organization (for example: view the page "Client1"), how should I do that?
10:16 < jardineworks:#liferay> yam_, I haven't done much with Organizations to be honest but give me a few minutes and I'll poke around it.
10:16 < yam_:#liferay> Because when I try to assign an organization role to an organization, I have to manually assign this role to each user and I can't see this role in the "Permissions" of the page that I want to manage
10:16 < yam_:#liferay> jardineworks: ok, ty
10:18 < Jadobi1:#liferay> jardineworks, First i used this guide to setup cas http://www.liferay.com/de/community/wiki/-/wiki/Main/CAS+Liferay+6+Integration
10:20 < Jadobi1:#liferay> but also some other sources i do not remember but i can post the essential configs
10:24 < Jadobi1:#liferay> i used this connector for both tomcat installations (Liferay & CAS server - with different ports) :
10:24 < Jadobi1:#liferay> <Connector SSLEnabled="true" acceptCount="100" clientAuth="false" disableUploadTimeout="true" enableLookups="false" keystoreFile="C:/Users/jb/.keystore" keystorePass="changeit" maxHttpHeaderSize="8192" maxThreads="150" port="443" protocol="org.apache.coyote.http11.Http11Protocol" scheme="https" secure="true" sslProtocol="TLS" truststoreFile="C:/Program Files/Java/jdk1.7/jre/lib/security/cacerts"/>
10:25 < jardineworks:#liferay> yam_, From what I am seeing the only difference (from a storage perspective) is the type column in the Role_ .. 1 is a regular Role, 2 I think is a Site role and 3 is an Org role. As far as I know, it's just a matter of scoping. The UserLoccalServiceUtil class allows you to add the role (all you need is the organization role id) and then there is a class that you can use for checking to make sure a user has the role before you
10:25 < jardineworks:#liferay>  allow a feature -- OrganizationRoleUserChecker
10:26 < Jadobi1:#liferay> These are my portal-ext.properties for liferay and i also do the conf inside the portal
10:26 < Jadobi1:#liferay> #CAS config
10:26 < Jadobi1:#liferay> cas.auth.enabled=true
10:26 < Jadobi1:#liferay> cas.import.from.ldap=false
10:26 < Jadobi1:#liferay> cas.login.url=https://localhost:8444/cas/login
10:26 < Jadobi1:#liferay> cas.logout.url=https://localhost:8444/cas/logout?service=http://localhost
10:26 < Jadobi1:#liferay> cas.server.url=https://localhost:8444/cas
10:27 < Jadobi1:#liferay> cas.server.name=https://localhost
10:27 < Jadobi1:#liferay> cas.service.url=
10:27 < Jadobi1:#liferay> cas.validate.url=https://localhost:8444/cas/proxyValidate
10:27 < Jadobi1:#liferay> cas.no.such.user.redirect.url=http://localhost
10:27 < Jadobi1:#liferay> cas.logout.on.session.expiration=false
10:28 < jardineworks:#liferay> Jadobi1, did you configure the auto.login.hooks?
10:29 < Jadobi1:#liferay> no
10:29 < jardineworks:#liferay> I mean, CAS is there by default, but you don't need the others so it's good to reconfigure it to only use CAS
10:29 < jardineworks:#liferay> auto.login.hooks=com.liferay.portal.security.auth.CASAutoLogin
10:29 < jardineworks:#liferay> add that to your portal-ext and restart
10:29 < Jadobi1:#liferay> ok
10:31 < yam_:#liferay> jardineworks: ok but if  I want a group or an organization or whatever of users to view a page and no one else, how should I do?
10:33 < Jadobi:#liferay> ok i changed the properties file and the Server is up and running
10:34 < jardineworks:#liferay> yam_, I think I need to understand a little more what it is you are trying to do. So you have a single site and multiple organizations?
10:34 < jardineworks:#liferay> Jadobi, when you try to login and it fails, is there a stack trace?
10:34 < jardineworks:#liferay> in the log I mean
10:35 < Jadobi:#liferay> You mean for the web application ... yes mom
10:37 < yam_:#liferay> jardineworks: I have a single site and different pages, I have different companies which will access the portal and I want company1 to see only page1, company2 to see only page2 etc.
10:40 < Jadobi:#liferay> 294326 INFO- de.portal.user.PRTLUser  -  casLogin: No Ticket as parameter found!
10:40 < Jadobi:#liferay> 294327 INFO- de.portal.user.PRTLUser  -  setCASUser uname=null
10:40 < Jadobi:#liferay> 294327 INFO- de.portal.user.PRTLUser  -  findByUname ENTER uname=null
10:40 < Jadobi:#liferay> 294327 INFO- de.portal.user.PRTLUser  -  getUser PRTLUser=null
10:40 < jardineworks:#liferay> yam_, ok.. NORMALLY... Organizations are used to model the same company, not discreet companies. If you have Sony and BMW accessing the same portal and you want them to each have a site, you would normally create a site for BWM, and a site for Sony.  Orgnizations is more for .. within Sony, I am going to have a Europe office and a NA office.. and then within each I am going to have a Sales and a Fianance dept etc.
10:43 < Jadobi:#liferay> this class tries to get the ticket from request but cannot find any .... final String ticket = request.getParameter("ticket");
10:44 < yam_:#liferay> jardineworks: in that case it's not "normal" haha, and what do you advise me?
10:44 < jardineworks:#liferay> does the url that your CAS system receives have a ?ticket parameter?
10:44 < jardineworks:#liferay> Jadobi, ^^
10:45 < aqquadro:#liferay> hi there, sorry for the rush, because isn't possibile to create a user group with a name of only digits?
10:45 < jardineworks:#liferay> yam_, is this a fictitious scenario? or real business problem you are trying to solve?
10:45 < yam_:#liferay> real business problem
10:46 < yam_:#liferay> the company which I develop the portal for has clients (different companies) that sould access some of the pages of the site
10:46 < Jadobi:#liferay> jardinworks, like this http://localhost/testApp?ticket=ST-8-epVhNM3bkekt0UJMXNBX-cas01.example.org
10:46 < yam_:#liferay> but some pages must be accessed by some companies and others must not
10:47 < jardineworks:#liferay> aqquadro, here is the logic. It might be, but you would need to check the properties...
10:47 < jardineworks:#liferay> 		if (Validator.isNumber(name) &&
10:47 < jardineworks:#liferay> 			!PropsValues.USER_GROUPS_NAME_ALLOW_NUMERIC) {
10:47 < jardineworks:#liferay> 			throw new UserGroupNameException();
10:47 < jardineworks:#liferay> 		}
10:47 < jardineworks:#liferay> ##
10:47 < jardineworks:#liferay> ## User Groups
10:47 < jardineworks:#liferay> ##
10:47 < jardineworks:#liferay>     #
10:47 < jardineworks:#liferay>     # Set this to true when you want the validation to allow for creation of
10:47 < jardineworks:#liferay>     # user groups with numeric names.
10:47 < jardineworks:#liferay>     #
10:47 < jardineworks:#liferay>     user.groups.name.allow.numeric=false
10:47 < jardineworks:#liferay> make it true
10:48 < jardineworks:#liferay> yam_, do any of the companies share site pages? or are they always separated... meaning, are their pages that both BMW and Sony need to acces?
10:48 < yam_:#liferay> no they share some pages
10:48 < Jadobi:#liferay> jardinworks, oh i have to say placed the web application inside the portal in an IFrame right now
10:49 < Jadobi:#liferay> outside of the portal this is working ... but inside i think the portal makes the request to the cas server and thats why the web app cant find the ticket
10:51 < jardineworks:#liferay> Jadobi, correct -- just looking at the CASFilter right now...
10:53 < jardineworks:#liferay> Jadobi,
10:53 < jardineworks:#liferay> String serverName = PrefsPropsUtil.getString(companyId, PropsKeys.CAS_SERVER_NAME, PropsValues.CAS_SERVER_NAME);
10:53 < jardineworks:#liferay> 			String serviceUrl = PrefsPropsUtil.getString(companyId, PropsKeys.CAS_SERVICE_URL, PropsValues.CAS_SERVICE_URL);
10:53 < jardineworks:#liferay> 			if (Validator.isNull(serviceUrl))
10:53 < jardineworks:#liferay> 			{
10:53 < jardineworks:#liferay> 				serviceUrl = CommonUtils.constructServiceUrl(request, response, serviceUrl, serverName, "ticket", false);
10:54 < jardineworks:#liferay> 			}
10:54 < jardineworks:#liferay> so that is where the ticket param comes from...
10:54 < jardineworks:#liferay> yam_, I see
10:55 < jardineworks:#liferay> yam_, ok.. lemme think about this for a minute. So your tool is basically a SaaS type thing.
10:56 < jardineworks:#liferay> Jadobi, those errors you sent me ... are those from your separate CAS server? or from Liferay?
10:57 < Jadobi:#liferay> from the web app it self
10:57 < yam_:#liferay> may be yes
10:57 < jardineworks:#liferay> Jadobi, are you sure the parameter it is expecting is named "ticket"?
10:58 < jardineworks:#liferay> yam_, ok.. so is page1 and page2 actually different? or does each page just contain different data for the orgnization accessing it? For example, both show invoicing history, just that one is for BMW and one is for Sony.
10:59 < yam_:#liferay> they're different
10:59 < jardineworks:#liferay> yam_, Are they different because of company subscriotion to the service? or are they different because they will always be different?
10:59 < yam_:#liferay> no they're not linked to the companies
11:01 < Jadobi:#liferay> If i call this directly in the browser (https://localhost:8444/cas/login?service=http://localhost/webappName/Login.do) it works the lib can find the ticket parameter
11:01 < Jadobi:#liferay> and i'm logged in
11:03 < Jadobi:#liferay> i mean i dont need to login again on the CAS-Server... it uses the ticket that is already there form the portal login
11:06 < jardineworks:#liferay> Jadobi, hmmm
11:06 < Jadobi:#liferay> And i dont make any changes to the cas server i use it with demo setup ... Username = Password
11:08 < jardineworks:#liferay> Jadobi, what attribute is being used as the principal name in CAS? email?
11:08 < Jadobi:#liferay> screenName
11:09 < Jadobi:#liferay> but both works
11:11 < Jadobi:#liferay> For the CAS itself makes no differnt (Uname has to be the same as password in the demo setup) only the portal setting is important
11:15 < jardineworks:#liferay> Jadobi, do you have your environment setup with the Portal Source?
11:16 < Jadobi:#liferay> with the tomcat bundle
