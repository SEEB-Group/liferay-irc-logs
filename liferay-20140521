--- Log opened Wed May 21 00:00:21 2014
08:56 < sl33k> hey guys
08:56 < sl33k> i'm picking of liferay after a long break...how to get started? which liferay+tomcat should i use, etc etc
08:58 < aj_> sl33k, if you are loooking for the latest stable, 6.2
08:59 < sl33k> aj_: also got some questions...
08:59 < sl33k> i) has to do with how to share common codebase across portlets without recopying, also common services/features
08:59 < aj_> fire away... you might not get an answer immediately, but people are pretty good about answering in this channel
08:59 < sl33k> aj_: e.g a typical hibernate listener
09:01 < sl33k> i usually also like to setup my project has maven etc
09:03 < aj_> support for maven in 6.2 is solid -- I haven't used it myself but I have a few clients that do and they said its much better than previous incarnations.
09:03 < aj_> brb
09:04 < jardineworks> topolik, have you ever done anything with the scheduling stuff?
09:04 < topolik> jardineworks: yes, but it was like 5yrs ago
09:05 < jardineworks> topolik, I'll tell you what I am doing this time and maybe an old lightbulb will go off :)
09:05 < topolik> ok :)
09:08 < jardineworks> just gonna grab a coffee... bbiam
09:08 < sl33k> even though i have used mostly tomcat+liferay in past, i want to see jboss+lifery this time around
09:08 < sl33k> ^_^
09:08 < sl33k> hope its a good bet
09:15 < jardineworks> sl33k, I'm not a jboss fan to be honest and I have never used anything in my liferay work that warrants it over Tomcat.
09:16 < jardineworks> topolik, gonna PM you for the sensitive stuff, then we can chat in here for all the loggers and such :)
09:18 < sl33k> jardineworks: yeah, same here. but i have always used either jpa/hibernate and spring in apps...trying to play around with Java EE cool stuffs. and an enterprise server is easiest way to get this working
09:18 < sl33k> also, a quick school of thought question as to how apps are to be divided
09:19 < sl33k> we usually break work into portlets assign some to community alike
09:19 < sl33k> but in reality they are all one web application
09:19 < sl33k> hence it does my head in that java treats each portlet already as a seperate web app
09:21 < bijoo_> sl33k: to rephrase the question, you can ask like : 1 package, many portlets vs. many packages, 1 portlet
09:22 < bijoo_> former means mostly one servlet-context; latter means lots servlet-contexts and such.
09:23 < bijoo_> for me it comes down to just one question: are the pieces mostly independent? tightly coupled or loosely coupled code
09:25 < sl33k> bijoo_: i prefer to have just one single war with plenty portlets within
