--- Log opened Mon Nov 24 00:00:21 2014
--- Log opened Mon Nov 24 03:21:13 2014
03:21 -!- Topic for #liferay: Liferay Community Discussion Channel! *THIS CHANNEL IS LOGGED* (Log: http://goo.gl/SMte1N) Plz be patient - timezones matter :)  Please vote Liferay! http://awards.cmscritic.com/vote Liferay 6.2 GA2 RELEASE http://goo.gl/uclhsq   Forum: http://forums.liferay.com Homepage: http://liferay.org User Groups http://goo.gl/WFVtPe Nightly build http://goo.gl/vQngHn
03:21 -!- Topic set by jhf [~cygnuseck@97.101.250.88] [Mon Sep 15 12:22:21 2014]
03:21 [Users #liferay]
03:21 [@ChanServ    ] [ doged    ] [ jardineworks] [ mtsr    ] [ Reepicheep  ] 
03:21 [ avinashrbhat] [ Gorith_  ] [ kermitt     ] [ Naenyn  ] [ Tar-Minyatur] 
03:21 [ bijoo       ] [ henriquev] [ MagnoBooter ] [ plekplek] [ Tm_T        ] 
03:21 [ Bryanstein  ] [ izaera   ] [ mcbonz      ] [ quercus_] [ topolik     ] 
03:21 -!- Irssi: #liferay: Total of 20 nicks [1 ops, 0 halfops, 0 voices, 19 normal]
03:21 -!- Channel #liferay created Wed Nov 11 15:40:06 2009
03:21 -!- Irssi: Join to #liferay was synced in 5 secs
07:10 < g33kyboi:#liferay> hello
07:12 < g33kyboi:#liferay> I tried providing a custom implementation for liferay login service. I want to inject spring managed beans into the class that extends Liferay's UserLocalServiceWrapper but the injected beans (done using autowired) are null. typically means they weren't autowired. Please is it enough to annotate the service class's custom implementation with just @Component as this is what I have done. thanks
07:22 < topolik:#liferay> g33kyboi: hi, what LR version do you use?
07:24 < g33kyboi:#liferay> liferay 6.2.0
07:29 < topolik:#liferay> ok, just to orient myself in the problem
07:30 < topolik:#liferay> you want to provide your own implementation of UserLocalService, right?
07:33 < g33kyboi:#liferay> yes
07:34 < g33kyboi:#liferay> and I have to autowire my DAO into the CustomUserLocalServiceImpl
07:34 < g33kyboi:#liferay> but the autowired DAO returns a null value
07:35 < topolik:#liferay> I see
07:35 < g33kyboi:#liferay> Is this possible?
07:36 < topolik:#liferay> if you use Hook then no
07:36 < topolik:#liferay> https://github.com/liferay/liferay-portal/blob/6.2.0-ga1/portal-impl/src/com/liferay/portal/deploy/hot/HookHotDeployListener.java#L2205
07:36 < topolik:#liferay> the service is created using constructor, there is no Spring context involved
07:38 < topolik:#liferay> but all the classes from your plugin should be accessible
07:38 < topolik:#liferay> there is just no Spring framework here
07:39 < g33kyboi:#liferay> "all the classes from the plugin should be accesible"? how, without creating new instances?
07:40 < topolik:#liferay> they are accessible because your UserLocalServiceAAAA class is loaded using the plugin's classloader
07:42 < topolik:#liferay> it's because we need to avoid problems with classloading and different spring contexts
07:43 < topolik:#liferay> therefore portal creates a proxy around your class and injects it into the wrapper with link to the previous implementation
07:44 < topolik:#liferay> if you want to access Spring beans from the plugin's Spring context there is a workaround using PortletBeanLocatorUtil
07:49 < g33kyboi:#liferay> whats the impact on performance? Is this a recommended approach ? as I just came across a suggestion to use @BeanReference annotation
07:56 < g33kyboi:#liferay> whats the impact on performance? Is this a recommended approach ? as I just came across a suggestion to use @BeanReference annotation
08:03 < topolik:#liferay> I don't think any Spring annotation works when the class is not instantiated using Spring framework
08:04 < g33kyboi:#liferay> The annotation above is liferay annotation
08:04 < g33kyboi:#liferay> com.liferay.portal.kernel.bean.BeanReference;
08:13 < topolik:#liferay> sorry, need to leave now, quickly looking into BeanReferenceAnnotationBeanPostProcessor it seems that only portal spring context is involved here and I guess BeanReferenceAnnotationBeanPostProcessor is only wired using Spring again
08:16 < g33kyboi:#liferay> okay. thanks!
08:16 < g33kyboi:#liferay> I will figure it out
08:20 < Uzzi:#liferay> Workplace Reservation Manager  is not compatible with 6.2ce?
09:06 < NutsPT:#liferay> Hello, can someone give me a hand with freemarker?
09:43 < sm`:#liferay> hello im unable to @autowire a bean in my portlet class (extendes MVCPortlet)
09:44 < sm`:#liferay> LR 6.1
09:44 < sm`:#liferay> how do i do that? :)
09:44 < sm`:#liferay> it*
09:55 < jardineworks:#liferay> sm`, I just private messaged the dialog from the same question earlier
09:55 < jardineworks:#liferay> 6.2 -- but same reasoning I would bet.
10:02 < sm`:#liferay> tnx
10:02 < sm`:#liferay> basially says i cant use spring annotations
10:02 < sm`:#liferay> there
10:03 < sm`:#liferay> and try get em with PortletBeanLocatorUtil
10:04 < jardineworks:#liferay> bingo
10:05 < jardineworks:#liferay> that's what I understood from what topolik was explaining
12:21 < MikeHartman:#liferay> Can anyone help us with an issue we're having upgrading from 6.1 CE to 6.2 CE? I've been Googling all morning and can't find anyone with similar issues.
12:22 < modd:#liferay> what's the problem?
12:23 < MikeHartman:#liferay> We run the upgrade process (unzip the new bundle, move our settings over, etc. and start it up) and it seems to run ok - no errors in the logs. We're able to deploy our plugin code with no issue.
12:23 < MikeHartman:#liferay> Our pages are still there and our web content is still there, but the web content display portlets on all our pages are empty - they're there but not associated with the specific articles anymore
12:24 < MikeHartman:#liferay> In an attempt to troubleshoot this we temporarily turned of remote publishing (this is our staging server we're upgrading) and now the web content display portlets have completely disappeared.
12:24 < MikeHartman:#liferay> We took backups, so we could roll back and try again, but it's our second attempt and nothing has changed
12:26 < modd:#liferay> usually, you have the layouts/pages with the portlet/-instances on them
12:26 < MikeHartman:#liferay> So ideally we'd like to know how to "reappear" the display portlets that disappeared when we turned off remote publishing, and THEN how to fix the broken associations (so we don't have to roll back and do the upgrade all over again). But if nothing else we'd just like to know what's going wrong so we can do it all from scratch and get a successful upgrade.
12:26 < modd:#liferay> these portlets have portletpreferences
12:26 < MikeHartman:#liferay> yep
12:26 < modd:#liferay> here you have all the settings, also the articleId
12:26 < MikeHartman:#liferay> right
12:27 < MikeHartman:#liferay> I took a look at that table and it seems to be a lot smaller than it should be
12:27 < modd:#liferay> check, if these articleIds are given and if the Id matches a give journalarticle
12:27 < MikeHartman:#liferay> The number of rows in that table that have an articleid set is much lower than the number of active display portlets we had
12:27 < MikeHartman:#liferay> So I figured the upgrade was dropping a bunch of rows from that table, I just don't know why
12:28 < modd:#liferay> well, you can have one article but 50 display portlets to show the same article
12:28 < MikeHartman:#liferay> True, but in our case that doesn't happen much
12:28 < modd:#liferay> the problem might be related to the staging mechanism. in 6.1, it was..eh..unstable^^
12:28 < MikeHartman:#liferay> yeah
12:29 < MikeHartman:#liferay> We have the same environment setup (staging + remote live) in our qa environment and we were able to upgrade there without hitting this issue
12:29 < modd:#liferay> hmm
12:30 < modd:#liferay> do both, live and qa have the same content or is qa more like a testing environment without any real content?
12:31 < MikeHartman:#liferay> QA had a full import of everything that was in live stage (the environment we're currently working on). Only difference was age - I think the export was done a couple months ago.
12:32 < modd:#liferay> if everything is ok, and the content is the same, why not transfer it to live?
12:32 < MikeHartman:#liferay> Well, like I said, it's pretty stale
12:32 < MikeHartman:#liferay> Our business team is updating pages in live all the time, so we'd lose at least a couple months of their work
12:33 < modd:#liferay> ok, then reconstruct 6.1 qa first, then import from live, then update to 6.2 then transfer^^
12:33 < MikeHartman:#liferay> It's a shame import/export doesn't work across versions, or we would just roll back to 6.1, export, upgrade and reimport
12:34 < modd:#liferay> maybe some content, which was added inbetween destroys the upgrade content
12:34 < modd:#liferay> well, export/import works between versions..
12:34 < modd:#liferay> you have to edit the lar file but it works
12:34 < MikeHartman:#liferay> Not from everything I've read
12:35 < modd:#liferay> yep, some issues may appear
12:35 < MikeHartman:#liferay> Well, I heard that you can edit the lar to tell it the export was from a different version to fake it, but if actual format has changed it'll have issues
12:35 < MikeHartman:#liferay> yep
12:35 < MikeHartman:#liferay> Given all the changes I doubt it's very compatible - structures and templates are a new implementation under the hood now
12:36 < modd:#liferay> try to check, if the upgrade process fails because of any content
12:36 < MikeHartman:#liferay> Anyway, I guess we could roll back QA, roll back Live Stage, export Live Stage to QA, upgrade QA, upgrade Live Stage, and export QA to Live Stage as you suggest
12:36 < modd:#liferay> you could also run the portal in debug mode while upgrading
12:36 < MikeHartman:#liferay> But that is a LOT more time and work than I was hoping to put into this
12:37 < modd:#liferay> welcome to liferay^^
12:37 < MikeHartman:#liferay> And since the only difference between Live Stage and QA should be the newer content, there's no guarantee we wouldn't just run into the same problem with it in QA
12:38 < MikeHartman:#liferay> The upgrade process didn't toss any messages about failure or bad content in the logs (sorry, missing that line)
13:17 < bijoo_:#liferay> NutsPT: Hi, what's your question on freemarker there?
13:17 < bijoo_:#liferay> NutsPT: https://issues.liferay.com/browse/LPS-48360 seems is fixed in latest 6.2, what version are you using that has it?
13:19 < NutsPT:#liferay> 6.2 CE
13:20 < bijoo_:#liferay> NutsPT: 6.2 GA1 or GA2?
13:20 < NutsPT:#liferay> GA2
13:21 < bijoo_:#liferay> My bad, not fix in latest 6.2 - per the isssue field "Fix Version/s", it's these:
13:21 < bijoo_:#liferay> Fix Version/s: 6.2.X EE, 7.0.0 M1
13:23 < NutsPT:#liferay> yeps, any workaround
13:23 < NutsPT:#liferay> ?
13:23 < NutsPT:#liferay> major issues here because of this
13:23 < bijoo_:#liferay> NutsPT: https://github.com/liferay/liferay-portal/commit/7cd5e798c9addbdc033b45a2e2c3ef4fbeee4e6c
13:24 < bijoo_:#liferay> NutsPT: checking if that class can be changed through hook
13:24 < bijoo_:#liferay> NutsPT: if not, can create ext plugin or such
13:25 < NutsPT:#liferay> ok, I will see what to do
13:25 < bijoo_:#liferay> NutsPT: so it seems it's not supported through hook
13:25 < bijoo_:#liferay> NutsPT: best option is to create ext plugin
13:27 < NutsPT:#liferay> that’s really bad, I hate, everybody does, Ext Plugins
13:27 < NutsPT:#liferay> unmanageble
13:27 < NutsPT:#liferay> but ok, at least we know where is the problem
13:27 < bijoo_:#liferay> NutsPT: agreed, with OSGi should less pain
13:28 < NutsPT:#liferay> yeps
13:28 < NutsPT:#liferay> thx a lot
13:28 < NutsPT:#liferay> :)
13:28 < bijoo_:#liferay> NutsPT: are you comfortable with making patch? Just take from source and apply 1-line change.
13:29 < NutsPT:#liferay> yeps I know how to code ext :P just don’t like to mantain the portal after it
13:29 < NutsPT:#liferay> regards, and cya tomorow
13:29 < bijoo_:#liferay> NutsPT: cya, have a great day, let me know test
13:29 < NutsPT:#liferay> ok
13:32 < bijoo_:#liferay> Uzzi: from MP, just 6.1 EE, right?
13:40 < bijoo_:#liferay> MikeHartman: I hear you about the upgrade issue; I'd have to re-echo what modd said though; whenever have issue like this, debug; it provides a new perspective on this; usually learn something new as well; and not always have to spend hours there; sometimes with a few mins debug/breakpoints (especially conditional breakpoints); I always use debug to find issues; especially when the function's complex (e.g. permission system etc.)
14:28 < MikeHartman:#liferay> bijoo: I agree, using the debugger is the ideal when troubleshooting anything. Unfortunately we're only having this issue in our live staging environment, and remote debugging against the jvms on our servers is INSANELY slow. As in, every time I tell it to step it takes 30 seconds minimum to finish loading everything - often significantly more than that. So connecting the debugger to our servers is always the absolute last
14:28 < MikeHartman:#liferay>  resort.
14:30 < MikeHartman:#liferay> Unfortunately the only other debugging I can do is to crank the log4j levels up to ALL, and Liferay is incredibly sparse with its logging, so that rarely helps much. That's what I'll be trying next though.
14:33 < jardineworks:#liferay> MikeHartman, can you use jdb?
14:33 < jardineworks:#liferay> that's what I resort to when I have to do remote debugging over the vpn (barf)
14:38 < MikeHartman:#liferay> I don't know if we've tried that
14:43 < jardineworks:#liferay> MikeHartman, it's a wee bit tricky to get going with if you don't use it often (I certainly don't) but it certainly beats the slow connection stuff as it is all text
15:08 < MikeHartman:#liferay> Thanks, I might try that if this drags on much longer
16:08 < NutsPT:#liferay> Hi ppl, trying to ext a liferay bug in CE 6.2 GA2
16:08 < NutsPT:#liferay> can someone help
16:08 < NutsPT:#liferay> https://www.liferay.com/documentation/liferay-portal/6.2/development/-/ai/developing-an-ext-plugin-liferay-portal-6-2-dev-guide-12-en
16:08 < NutsPT:#liferay> I’m following this
