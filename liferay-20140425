--- Log opened Fri Apr 25 00:00:46 2014
03:57 < twen> 'morning
04:05 < modd> hi
06:13 < sm`> hello
06:14 < sm`> does anyone have any resource for creating JSONWebService without using Service Builder
06:14 < sm`> http://www.liferay.com/community/forums/-/message_boards/message/36741036
06:14 < sm`> i got stuck with using ServiceBuilder cuz the generated stuff (spring conf topolik suggested) is colliding with my custom
06:14 < sm`> spring configuration
06:15 < sm`> my spring+hibernate configuratioN*
06:15 < topolik> sm`: Hi, I thought about it and there is no other exception in spring registration, right?
06:16 < sm`> no just those 2
06:16 < sm`> however i noticed another thing
06:16 < sm`> i have <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> in my web.xml
06:17 < sm`> i found some suggestions on the forum
06:17 < sm`> to use <listener-class>com.liferay.portal.kernel.spring.context.PortletContextLoaderListener</listener-class>
06:18 < topolik> the PortletContextLoaderListener should be added during auto deploy
06:18 < sm`> but when i do this, my portlet is not working ie my appcontext is not loaded corectly
06:20 < topolik> PortletContextLoaderListener is responsible to init the spring context
06:20 < topolik> but it inits the context from the service builder files
06:20 < topolik> on the other hand, ContextLoaderListener should initialize from your app XML
06:20 < topolik> so I guess there is a conflict in the initialization
06:21 < topolik> (there can be only one root spring context)
06:21 < sm`> i moved my spring conf in ext-spring.xml
06:21 < sm`> and it loads fine from there too
06:21 < sm`> the portlet is working fine
06:21 < sm`> but the jsonws still throws the same exception
06:21 < topolik> and you kept the ContextLoaderListener in web.xml?
06:22 < sm`> nope removed it
06:22 < topolik> ok
06:22 < sm`> i thought the service builder will load it
06:22 < sm`> and it did
06:22 < topolik> ok
06:22 < sm`> but there is still some other problem
06:23 < sm`> thats why i thought that maybe i should go and do everything manually
06:23 < sm`> create my own Service and ServiceImpl @JSONWebService classes
06:25 < topolik> uhm, it should work OOTB
06:26 < topolik> and you still get the same exception - that bean locator is not set?
06:27 < topolik> because now it should be set when ServiceBuilder is initialized (at least with our beans)
06:27 < topolik> *our = your :D
06:27 < sm``> yes
06:27 < sm``> {"exception":"com.liferay.portal.kernel.bean.BeanLocatorException: BeanLocator has not been set for servlet context StoreFinder-portlet"}
06:28 < sm``> and also INFO   | jvm 1    | 2014/04/25 11:43:26 | SEVERE: ClassNotFoundException while loading persisted sessions: java.lang.ClassNotFoundException: com.liferay.portal.model.impl.UserImpl
06:28 < sm``> on restart
06:29 < topolik> hmm, ok, let's try to solve this one, just in case it has something in common
06:30 < topolik> I think tomcat is saving existing sessions into some files somewhere so that they persist restarts
06:31 < topolik> yeah, SESSIONS.ser - https://tomcat.apache.org/tomcat-7.0-doc/config/manager.html
06:31 < topolik> is it possible for you to delete the file?
06:31 < sm`> yes
06:31 < sm`> at least on the developent server
06:39 < sm`> find . -name 'SESSIONS.ser'
06:39 < sm`> ./tomcat-7.0.27.mac/work/Catalina/localhost/StoreFinder-portlet/SESSIONS.ser
06:40 < sm`> let me remove that one
06:40 < sm`> and start the tomcat again
06:42 < sm`> that fixed the exceptions on statup
06:42 < sm`> u were right
06:42 < sm`> tnx
06:43 < sm`> but the problem with the jsonws is still there
06:43 < sm`> damn.
06:44 < topolik> ok, at least we know it's not related :)
06:45 < sm`> haha
06:45 < sm`> true
06:47 < topolik> can you please share content of the service.properties, all the spring config files and deployed web.xml (the rewritten one)?
06:49 < sm`> web.xml, the one after deployment or my latest?
06:52 < sm`> nvm
06:52 < sm`> let me pastebin
06:53 < sm`> service.properties, ext-spring.xml, web.xml - http://pastebin.com/jgZQUrsM
06:53 < sm`> shall i pastebin the other generated by service builder such as base-spring, cluster-spring, hibernate-spring etc. ?
06:55 < modd> will journalarticlelocalserviceutil.getarticlebyresourceprimkey always return the list sorted by version desc? I can't find the service.xml for this service
06:57 < topolik> sm`: I see you still have org.springframework.web.context.ContextLoaderListener in the web.xml
06:57 < topolik> and yes, I meant the one inside tomcat, after deployment
07:02 < sm`> yes i do... shall i remove it?
07:04 < sm`> let me try that and then paste the deployed web.xml
07:09 < sm`> how the @JSONWebService
07:09 < sm`> is not scanned
07:10 < sm`> the webserivces are not listed on /StoreFinder-portlet/api/jsonws
07:10 < sm`> after i removed the ContextLoaderListener
07:12 < sm`> and heres the deployed web.xml
07:12 < sm`> http://pastebin.com/z4BzkGiL
07:12 < sm`> and im officially lost ;]
07:55 < twen> Hello.. I'm discovering Liferay, as we will use it in the next month in prod
07:56 < twen> I'm wondering: I created a private site. and added 2 public pages. Are these pages viewable to non members ? or should I put these page to private... in this private site ?
08:00 < GevatterJan> Hey twen.  idea of Private and Publc scope is:
08:00 < GevatterJan> Private is only accessible by members of the group.
08:00 < GevatterJan> Public is available to everyone.
08:01 < sm`> topolik, any idea how my portlets dont initialize with com.liferay.portal.kernel.spring.context.PortletContextLoaderListener
08:01 < GevatterJan> If you want to change that behavior you modify the Permissions on that paes
08:01 < sm`> and they work fine with org.springframework.web.context.ContextLoaderListener
08:06 < twen> GevatterJan Thanks for the input. I think I mixed a little bit 2 things :p
08:07 < twen> in a private site, public pages are viewable to anyone. bt to see private pages, non members needs to be "subscribed" by the site admin. Right ?
08:10 < modd> you don't need to be a member of a site to see the public site but you have to be a member to see the private site
08:10 < topolik> sm`: good progress! so with ContextLoaderListener everything works fine, except calling the services. With PortletContextLoaderListener the portlet is not initialized
08:10 < modd> the pages in these sites have own restrictions
08:10 < sm`> topolik, yes and i cant understand why
08:11 < sm`> because
08:11 < sm`> public class PortletContextLoaderListener extends org.springframework.web.context.ContextLoaderListener
08:11 < sm`> http://docs.liferay.com/portal/6.1/javadocs-all/com/liferay/portal/spring/context/PortletContextLoaderListener.html
08:11 < modd> e.g. you can give guests view permissions on a page of a private site but a non-registred user can't access this page because he's not a member of the site
08:11 < modd> so private/pubic sites is only about member or not
08:12 < modd> while pages will work with the other roles and permissions of liferay
08:17 < topolik> sm`: ok, try to use PortletContextLoaderListener instead of Spring's ContextLoaderListener. What exception do you get?
08:18 < topolik> looking at https://github.com/liferay/liferay-portal/blob/6.1.2-ga3/portal-impl/src/com/liferay/portal/spring/context/PortletContextLoaderListener.java, it initializes the Spring context using the ContextLoaderListener + adds other things, like the BeanLocator we need
08:18 < topolik> and reads spring config using the listener init parameter "portalContextConfigLocation" in web.xml
08:19 < topolik> ah, no, it's servlet context init parameter
08:20 < topolik> and, uhm - https://github.com/liferay/liferay-portal/blob/6.1.2-ga3/portal-impl/src/com/liferay/portal/spring/context/PortalApplicationContext.java
08:20 < GevatterJan> <context-param>
08:20 < GevatterJan> 		<param-name>contextConfigLocation</param-name>
08:20 < GevatterJan> 		<param-value>classpath*:/META-INF/applicationContext.xml</param-value>
08:20 < sm`> topolik, when i use PortletContextLoaderListener my portlets doesnt initialize
08:20 < GevatterJan> 	</context-param>
08:20 < sm`> nothing workzz
08:20 < GevatterJan> 	<listener>
08:20 < GevatterJan> 		<listener-class>com.liferay.portal.kernel.spring.context.PortletContextLoaderListener</listener-class>
08:20 < GevatterJan> 	</listener>
08:20 < GevatterJan> 	<listener>
08:20 < GevatterJan> 		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
08:20 < GevatterJan> 	</listener>
08:20 < GevatterJan> 	<listener>
08:20 < GevatterJan> 		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
08:20 < GevatterJan> 	</listener>
08:20 < GevatterJan> 	
08:20 < GevatterJan>    <context-param>
08:20 < GevatterJan> 		<param-name>portalContextConfigLocation</param-name>
08:20 < GevatterJan> 		<param-value>/WEB-INF/context/common.xml</param-value>
08:20 < GevatterJan>   </context-param>
08:20 < GevatterJan>   	<servlet>
08:20 < GevatterJan>     	<servlet-name>ViewRendererServlet</servlet-name>
08:20 < GevatterJan>     	<servlet-class>org.springframework.web.servlet.ViewRendererServlet</servlet-class>
08:20 < GevatterJan>     	<load-on-startup>1</load-on-startup>
08:20 < GevatterJan>   	</servlet>	 	
08:20 < GevatterJan> 	<servlet>
08:20 < GevatterJan> 		<servlet-name>JSON Web Service Servlet</servlet-name>
08:21 < GevatterJan> 		<servlet-class>com.liferay.portal.kernel.servlet.PortalClassLoaderServlet</servlet-class>
08:21 < GevatterJan> 		<init-param>
08:21 < GevatterJan> 		<param-name>servlet-class</param-name>
08:21 < GevatterJan> 		<param-value>com.liferay.portal.servlet.JSONServlet</param-value>
08:21 < GevatterJan> 		</init-param>
08:21 < GevatterJan> 		<load-on-startup>0</load-on-startup>
08:21 < GevatterJan> 	</servlet>
08:21 < GevatterJan> 	<servlet-mapping>
08:21 < GevatterJan> 		<servlet-name>JSON Web Service Servlet</servlet-name>
08:21 < GevatterJan> 		<url-pattern>/api/jsonws/*</url-pattern>
08:21 < GevatterJan> 	</servlet-mapping>
08:21 < GevatterJan> 	<servlet-mapping>
08:21 < GevatterJan> 		<servlet-name>JSON Web Service Servlet</servlet-name>
08:21 < GevatterJan> 		<url-pattern>/api/secure/jsonws/*</url-pattern>
08:21 < GevatterJan> 	</servlet-mapping>	
08:21 < GevatterJan>   	<servlet-mapping>
08:21 < GevatterJan>     	<servlet-name>ViewRendererServlet</servlet-name>
08:21 < GevatterJan>     	<url-pattern>/WEB-INF/servlet/view</url-pattern>
08:21 < GevatterJan>   	</servlet-mapping>
08:21 < GevatterJan>   	<servlet>
08:21 < GevatterJan> 	    <servlet-name>webservices</servlet-name>
08:21 < GevatterJan> 	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
08:22 < GevatterJan>     	<load-on-startup>1</load-on-startup>
08:22 < GevatterJan>   	</servlet>
08:22 < GevatterJan>   	<servlet-mapping>
08:22 < GevatterJan> 	    <servlet-name>webservices</servlet-name>
08:22 < GevatterJan>     	<url-pattern>/service/*</url-pattern>
08:22 < GevatterJan>   	</servlet-mapping>
08:22 < GevatterJan> I do add all these things to get it working properly...
08:22 < topolik> oh, great!
08:23 < sm`> GevatterJan, can you please pastebin, im using mIRC :)
08:24 < GevatterJan> http://pastebin.com/ftj5dfmC
08:25 < sm`> tnx
08:25 < topolik> if it works, we should save it for future generations! :)
08:26 < twen> I'm surprise this channel has no flood conreol :-O
08:26 < twen> control
08:27 < sm`> i bet i t does
08:27 < sm`> but the threshold is higher ;]
08:32 < sm`> fuck me
08:32 < sm`> i added the 3 listeners
08:32 < sm`> <listener>
08:32 < sm`>              <listener-class>com.liferay.portal.kernel.spring.context.PortletContextLoaderListener</listener-class>
08:32 < sm`>      </listener>
08:32 < sm`>      <listener>
08:32 < sm`>              <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
08:32 < sm`>      </listener>
08:32 < sm`>      <listener>
08:32 < sm`>              <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
08:32 < sm`>      </listener>
08:33 < sm`> and still the sam exception on the webservice
08:43 < GevatterJan> YOU WANT TO WRITE A WEBSERVICE ON YOUR OWN WITH SPRING CONTROLLERS?
08:43 < GevatterJan> Uupsi. Sry 4 caps
08:44 < jardineworks> lol
08:44 < sm`> :D
08:44 < jardineworks> i proposed to my wife on National Caps Locks Day.
08:44 < jardineworks> I had tshirts made ... "eRIN wILL yOU mARRY mE?"
08:44 < sm`> i have portlets with my own spring + hibernte configuration
08:44 < GevatterJan> Or do you want to use the WebservicesBuild by Liferay Service Builder
08:44 < sm`> now i want to create JSONWebserive
08:44 < jardineworks> she had two to choose from  "nO" and "yES" :)
08:44 < GevatterJan> Ahh. So you want to create by scratch on your own.
08:45 < sm`> using ServiceBuilder (cuz i couldnt find way to do it manually)
08:45 < sm`> and now... the @jsonwebserive is being listed
08:45 < sm`> and everything
08:45 < jardineworks> sm`, I thought that only required enabling remote as true in the service.xml file?
08:45 < sm`> but the method throws execption
08:45 < sm`> i did that....
08:45 < jardineworks> sm`, sorry, I think I am late to the game here
08:46 < sm`> haha yeah :D
08:46 < sm`> i did all that
08:46 < sm`> created service.xml
08:46 < jardineworks> sm`, is there a pastebin stacktrace you still have handy?
08:46 < sm`> added method in ServiceImmpl
08:46 < sm`> changed web.xml as the official documentation suggests
08:47 < sm`> AND
08:47 < sm`> everything works fine
08:47 < sm`> its just the method throws a fucking exception
08:47 < sm`> i think i have few pastebins :D
08:47 < GevatterJan> What exception in particular?
08:47 < sm`> [12:52:52] <sm`> service.properties, ext-spring.xml, web.xml - http://pastebin.com/jgZQUrsM
08:47 < sm`> 13:12:09] <sm`> and heres the deployed web.xml
08:47 < sm`> [13:12:10] <sm`> http://pastebin.com/z4BzkGiL
08:47 < jardineworks> wait... when you say everything works fine, does that mean that you are able to call the service and get a result, but the calling process also dumps an exception?
08:48 < jardineworks> sm`, both have been removed (apparently)
08:48 < GevatterJan> This paste has been removed!
08:48 < GevatterJan> :)
08:48 < sm`> REMOVED!
08:48 < sm`> :D
08:49 < sm`> jardineworks, yes i can call the service
08:49 < GevatterJan> :p
08:49 < sm`> but it dumps
08:49 < sm`> {
08:49 < sm`>   "exception": "com.liferay.portal.kernel.bean.BeanLocatorException: BeanLocator has not been set for servlet context StoreFinder-portlet"
08:49 < sm`> }
08:50 < sm`> ill paste my latest try :D
08:50 < GevatterJan> Uuuuhhh....
08:50 < GevatterJan> BeanLocator has not been set for servlet context StoreFinder-portlet
08:50 < GevatterJan> These are always a p... i. t.. a..
08:51 < sm`> http://pastebin.com/m4zDqaA5
08:51 < sm`> web.xml, custom spring conf i need for the protlets, service.properties
08:53 < GevatterJan> I think your problem is, that you try to mix Custom Hibernate and Spring Service Builder.
08:53 < GevatterJan> I think these 2 can get in trouble.#
08:53 < sm`> thats what topolik suggested
08:53 < sm`> thats why i wanted to create manually the service
08:54 < sm`> cuz i dont need the SB hibernate stuff
08:54 < GevatterJan> To be honest I have never ever coded with hibernate directly.
08:54 < sm`> but couldnt find documentation on it
08:54 < GevatterJan> As a Workaround you could just do a custom Servlet which will server as a Webservice.
08:54 < GevatterJan> As a Workaround you could just do a custom Servlet which will serve as a Webservice.
08:54 < sm`> sure i can do that
08:55 < sm`> create my own restful spring api
08:55 < GevatterJan> Jep.
08:55 < sm`> but i thought i should use the built in JSONWebservice
08:55 < sm`> and got stucK!
08:55 < GevatterJan> So you have to configure that.
08:55 < sm`> and i dont really easily give up things
08:55 < sm`> ;]
08:55 < sm`> on things*
08:55 < jardineworks> lol
08:56 < jardineworks> sm`, no great technologist does ;)
08:56 < GevatterJan> Isnt JSONWebService from Spring?
08:56 < jardineworks> but it is Friday
08:56 < jardineworks> ....
08:56 < sm`> https://www.liferay.com/documentation/liferay-portal/6.1/development/-/ai/json-web-services
08:56 < GevatterJan> And after the Weekend there will be a Monday. Surprise Surprise! :)
08:56 < twen> Is there a repository of pre made document type ? (most standard type existing)
08:57 < jardineworks> GevatterJan, exactly! does exhaust all the hair pulling today! save some for next week!
08:57 < sm`> haha
08:57 < sm`> ill go with the spring restful
08:57 < sm`> api
08:57 < sm`> if i dont solve this
08:57 < GevatterJan> Ok. Here is the Problem. JSONWebService is from Liferay and will therefor only work with Liferay Services.
08:57 < sm`> by the end of the day
08:57 < GevatterJan> At least I can imagine it that way.
08:58 < sm`> thats what i understand too
08:58 < sm`> thats why i tried to mix it up!
08:58 < sm`> custom spring+hb with sb
08:58 < sm`> :D
08:58 < GevatterJan> Which is quite a pain in the a.
08:58 < GevatterJan> I havent figured out a way to integrate the Liferay Spring Beans into my Portlet Context.
08:59 < GevatterJan> 2So in my Controller which are instantiated by Spring, I cannot doe something like this:
08:59 < GevatterJan> @Autowired
08:59 < GevatterJan> UserService userService;
08:59 < sm`> is there any way i can get details what's happening behind the 'Built Service' process
08:59 < sm`> so i can myabe figure out a way how to create @JSONWebservice manually
09:00 < GevatterJan> Well, a Ton of classes get generated whith about 5 Layers of abstraction, The Spring XMLs will get generated and so on.
09:00 < sm`> Do i really need all those classes and all those spring xmls ?
09:01 < sm`> i assume no ;]
09:01 < GevatterJan> The problem is something different I think. AFAIK it is not possible to integrate the Liferay Core Services into your POrtlet Context.
09:01 < GevatterJan> I think this has something to so with classloader issues...
09:02 < GevatterJan> Öhmmm...
09:45 -!- mode/#liferay [+o jhf] by ChanServ
10:28 < sm`> ok no luck
10:28 < sm`> im going with spring restful services
10:28 < sm`> tnx everyone for the help
10:29 < sm`> much appreciated
11:54 < kmels> hi, anyone here? I'm trying to use an OrderByComparator by defining compare()
11:55 < kmels> compare(Object o1,Object o2); but I get an exception at com.liferay.util.dao.orm.CustomSQL.replaceOrderBy(CustomSQL.java:716)
12:31 < bijoo_> kmels: hey, can you post the code pastebin.com?
12:34 < bijoo_> kmels: you know you can use the factory too? OrderByComparatorFactoryUtil.create(String tableName, Object ... columns)
12:51 < blahah>  /join cwnn
13:31 -!- mode/#liferay [+o jhf] by ChanServ
13:36 < Naenyn> Does anyone happen to know what I'd need to hook in to in order to make a custom SAML call after a CAS response without modifying the behavior of the normal (local) login portlet? Basically, we've got got the CAS portion of our 3rd party auth'n integration working fine, but need to be able to make one samlValidate call to get the user id before the user can be logged in successfully to Liferay.
13:42 < bijoo_> Naenyn: Create a new filter run after CAS?
13:43 < Naenyn> bijoo_: that sounds reasonable. never made a LR filter before. I'm also wondering if I'd have to handle establishing the user's session myself..
13:44  * Naenyn is looking at the sample filter source.
13:53 < Naenyn> interesting, it looks like the liferay cas support itself is a filter.
14:00 < bijoo_> Naenyn: indeed, you can create a hook here; there are several options to look at.
14:00 < bijoo_> Naenyn: one would be to create "after filter"
14:01 < bijoo_> Naenyn: other is to build on the existing; and replace the OOB with custom.
14:07 < Naenyn> bijoo_: I think I'd want to do my custom stuff after the CAS filter .. so, two questions. If I made an "after filter" .. how would I indicate it is supposed to happen after CASFilter.java? I see that filters can be configured to match URL patterns or servlet names..
14:09 < Naenyn> bijoo_: and second question: once I make the samlValidate call and get my user's id.. what would need to happen in order for Liferay to establish the user's session based on this? Just getting the user by user id and .. doing what with it?
14:11 < bijoo_> Naenyn: so two points if you're gonna take this route: 1) after-filter is defined in the hook (see for example https://github.com/liferay/liferay-portal/blob/master/definitions/liferay-hook_6_2_0.dtd#L194 )
14:13 < bijoo_> Naenyn: 2) note that there is a bug at the moment   https://issues.liferay.com/browse/LPS-46155
14:13 < bijoo_> Naenyn: something's come up; I'll get back 10 minutes.
14:29 < Naenyn> bijoo_: Hmm... not completely sure but I think that bug might not apply to me? I don't think I'd need multiple mappings.. I just need to make one samlValidate call on login after the CAS piece. No other calls (login or logout)...
15:07 < bijoo_> Naenyn: sorry is taking longer than I thought. I'll be back in couple minutes here.
15:08 < Naenyn> np =]
16:09 < bijoo_> Naenyn: with regard to your second question there: com.liferay.portal.security.auth.CASAutoLogin
16:09 < bijoo_> Naenyn: you can use that to identify it
16:09 < bijoo_> Naenyn: you can create a ThreadLocal util
16:10 < bijoo_> Naenyn: that will store the username of user; or whatever else about it you need.
16:10 < bijoo_> Naenyn: well let me step back a second here
16:13 < Naenyn> so, when my saml hook fires, I'm assuming the CAS piece is already done. I need to grab the service ticket, make a samlValidate call with that ticket, and get the user id from the response. Then I need to get the liferay user by that id and cause that user to be logged in to the system.
16:13 < Naenyn> I've got a little test hook in place but I can't tell for sure that it is firing after the CAS calls.
16:14 < bijoo_> Naenyn: have you setup Liferay debugging there? http://www.liferay.com/web/raymond.auge/blog/-/blogs/debugging-liferay-in-eclipse
16:14 < bijoo_> Naenyn: you can see exactly what's happening.
16:15 < bijoo_> Naenyn: e.g. set breakpoints and step through the code.
16:15 < Naenyn> Not yet.. I'll need to do that.
16:15 < Naenyn>     <servlet-filter-mapping>
16:15 < Naenyn>         <servlet-filter-name>SAML Filter</servlet-filter-name>
16:15 < Naenyn>         <after-filter>CASFilter</after-filter>
16:15 < Naenyn>         <url-pattern>/c/portal/login</url-pattern>
16:15 < Naenyn>         <dispatcher>REQUEST</dispatcher>
16:15 < Naenyn>         <dispatcher>FORWARD</dispatcher>
