--- Log opened Thu Jan 09 00:00:29 2014
06:34 < rrapozo:#liferay> jhf: Are you there? :)
07:39 <@jhf:#liferay> hey rrapozo
07:39 < rrapozo:#liferay> me!!! :D
07:39 <@jhf:#liferay> yes I think so - I think there are a few different issues going on here
07:39 <@jhf:#liferay> first off, which browser are you using?
07:40 < rrapozo:#liferay> I tried with firefox and chromium
07:40 <@jhf:#liferay> hmm ok.. and on firefox, do you see the progress bar at all (even if it does not actually move with the progress)?
07:41 <@jhf:#liferay> what I found was that I could not see it on Chrome, but always saw it on FF. further, depending on the size of the file, it sometimes never updated because Tomcat caches the entire file first before handing it off to Liferay, so by the time Liferay code "sees" the upload, it's already 100% done.
07:42 <@jhf:#liferay> when I change the max upload size in Liferay to something huge (like 100GB) then upload, say, a 4GB file, it works for me,.
07:42 < rrapozo:#liferay> yes, it happens! The progress bar show but dont move
07:42 <@jhf:#liferay> ok. can you first try it agin, but with a file that is ~ 99MB (the default max upload size is 100MB I believe)
07:43 < rrapozo:#liferay> ok!
07:43 < rrapozo:#liferay> can you send the code java em html please?
07:44 < rrapozo:#liferay> because I want have the same environment
07:44 < rrapozo:#liferay> And I'm creating one file with 99MB
07:46 <@jhf:#liferay> ok.. are you on unix? because I have hard-coded the directory to "/tmp" (where the file is saved after uploading)
07:46 < rrapozo:#liferay> yes, ubuntu 13.10
07:46 < rrapozo:#liferay> :)
07:46 < rrapozo:#liferay> perfect!
07:47 <@jhf:#liferay> java code: https://gist.github.com/anonymous/8333579
07:47 <@jhf:#liferay> my JSP: https://gist.github.com/anonymous/8333586
07:48 <@jhf:#liferay> I was playing with setting the progress attribute directly (via getPortletSession().setAttribute()) but I don't actually think this is needed.
07:49 <@jhf:#liferay> rrapozo:
07:49 <@jhf:#liferay> java code: https://gist.github.com/anonymous/8333579
07:49 <@jhf:#liferay> [7:45am] <jhf>
07:49 <@jhf:#liferay> my JSP: https://gist.github.com/anonymous/8333586
07:49 <@jhf:#liferay> [7:46am] <jhf>
07:49 <@jhf:#liferay> I was playing with setting the progress attribute directly (via getPortletSession().setAttribute()) but I don't actually think this is needed.
07:49 <@jhf:#liferay> if it doesn't work with 99MB we'll try something larger
07:49 < rrapozo:#liferay> ok
07:50 <@jhf:#liferay> but you'll need to set the maximum size limit higher (via Control Panel).
07:50 <@jhf:#liferay> also, are you operating entirely on localhost? e.g. there's no "real" networking between your browser and server?
07:51 < rrapozo:#liferay> yes, I can try in a network
07:59 <@jhf:#liferay> I believe what's happening is that over the local network (localhost), when Tomcat attempts to parse the incoming HTTP POST (containing the binary payload), it is able to read the entire file before handing back to Liferay, so Liferay never sees "progress" until 100%. I think with a huge file, and/or using a "real" network link, Tomcat won't see all the bits so fast, and will hand control back to Liferay to process the stream and "see" progress.
08:00 <@jhf:#liferay> so, in other words, it "works" but progress isn't shown nicely.
08:01 < rrapozo:#liferay> ok, I will test now
08:01 <@jhf:#liferay> To increase the max allowed file size, go to Control Panel -> Server Administration (its near the bottom of Control Panel in 6.1).
08:01 <@jhf:#liferay> then click the "File Uploads" tab
08:01 <@jhf:#liferay> and change the first setting ("Overall Maximum File Size") to something huge.
08:02 <@jhf:#liferay> and click Save
08:02 <@jhf:#liferay> then try again with a larger file, say, 2GB or more
08:08 < rrapozo:#liferay> Nice!!! I will read slowly and understant everything but one think is that the progress worked with a file 98.9MB
08:27 < jhf3000:#liferay> <-- jhf but on mobile
09:32 -!- mode/#liferay [+o rotty3000] by ChanServ
09:35 < jardineworks:#liferay> topolik, are you there?
09:37 < bjornjohansson:#liferay> Is there a way to force liferay to try generate previews of files without file endings?
09:37 < bjornjohansson:#liferay> for example without .xls or .doc
09:38 < bjornjohansson:#liferay> (sometimes customers is a pain in the ass ;))
09:38 -!- mode/#liferay [+o rotty3000] by ChanServ
09:40 -!- mode/#liferay [+o rotty3000] by ChanServ
09:43 < jardineworks:#liferay> bjornjohansson, customers are always a pain in the ass
09:43 < bjornjohansson:#liferay> life would be so much easier without customers :)
09:44 < jardineworks:#liferay> working life... regular paying for things life might be harder :)
09:45 < bjornjohansson:#liferay> hehe :)
09:47 < bjornjohansson:#liferay> Yeah, life without being able to buy my cigars would be aweful ;)
10:29 < rrapozo:#liferay> jhf: I don't understand! Just worked 1 time!
10:33 < rrapozo:#liferay> And I tried with large files in a network
10:33 < rrapozo:#liferay> :(
10:34 <@jhf:#liferay> hey rrapozo there's one thing you can try, that I suspect may also be an issue with the browser
10:34 <@jhf:#liferay> locate the file tomcat-7.0.40/webapps/ROOT/html/portal/upload_progress_poller.jsp
10:35 <@jhf:#liferay> there is a line near the end that reads "setTimeout(window.location.reload, 1000);
10:35 <@jhf:#liferay> change it to
10:35 <@jhf:#liferay> setTimeout(function() {window.location.reload(true);}, 1000);
10:35 < rrapozo:#liferay> ok
10:35 <@jhf:#liferay> this is the function that causes the progress bar to update itself once a second. I found that in some cases it didn't actually trigger a call back to the server because browsers cache pages
10:35 <@jhf:#liferay> but the (true) forces it to always go back to the server.
10:36 <@jhf:#liferay> btw, this is completely redesigned (in a better way) in Liferay 6.2 :)
10:36 <@jhf:#liferay> bbi10
10:50 < rrapozo:#liferay> One question James. Do you know have the liferay IDE for the 6.2 version?
11:03 < dawn:#liferay> A quick question, I am not able to import a LAR that was exported from LR 6.2 GA1 of different instance. The error says missing Document that was refered in Asset publisher. The manifest file in lAR has some missing references. Now how do I trace those to a particular asset publisher on a web page, Any help is appreciated.
11:05 < dawn:#liferay> here is how a sample entry looks like
11:05 < dawn:#liferay> 		<missing-reference class-name="com.liferay.portlet.documentlibrary.model.DLFileEntryType" class-pk="10710" display-name="ba453c62-80b2-4166-b197-654061d600b7" group-id="10682" type="dependency" referrer-class-name="com.liferay.portal.model.Portlet" referrer-display-name="101" uuid="ba453c62-80b2-4166-b197-654061d600b7" company-id="10154" preloaded="false" file-entry-type-key="SALES PRESENTATION"/>
11:16 < jardineworks:#liferay> jhf, I think I figured out this friendly url crap
11:17 <@jhf:#liferay> yay!!
11:17 <@jhf:#liferay> what was the cognitive leap you made to this nirvana ?
11:17 < jardineworks:#liferay> well... still stepping through to be sure :)
11:18 < jardineworks:#liferay> but the DefaultFriendlyURLMapper doesn't appear to add submitted form parameters to the route parameters before it tries to match the friendly url.
11:18 < jardineworks:#liferay> I'm still on the way in, so maybe this makes sense...
11:18 < jardineworks:#liferay> we'll see
11:18 <@jhf:#liferay> ok. i'm heading to lunch with some visiting brazillians, so will be back in about.. oh.. 4 or 5 hours :)
11:18 < jardineworks:#liferay> lol
12:20 < jardineworks:#liferay> topolik, still fighting with the friendly url stuff. I think I know the issue but not sure how to solve it. The issue for me is that the form fields are not added to the route parameters before the route selection in made. I tried to override by creating a custom mapper (extending the default one) but the problem is that the form parameters are in the PARENT parameter map, which is private so I can't get to it.
12:20 < jardineworks:#liferay> topolik, do you have any ideas? ... I'm nearing pure desperation here.
12:23 < topolik:#liferay> jardineworks: Hi
12:24 < topolik:#liferay> I thought the route is chosen based on the URL, isn't it? Regardless of provided parameters
12:26 < jardineworks:#liferay> topolik, it is.. but the url is assembled from parameters before the match is made.
12:26 < jardineworks:#liferay> so I am getting back /test/view?first=jonh&last=doe ...
12:26 < jardineworks:#liferay> but I want to get back /test/view/john/doe
12:27 < jardineworks:#liferay> the route parameters are built based only on url params, not on the entire parameter map.
12:27 < jardineworks:#liferay> at least, that is my understanding.
12:27 < topolik:#liferay> hehe, I'm lost :D
12:28 < topolik:#liferay> so
12:28 < jardineworks:#liferay> ok - I have a form with two fields. First and Last name.
12:28 < topolik:#liferay> ok
12:28 < jardineworks:#liferay> I have a route with a pattern /view/name/{first}/{last}
12:29 < topolik:#liferay> ok
12:29 < jardineworks:#liferay> if I create a <portlet:renderURL><portlet:param name="fitrst"... etc... then that route is found and matched
12:29 < jardineworks:#liferay> makes sense, those params are part of the url
12:29 < jardineworks:#liferay> now
12:30 < topolik:#liferay> wait pls
12:30 < jardineworks:#liferay> sure
12:30 < topolik:#liferay> so when you create the portlet  render url it is /-/portlet_name/view/name/first/last, right?
12:30 < jardineworks:#liferay> right
12:30 < jardineworks:#liferay> in my case, /-/friendlyurl.view/name/john/doe
12:30 < topolik:#liferay> and when you click on the URL it is matched and translated back, right?
12:30 < jardineworks:#liferay> yes
12:31 < topolik:#liferay> ok
12:31 < jardineworks:#liferay> and that part is awesome...
12:31 < jardineworks:#liferay> BUT!
12:31 < jardineworks:#liferay> lets say now I have a form. my action="<portlet:renderURL var="applyFilters" />
12:31 < jardineworks:#liferay> I enter John and Doe in the form and submit.
12:32 < jardineworks:#liferay> what I get back is /-/friendlyurl/view?first=john&last=doe
12:32 < topolik:#liferay> yes, this is how HTML forms work
12:33 < jardineworks:#liferay> ok so on the way in I can see why it can't map it because it depends what the user chooses
12:33 < topolik:#liferay> yes, you need to construct the URL manually
12:34 < jardineworks:#liferay> BUT
12:34 < jardineworks:#liferay> on the way back, why can't the resulting url be /-/friendlyurl/view/name/john/doe?
12:34 < jardineworks:#liferay> the parameters are there now right?
12:34 < topolik:#liferay> what do you mean by the resulting URL?
12:35 < topolik:#liferay> there is a redirect on the server side
12:35 < topolik:#liferay> which sends browser to another address
12:35 < topolik:#liferay> ?
12:35 < jardineworks:#liferay> maybe (probably) I am not understanding how this works. The map goes two ways right?
12:36 < jardineworks:#liferay> url -> parameters... and then parameter -> url
12:36 < jardineworks:#liferay> I assumed that the latter happens as part of the response process, but maybe I am wrong
12:36 < topolik:#liferay> depends
12:36 < topolik:#liferay> the URL -> parameters is automatic
12:37 < jardineworks:#liferay> so basically, there is no way to have form submitted values place into the url without using url rewritting?
12:37 < topolik:#liferay> ... but the parameters -> URL is on demand
12:37 < topolik:#liferay> there is a way
12:38 < topolik:#liferay> first - when you submit the browser to such ?first=joe&last=doe URL, it is submitted to this URL
12:38 < topolik:#liferay> if it's a render URL, portal renders page
12:38 < topolik:#liferay> and the URL is still the same
12:38 < topolik:#liferay> ?first=joe&last=doe
12:39 < jardineworks:#liferay> use an action url right?
12:39 < jardineworks:#liferay> :)
12:39 < topolik:#liferay> yes, this should work
12:39 < topolik:#liferay> there you can send redirect
12:39 < jardineworks:#liferay> so action url, create a reder url and redirect
12:39 < topolik:#liferay> and specify the URL
12:39 < topolik:#liferay> right
12:39 < topolik:#liferay> and I guess the render URL will be the one you need
12:39 < jardineworks:#liferay> yeah
12:40 < jardineworks:#liferay> bugger it... now I have to refactor some (one elses) code... was trying to avoid that. shit.
12:40 < topolik:#liferay> or you need to manually construct the URL before submitting the form
12:40 < topolik:#liferay> and change that URL so that it can be matched
12:41 < topolik:#liferay> JavaScript is your friend ;)
12:41 < jardineworks:#liferay> you mean action the button using JS and use the Lfieray.PortletURL
12:41 < topolik:#liferay> you don't need Liferay.PortletURL
12:41 < topolik:#liferay> you are building a specific solution
12:42 < topolik:#liferay> you have the comfort to make it simple
12:43 < jardineworks:#liferay> alright... I think I need to use the action anyway so I can generate the filters. Remember the other day I showed you the url it had the same var in it twice but with different values.
12:43 < topolik:#liferay> yeah
12:44 < topolik:#liferay> this can be also solved using JS
12:44 -!- mode/#liferay [+o rotty3000] by ChanServ
12:45 < topolik:#liferay> for example /-/friendlyurl/blablabla/value1-value2-value3-value4
12:45 < jardineworks:#liferay> right
12:45 < jardineworks:#liferay> ok
12:45 < jardineworks:#liferay> on to refactoring
13:19 < dawn:#liferay> hi topolik, I have a question regarding scopeIds. I created a LAR file and one of the portlet has scopeIds as "ALL" under preferences which is not available in receiving LR instance. any ideas are appreicated?
13:26 <@jhf:#liferay> quick poll: of all the Liferay Java APIs, which one would you want to be javadoc'd that isn't already?
13:51 < jardineworks:#liferay> jhf, I can only speak for myself, but I abandoned the javadocs long ago :). I usually cruise the soruce when I am trying to understand what I need to do.
13:53 < dawn:#liferay> jhf, same here
13:55 < dawn:#liferay> providing API changelog during new release might help sometimes.
13:57 < dawn:#liferay> jhf, I have a question regarding scopeIds. I created a LAR file and one of the portlet has scopeIds as "ALL" under preferences which is not available in receiving LR instance. any ideas are appreicated?
14:06 <@jhf:#liferay> if you change it to not be ALL, does it work?
14:06 < dawn:#liferay> change to some random value?
14:07 <@jhf:#liferay> hmmm.. I doubt a random value would work, I guess I"m asking how do you know that the ALL is causing the problem?
14:09 < dawn:#liferay> while importing it to different LR instance, I get this exception
14:09 < dawn:#liferay> 16:45:32,473 ERROR [liferay/background_task-1][BackgroundTaskMessageListener:133] Unable to execute background task
14:09 < dawn:#liferay> com.liferay.portal.kernel.lar.PortletDataException: java.lang.IllegalArgumentException: Invalid scope ID ALL
14:09 < dawn:#liferay> 	at com.liferay.portal.kernel.lar.BasePortletDataHandler.processImportPortletPreferences(BasePortletDataHandler.java:542)
14:09 < dawn:#liferay> 	at com.liferay.portal.lar.PortletImporter.importPortletPreferences(PortletImporter.java:1159)
14:09 < dawn:#liferay> 	at com.liferay.portal.lar.LayoutImporter.doImportLayouts(LayoutImporter.java:599)
14:09 < dawn:#liferay> 	at com.liferay.portal.lar.LayoutImporter.importLayouts(LayoutImporter.java:118)
14:09 < dawn:#liferay> 	at com.liferay.portal.service.impl.LayoutLocalServiceImpl.importLayouts(LayoutLocalServiceImpl.java:1756)
14:09 < dawn:#liferay> 	at com.liferay.portal.service.impl.LayoutLocalServiceImpl.importLayouts(LayoutLocalServiceImpl.java:1805)
14:09 < dawn:#liferay> 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
14:09 < dawn:#liferay> 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
14:09 < dawn:#liferay> 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
14:09 < dawn:#liferay> 	at java.lang.reflect.Method.invoke(Method.java:597)
14:09 < dawn:#liferay> 	at com.liferay.portal.spring.aop.ServiceBeanMethodInvocation.proceed(ServiceBeanMethodInvocation.java:115)
14:09 < dawn:#liferay> 	at com.liferay.portal.service.impl.LayoutLocalServiceVirtualLayoutsAdvice.invoke(LayoutLocalServiceVirtualLayoutsAdvice.java:179)
14:09 < dawn:#liferay> 	at com.liferay.portal.spring.aop.ServiceBeanMethodInvocation.proceed(ServiceBeanMethodInvocation.java:111)
14:09 < dawn:#liferay> 	at com.liferay.portal.service.impl.LayoutLocalServiceStagingAdvice.invoke(LayoutLocalServiceStagingAdvice.java:141)
14:09 < dawn:#liferay> 	at com.liferay.portal.spring.aop.ServiceBeanMethodInvocation.proceed(ServiceBeanMethodInvocation.java:111)
14:10 < dawn:#liferay> 	at com.liferay.portal.spring.transaction.DefaultTransactionExecutor.execute(DefaultTransactionExecutor.java:62)
14:10 < dawn:#liferay> 	at com.liferay.portal.spring.transaction.TransactionInterceptor.invoke(TransactionInterceptor.java:51)
14:10 < dawn:#liferay> 	at com.liferay.portal.spring.aop.ServiceBeanMethodInvocation.proceed(ServiceBeanMethodInvocation.java:111)
14:10 < dawn:#liferay> 	at com.liferay.portal.spring.aop.ServiceBeanAopProxy.invoke(ServiceBeanAopProxy.java:175)
14:10 < dawn:#liferay> 	at com.sun.proxy.$Proxy31.importLayouts(Unknown Source)
14:10 < dawn:#liferay> 	at com.liferay.portal.service.LayoutLocalServiceUtil.importLayouts(LayoutLocalServiceUtil.java:1308)
14:10 < dawn:#liferay> 	at com.liferay.portal.lar.backgroundtask.LayoutImportBackgroundTaskExecutor.execute(LayoutImportBackgroundTaskExecutor.java:61)
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.backgroundtask.SerialBackgroundTaskExecutor.execute(SerialBackgroundTaskExecutor.java:56)
14:10 < dawn:#liferay> 	at com.liferay.portal.backgroundtask.messaging.BackgroundTaskMessageListener.doReceive(BackgroundTaskMessageListener.java:108)
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.messaging.BaseMessageListener.receive(BaseMessageListener.java:26)
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.messaging.InvokerMessageListener.receive(InvokerMessageListener.java:72)
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.messaging.ParallelDestination$1.run(ParallelDestination.java:69)
14:10 <@jhf:#liferay> noooooooooooooooo
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.concurrent.ThreadPoolExecutor$WorkerTask._runTask(ThreadPoolExecutor.java:682)
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.concurrent.ThreadPoolExecutor$WorkerTask.run(ThreadPoolExecutor.java:593)
14:10 < dawn:#liferay> 	at java.lang.Thread.run(Thread.java:695)
14:10 < dawn:#liferay> Caused by: java.lang.IllegalArgumentException: Invalid scope ID ALL
14:10 < dawn:#liferay> 	at com.liferay.portlet.assetpublisher.util.AssetPublisherImpl.getGroupIdFromScopeId(AssetPublisherImpl.java:908)
14:10 < dawn:#liferay> 	at com.liferay.portlet.assetpublisher.util.AssetPublisherImpl.isScopeIdSelectable(AssetPublisherImpl.java:993)
14:10 < dawn:#liferay> 	at com.liferay.portlet.assetpublisher.util.AssetPublisherUtil.isScopeIdSelectable(AssetPublisherUtil.java:240)
14:10 < dawn:#liferay> 	at com.liferay.portlet.assetpublisher.lar.AssetPublisherPortletDataHandler.updateImportScopeIds(AssetPublisherPortletDataHandler.java:394)
14:10 < dawn:#liferay> 	at com.liferay.portlet.assetpublisher.lar.AssetPublisherPortletDataHandler.updateImportPortletPreferences(AssetPublisherPortletDataHandler.java:362)
14:10 <@jhf:#liferay> I can't believe free node hasn't kicked you out yet for flooding :)
14:10 < dawn:#liferay> 	at com.liferay.portlet.assetpublisher.lar.AssetPublisherPortletDataHandler.doProcessImportPortletPreferences(AssetPublisherPortletDataHandler.java:79)
14:10 < dawn:#liferay> 	at com.liferay.portal.kernel.lar.BasePortletDataHandler.processImportPortletPreferences(BasePortletDataHandler.java:535)
14:10 < dawn:#liferay> 	... 29 more
14:11 < dawn:#liferay> :(
14:13 <@jhf:#liferay> also dawn what version of Liferay are you using?
14:13 < dawn:#liferay> 6.2 GA1 EE
14:15 < topolik:#liferay> dawn: dpm
14:15 < topolik:#liferay> dawn: I don't have much time, but try "Group_default"
14:16 < dawn:#liferay> topolik,Yes, I am trying that
14:17 <@jhf:#liferay> yeah topolik !
14:18 <@jhf:#liferay> if that works we need to find where the ALL was inserted
14:18 <@jhf:#liferay> I assume you created the LAR file from the identical Liferay version?
14:18 < dawn:#liferay> jhf and topolik, That works!! Yes I am using same versions
14:19 <@jhf:#liferay> cool. I'll go see where that ALL was inserted.
14:19 < dawn:#liferay> I found some discrepancy with asset publisher categories selection thought. Not sure if that is related. The category selections are not carried over.
14:21 < dawn:#liferay> how can I ensure the asset publisher configuration to be exported and imported?
14:26 <@jhf:#liferay> I created a LAR with 6.2 and picked the global scope as one of the filters, and this ended up in the LAR:                 <value>Group_default</value>
14:26 <@jhf:#liferay> sooooo...
14:32 < dawn:#liferay> jhf, any idea why I am losing asset publisher configuration?
14:34 <@jhf:#liferay> when you are exporting, are you selecting the "Configuration" checkbox ?
14:35 <@jhf:#liferay> also, is it possible to send me the resulting LAR (the one that was "broken") ?
14:37 < dawn:#liferay> jhf, I am selecting All Applications under App Conf tab which I believe should take care of it?
14:38 <@jhf:#liferay> are you exporting the entire site?
14:38 <@jhf:#liferay> or just the one portlet (asset publisher)?
14:38 < dawn:#liferay> I am exporting entire public pages
14:39 < dawn:#liferay> jhf,regarding LAR file I am not allowed to share, let me know if I can help you in any other way.
14:54 <@jhf:#liferay> dawn: was this liferay instance ever upgraded from a prior version of Liferay?
14:55 < dawn:#liferay> Yes,I upgraded from 6.1GA3 to 6.2GA1
15:16 <@jhf:#liferay> dawn I cannot find anywhere in asset publisher portlet where the scope name might end up as "ALL" in an exported .LAR file.
15:16 <@jhf:#liferay> have you created any site named ALL ?
15:16 <@jhf:#liferay> and if you change the preference on the affected asset publisher portlet to something else, does it work (and not fail the import)?
15:17 < dawn:#liferay> jhf No, I don't have a site with name ALL
15:20 < dawn:#liferay> also this particular site is Navigation site whose web pages are linked to another site pages. So the portlets are not directly added to Navigation site pages
15:24 <@jhf:#liferay> can you look inside the resulting .LAR file after export? It is a zip file you can unzip (you may need to rename it to have a .zip extension if you are on windows).  there will be many files. you are looking for files that store preferences for the AssetPublisher portlet, named under a directory with 101_INSTANCE ("101" is the "name" of the Asset Publisher portlet).
15:24 <@jhf:#liferay> for example I have a file called ./group/10184/portlet/101_INSTANCE_6bBV99rlByWR/preferences/layout/0/11650/portlet-preferences.xml
15:24 <@jhf:#liferay> it contains
15:24 <@jhf:#liferay>         <preference>
15:24 <@jhf:#liferay>                 <name>scopeIds</name>
15:24 <@jhf:#liferay>                 <value>[$COMPANY_GROUP_SCOPE_ID$]</value>
15:24 <@jhf:#liferay>         </preference>
15:24 <@jhf:#liferay> I want to know if yours actually says ALL for the <value></value>
15:25 < dawn:#liferay> Yes that is right.
15:25 <@jhf:#liferay> can you copy/paste the entire file name for the file in which you find ALL? I'm very curious.
