--- Log opened Thu Jan 09 00:00:29 2014
06:34 < rrapozo:#liferay> jhf: Are you there? :)
07:39 <@jhf:#liferay> hey rrapozo
07:39 < rrapozo:#liferay> me!!! :D
07:39 <@jhf:#liferay> yes I think so - I think there are a few different issues going on here
07:39 <@jhf:#liferay> first off, which browser are you using?
07:40 < rrapozo:#liferay> I tried with firefox and chromium
07:40 <@jhf:#liferay> hmm ok.. and on firefox, do you see the progress bar at all (even if it does not actually move with the progress)?
07:41 <@jhf:#liferay> what I found was that I could not see it on Chrome, but always saw it on FF. further, depending on the size of the file, it sometimes never updated because Tomcat caches the entire file first before handing it off to Liferay, so by the time Liferay code "sees" the upload, it's already 100% done.
07:42 <@jhf:#liferay> when I change the max upload size in Liferay to something huge (like 100GB) then upload, say, a 4GB file, it works for me,.
07:42 < rrapozo:#liferay> yes, it happens! The progress bar show but dont move
07:42 <@jhf:#liferay> ok. can you first try it agin, but with a file that is ~ 99MB (the default max upload size is 100MB I believe)
07:43 < rrapozo:#liferay> ok!
07:43 < rrapozo:#liferay> can you send the code java em html please?
07:44 < rrapozo:#liferay> because I want have the same environment
07:44 < rrapozo:#liferay> And I'm creating one file with 99MB
07:46 <@jhf:#liferay> ok.. are you on unix? because I have hard-coded the directory to "/tmp" (where the file is saved after uploading)
07:46 < rrapozo:#liferay> yes, ubuntu 13.10
07:46 < rrapozo:#liferay> :)
07:46 < rrapozo:#liferay> perfect!
07:47 <@jhf:#liferay> java code: https://gist.github.com/anonymous/8333579
07:47 <@jhf:#liferay> my JSP: https://gist.github.com/anonymous/8333586
07:48 <@jhf:#liferay> I was playing with setting the progress attribute directly (via getPortletSession().setAttribute()) but I don't actually think this is needed.
07:49 <@jhf:#liferay> rrapozo:
07:49 <@jhf:#liferay> java code: https://gist.github.com/anonymous/8333579
07:49 <@jhf:#liferay> [7:45am] <jhf>
07:49 <@jhf:#liferay> my JSP: https://gist.github.com/anonymous/8333586
07:49 <@jhf:#liferay> [7:46am] <jhf>
07:49 <@jhf:#liferay> I was playing with setting the progress attribute directly (via getPortletSession().setAttribute()) but I don't actually think this is needed.
07:49 <@jhf:#liferay> if it doesn't work with 99MB we'll try something larger
07:49 < rrapozo:#liferay> ok
07:50 <@jhf:#liferay> but you'll need to set the maximum size limit higher (via Control Panel).
07:50 <@jhf:#liferay> also, are you operating entirely on localhost? e.g. there's no "real" networking between your browser and server?
07:51 < rrapozo:#liferay> yes, I can try in a network
07:59 <@jhf:#liferay> I believe what's happening is that over the local network (localhost), when Tomcat attempts to parse the incoming HTTP POST (containing the binary payload), it is able to read the entire file before handing back to Liferay, so Liferay never sees "progress" until 100%. I think with a huge file, and/or using a "real" network link, Tomcat won't see all the bits so fast, and will hand control back to Liferay to process the stream and "see" progress.
08:00 <@jhf:#liferay> so, in other words, it "works" but progress isn't shown nicely.
08:01 < rrapozo:#liferay> ok, I will test now
08:01 <@jhf:#liferay> To increase the max allowed file size, go to Control Panel -> Server Administration (its near the bottom of Control Panel in 6.1).
08:01 <@jhf:#liferay> then click the "File Uploads" tab
08:01 <@jhf:#liferay> and change the first setting ("Overall Maximum File Size") to something huge.
08:02 <@jhf:#liferay> and click Save
08:02 <@jhf:#liferay> then try again with a larger file, say, 2GB or more
08:08 < rrapozo:#liferay> Nice!!! I will read slowly and understant everything but one think is that the progress worked with a file 98.9MB
08:27 < jhf3000:#liferay> <-- jhf but on mobile
09:32 -!- mode/#liferay [+o rotty3000] by ChanServ
09:35 < jardineworks:#liferay> topolik, are you there?
09:37 < bjornjohansson:#liferay> Is there a way to force liferay to try generate previews of files without file endings?
09:37 < bjornjohansson:#liferay> for example without .xls or .doc
09:38 < bjornjohansson:#liferay> (sometimes customers is a pain in the ass ;))
09:38 -!- mode/#liferay [+o rotty3000] by ChanServ
09:40 -!- mode/#liferay [+o rotty3000] by ChanServ
09:43 < jardineworks:#liferay> bjornjohansson, customers are always a pain in the ass
09:43 < bjornjohansson:#liferay> life would be so much easier without customers :)
09:44 < jardineworks:#liferay> working life... regular paying for things life might be harder :)
09:45 < bjornjohansson:#liferay> hehe :)
09:47 < bjornjohansson:#liferay> Yeah, life without being able to buy my cigars would be aweful ;)
10:29 < rrapozo:#liferay> jhf: I don't understand! Just worked 1 time!
10:33 < rrapozo:#liferay> And I tried with large files in a network
10:33 < rrapozo:#liferay> :(
10:34 <@jhf:#liferay> hey rrapozo there's one thing you can try, that I suspect may also be an issue with the browser
10:34 <@jhf:#liferay> locate the file tomcat-7.0.40/webapps/ROOT/html/portal/upload_progress_poller.jsp
10:35 <@jhf:#liferay> there is a line near the end that reads "setTimeout(window.location.reload, 1000);
10:35 <@jhf:#liferay> change it to
10:35 <@jhf:#liferay> setTimeout(function() {window.location.reload(true);}, 1000);
10:35 < rrapozo:#liferay> ok
10:35 <@jhf:#liferay> this is the function that causes the progress bar to update itself once a second. I found that in some cases it didn't actually trigger a call back to the server because browsers cache pages
10:35 <@jhf:#liferay> but the (true) forces it to always go back to the server.
10:36 <@jhf:#liferay> btw, this is completely redesigned (in a better way) in Liferay 6.2 :)
10:36 <@jhf:#liferay> bbi10
10:50 < rrapozo:#liferay> One question James. Do you know have the liferay IDE for the 6.2 version?
11:03 < dawn:#liferay> A quick question, I am not able to import a LAR that was exported from LR 6.2 GA1 of different instance. The error says missing Document that was refered in Asset publisher. The manifest file in lAR has some missing references. Now how do I trace those to a particular asset publisher on a web page, Any help is appreciated.
11:05 < dawn:#liferay> here is how a sample entry looks like
11:05 < dawn:#liferay> 		<missing-reference class-name="com.liferay.portlet.documentlibrary.model.DLFileEntryType" class-pk="10710" display-name="ba453c62-80b2-4166-b197-654061d600b7" group-id="10682" type="dependency" referrer-class-name="com.liferay.portal.model.Portlet" referrer-display-name="101" uuid="ba453c62-80b2-4166-b197-654061d600b7" company-id="10154" preloaded="false" file-entry-type-key="SALES PRESENTATION"/>
11:16 < jardineworks:#liferay> jhf, I think I figured out this friendly url crap
11:17 <@jhf:#liferay> yay!!
11:17 <@jhf:#liferay> what was the cognitive leap you made to this nirvana ?
11:17 < jardineworks:#liferay> well... still stepping through to be sure :)
11:18 < jardineworks:#liferay> but the DefaultFriendlyURLMapper doesn't appear to add submitted form parameters to the route parameters before it tries to match the friendly url.
11:18 < jardineworks:#liferay> I'm still on the way in, so maybe this makes sense...
11:18 < jardineworks:#liferay> we'll see
11:18 <@jhf:#liferay> ok. i'm heading to lunch with some visiting brazillians, so will be back in about.. oh.. 4 or 5 hours :)
11:18 < jardineworks:#liferay> lol
12:20 < jardineworks:#liferay> topolik, still fighting with the friendly url stuff. I think I know the issue but not sure how to solve it. The issue for me is that the form fields are not added to the route parameters before the route selection in made. I tried to override by creating a custom mapper (extending the default one) but the problem is that the form parameters are in the PARENT parameter map, which is private so I can't get to it.
12:20 < jardineworks:#liferay> topolik, do you have any ideas? ... I'm nearing pure desperation here.
12:23 < topolik:#liferay> jardineworks: Hi
12:24 < topolik:#liferay> I thought the route is chosen based on the URL, isn't it? Regardless of provided parameters
12:26 < jardineworks:#liferay> topolik, it is.. but the url is assembled from parameters before the match is made.
12:26 < jardineworks:#liferay> so I am getting back /test/view?first=jonh&last=doe ...
12:26 < jardineworks:#liferay> but I want to get back /test/view/john/doe
12:27 < jardineworks:#liferay> the route parameters are built based only on url params, not on the entire parameter map.
12:27 < jardineworks:#liferay> at least, that is my understanding.
12:27 < topolik:#liferay> hehe, I'm lost :D
12:28 < topolik:#liferay> so
12:28 < jardineworks:#liferay> ok - I have a form with two fields. First and Last name.
12:28 < topolik:#liferay> ok
12:28 < jardineworks:#liferay> I have a route with a pattern /view/name/{first}/{last}
12:29 < topolik:#liferay> ok
12:29 < jardineworks:#liferay> if I create a <portlet:renderURL><portlet:param name="fitrst"... etc... then that route is found and matched
12:29 < jardineworks:#liferay> makes sense, those params are part of the url
12:29 < jardineworks:#liferay> now
12:30 < topolik:#liferay> wait pls
12:30 < jardineworks:#liferay> sure
12:30 < topolik:#liferay> so when you create the portlet  render url it is /-/portlet_name/view/name/first/last, right?
12:30 < jardineworks:#liferay> right
12:30 < jardineworks:#liferay> in my case, /-/friendlyurl.view/name/john/doe
12:30 < topolik:#liferay> and when you click on the URL it is matched and translated back, right?
12:30 < jardineworks:#liferay> yes
12:31 < topolik:#liferay> ok
12:31 < jardineworks:#liferay> and that part is awesome...
12:31 < jardineworks:#liferay> BUT!
12:31 < jardineworks:#liferay> lets say now I have a form. my action="<portlet:renderURL var="applyFilters" />
12:31 < jardineworks:#liferay> I enter John and Doe in the form and submit.
