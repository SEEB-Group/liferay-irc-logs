--- Log opened Thu Dec 05 00:00:40 2013
04:23 < hufg:#liferay> are you aware how great glassfish command line tooling is?!
04:23 < hufg:#liferay> it's fucking awesome
09:22 < hufg:#liferay> topolik:
09:23 < hufg:#liferay> how come multiple publishings does not apparently decrease the disk writes from dl?
09:35 < hufg:#liferay> there is a huge write of small files to tmp either way
09:36 < hufg:#liferay> i think some 800mb with our dl
09:36 < hufg:#liferay> not sure
09:42 < hufg:#liferay> so yeah basically the publish range does not work at all for dl maybe it works at later staging but the same writes happen
10:18 < Tar-Minyatur:#liferay> I can't believe that there is no proper documentation on how to setup a Liferay cluster on Amazon EC2.
10:18 < Tar-Minyatur:#liferay> We can't be the only ones who want to do this. Oo
10:19 < hufg:#liferay> :D
10:19 < hufg:#liferay> better believe it
10:20 < hufg:#liferay> isn't jgroups unicast the only way?
10:20 < hufg:#liferay> if multicast is not supported
10:20 < Tar-Minyatur:#liferay> I honestly don't know the details of how EHCache works.
10:21 < Tar-Minyatur:#liferay> There is stuff like JDBC_PING and S3_PING for node-detection.
10:21 < Tar-Minyatur:#liferay> But I have no clue if that would be sufficient.
10:21 < hufg:#liferay> or  some crazy stuff on ehcache+san drives for lucene and dl
10:22 < hufg:#liferay> without knowing anything i'd go for jgroups unicast
10:23 < hufg:#liferay> :)
10:25 < hufg:#liferay> just disable caching hehe
11:16 < Tar-Minyatur:#liferay> Wow.
11:16 < Tar-Minyatur:#liferay> For some reason or new test system is incredibly slow.
12:18 < aj_:#liferay> topolik! \o/
12:18 < topolik:#liferay> aj_: !
12:18 < aj_:#liferay> I know this is your limited availability time -- but I just wanted to run an issue I am having past you
12:18 < aj_:#liferay> when yo uhave time...
12:18 < aj_:#liferay> here it is
12:18 < topolik:#liferay> sorry I didn't respond yesterday or when it was
12:19 < topolik:#liferay> when I got back to laptop you were already off
12:20 < aj_:#liferay> topolik, I have a parent navigation item -- Recipes. Underneath this parent I have several children. Each child represents a -- shocking I know -- type of recipe. Wehn the user click the Recipe "parent" they go to a portlet page. Done. When the user clicks one of the children they go to the recipe page as well, with the child category applied. I have made the children "link to page" and picked recipes. Then under advanced, I addred a query strin
12:20 < aj_:#liferay> g in the text field category=[category]. But It doesn't seem to make it
12:21 < aj_:#liferay> I stepped through the portal impl last night and I can see the query string being added in one case (there are a few portlets on that page)... but no mater which portlet I dig into it is never there.
12:22 < aj_:#liferay> I am using String category = PortalUtil.getOriginalServletRequest(PortalUtil.getHttpServletRequest(renderRequest)).getParameter("category");
12:22 < aj_:#liferay> I inspected the request as well and the query string only ever seems to contain the layout id and the virtual layout id
12:23 < topolik:#liferay> aj_: that's because there is an internal redirect from friendly urls into /c/portal/layout?p_l_id=...
12:23 < aj_:#liferay> right -- and that is where I saw it append the query string
12:23 < aj_:#liferay> I mean that value certainly looks familiar
12:24 < aj_:#liferay> so how am I supposed to get it?
12:26 < topolik:#liferay> well, I don't know, I didn't use it yet :)
12:26 < topolik:#liferay> but I look at it and tell you :D
12:26 < topolik:#liferay> how does your query string look like?
12:29 < aj_:#liferay> just catergory=[name] ... so category=main-dish or category=appetizer
12:33 < topolik:#liferay> ok
12:38 < topolik:#liferay> PortalUtil.getOriginalServletRequest(PortalUtil.getHttpServletRequest(renderRequest)).getParameter("category")
12:38 < topolik:#liferay> or PortalUtil.getOriginalServletRequest(request).getParameter("category")
12:39 < aj_:#liferay> the first
12:39 < topolik:#liferay> just make sure you specify category=... in the query string field, not cateRgory=[name]
12:39 < aj_:#liferay> but I do the inner call to first get the HTTP Servlet Request from the portlet request
12:42 < aj_:#liferay> topolik, it worked for you?
12:42 < topolik:#liferay> yes, but I test it on 6.2
12:42 < topolik:#liferay> I can try on 6.1.2
12:42 < aj_:#liferay> ah man... please :)
12:42 < aj_:#liferay> lol
12:42 < aj_:#liferay> I am on 6.1.2 GA3
12:44 < topolik:#liferay> I know, 6 1 2 3, could be a song or a math question ;)
12:44 < aj_:#liferay> feels like a sesame street song
12:45 < aj_:#liferay> do they have sesame street in CZ?
12:47 -!- mode/#liferay [+o jhf] by ChanServ
12:52 < aj_:#liferay> jhf! the other man I was looking for
12:52 < aj_:#liferay> :)
12:52 < aj_:#liferay> assume that you are the guy I need to talk to if I have a question about content management
12:52 <@jhf:#liferay> heya :)
12:52 <@jhf:#liferay> .... "it depends" :)
12:52 < aj_:#liferay> good cover
12:53 < aj_:#liferay> I think there are a pile of options for us -- but I want to use the one that is most inline with the portal to make upgrade somewhat easier.
12:53 < aj_:#liferay> Basically the client has "Aticles" .. and we have several article templates.
12:54 < aj_:#liferay> Right now for the one off placements, we have been using the web content display -- but ths issue is that when you click them they should take you to the full view.
12:54 < aj_:#liferay> That feels like a job that is best served for the asset publisher no?
12:54 <@jhf:#liferay> yep, definitely
12:56 < aj_:#liferay> ok -- so this is where it gets harder for me because to date I have only been a cheater and have never used the asset publisher. I did spend a couple of hours the other night poking around with it though and I managed to get it to register different templates for the user. \o/ ... question is, how do I get my fields from my journal article to populte the template? or is that where the asset renderer comes in?
13:00 <@jhf:#liferay> not quite sure what you mean when you say you got the AP to "register different templates for the user"
13:01 <@jhf:#liferay> AP is just a "display" tool, it doesn't do any registration that I know of
13:01 < aj_:#liferay> jhf, I'm using the wrong terms. I think what I meant was adding more template options. So I have in my list, table, abstract, ... the liferay ones, but then I also have the ones for our project (featured article, badge, etc)
13:01 < topolik:#liferay> aj_: works on 6.1.2 - https://gist.github.com/topolik/7810203
13:02 < scribe:#liferay> Hey guys, anyone know how to retrieve the user's current Liferay locale from javascript?
13:03 < scribe:#liferay> I see Liferay.Language.get, which will return to me a localized string.
13:03 < scribe:#liferay> But I want the name of the localization.
13:03 < aj_:#liferay> topolik, the only difference I can see here is that you are doing it in th eJSP... I was trying to do it on the server. Can you not do it on the server?
13:04 < topolik:#liferay> server?
13:04 < aj_:#liferay> topolik, my portlet class
13:04 < aj_:#liferay> in the render method
13:04 < topolik:#liferay> ah, ok, I try
13:06 < aj_:#liferay> jhf, can you create your own custom asset renderers?
13:07 <@jhf:#liferay> aj_: in 6.2 yes :)
13:07 <@jhf:#liferay> for example, for rending a blog post differently than the "default"
13:07 < aj_:#liferay> but I can't do that in 6.1.2?
13:07 <@jhf:#liferay> but in 6.1 the only thing you can custom-render are web content articles via a template
13:07 < aj_:#liferay> hmm
13:07 <@jhf:#liferay> well.. you could override the blog renderer JSP
13:08 < topolik:#liferay> aj_: works - https://gist.github.com/topolik/7810283
13:08 < aj_:#liferay> jhf, I am trying to do this for custom web content though
13:08 <@jhf:#liferay> but in 6.2 we moved that into the UI, via "Asset Display Templates"
13:08 < scribe:#liferay> got it: Liferay.ThemeDisplay.getLanguageId()
13:08 <@jhf:#liferay> but when you use asset publisher to render web content articles, it will use your template for the "full" view
13:09 <@jhf:#liferay> but when asset publisher is used to publish a blog post, it will use the default renderer
13:09 <@jhf:#liferay> so if you use asset publisher to render multiple types of assets (e.g. blog posts AND web content) you'll get the same thing as if you'd used a blog portlet on top of a web content display portlet.
13:10 < aj_:#liferay> topolik, ?!@@! that is what I am doing. Except my portlet is extending the MVC portlet
13:10 < aj_:#liferay> but that shouldn't matter right?
13:10 <@jhf:#liferay> ok bbl
13:10 <@jhf:#liferay> meetin' time
13:17 < aj_:#liferay> topolik,  so you created a portlet page. Then yo ucreate a child under it with type Link To Page and under advanced you set the query string to category=topolik ... then on the parent (portlet) page you dropped a portlet and in it you add that code in the render method and it worked.
13:17 < aj_:#liferay> wtf
13:17 < aj_:#liferay> lol
13:20 < olafk:#liferay> jhf: don't steal my lines :)
13:27 < aj_:#liferay> topolik, 8:25:55,825 INFO  [http-bio-8080-exec-26][RecipePortlet:70] ****Category: null
13:27 < aj_:#liferay> :(
13:27 < aj_:#liferay> could it be because I am using the MVC portlet?
13:30 < topolik:#liferay> aj_: I try it, but I doubt
13:31 < topolik:#liferay> nope, it works, I'm sorry aj_ :/
13:32 < aj_:#liferay> what the hell?! LOL
13:37 < topolik:#liferay> aj_: http://oi42.tinypic.com/261kcc8.jpg
13:38 < aj_:#liferay> :(
13:39 < aj_:#liferay> topolik, -- do you still have mikogo installed? :)
13:40 < topolik:#liferay> uhm, yes :)
13:40 < aj_:#liferay> haha
13:40 < topolik:#liferay> not installed but downloaded :)
13:40 < aj_:#liferay> soooo... you're just one click away ;)
13:40 < topolik:#liferay> hehe :)
13:40 < aj_:#liferay> it sounds like we're doing the same thing
