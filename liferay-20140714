--- Log opened Mon Jul 14 00:00:18 2014
01:06 < jrmiah:#liferay> has anyone any guides on how to build liferay from github? Just need to build and produce a WAR and any configuration for tomcat if required - thanks
03:27 < rocknroll_:#liferay> hey all, when commenting on a calendar event, there is an email notification sent. where is this notification and it's content defiend? iot is not localized
09:21 < jardineworks:#liferay> jrmiah, keep an eye out for jhf ... he has a recipe for how to build from github. He gave it to me once, lemme see if I can find it for now.
09:25 -!- mode/#liferay [+o jhf] by ChanServ
09:26 < goku_:#liferay> hi ,how to create a RestrictionFactoryUtil to check between two date ?
09:26 < jardineworks:#liferay> jrmiah, sorry -- can't find it -- which makes me sad because I had plans to use it as well.
09:39 -!- mode/#liferay [+o jhf] by ChanServ
09:46 < jardineworks:#liferay> jhf, ! \o/
09:47 < jardineworks:#liferay> jhf, remember when you shared with me a recipe for how to build the portal from github?
09:47 <@jhf:#liferay> yah...
09:47 < jardineworks:#liferay> i lost it :(
09:47 < jardineworks:#liferay> can you share again? jrmiah was asking about it and when I went to look for it, could not be found
09:48 <@jhf:#liferay> you mean the “build portal and plugins manually” here: https://www.liferay.com/community/wiki/-/wiki/Main/BugSquad+-+Liferay+Portal+6.2+CE+Milestone+6+Testing#section-BugSquad+-+Liferay+Portal+6.2+CE+Milestone+6+Testing-Building+Portal+and+Plugins+Manually
09:50 < jardineworks:#liferay> jhf, that will probably do --- but I think you gave me some kinda personal version. Though maybe you were just copying from this :)
09:50 <@jhf:#liferay> hah probably :) you’ll need to replace the names of the directories and such..
09:51 < jardineworks:#liferay> and you had something about ant... you had to pass a jvm arg for more mem or soemthing.
10:51 < jardineworks:#liferay> bijoo_, do you use ANT of Maven for your plugins?
10:58 -!- mode/#liferay [+o lundgren] by ChanServ
11:00 < jardineworks:#liferay> maven is stupid.
11:01 -!- mode/#liferay [+o jhf] by ChanServ
11:07 < jardineworks:#liferay> jhf, do you ever do anything with Maven and LR?
11:08 < jardineworks:#liferay> Maven makes me want to put gun in my mouth.
11:08 <@jhf:#liferay> hah.. well, the best thing (IMO) about Maven+Liferay is that you no longer need to use the Plugins SDK :)
11:08 <@jhf:#liferay> but yeah I’ve recently begun using it in my projects
11:10 < jardineworks:#liferay> jhf, I am trying to get an external database service builder project to work with Maven and I can't It's refusing to deploy the portlet because the 1.0.0 SNAPSHOT is older than the 6.2.10 version ... which of course I only discovered by upping the output on the Deployment classes. Do you know how to get around this?
11:11 < jardineworks:#liferay> shouldn't it be referencing the service.properties file?
11:14 <@jhf:#liferay> you can try to un-deploy the 6.2.10 version (i.e. rm -rf tomcat-xx.xx.xx/webapps/my-sb-portlet)
11:14 <@jhf:#liferay> and then deploy the 1.0.0-SNAPSHOT
11:17 < jardineworks:#liferay> jhf, I'll try again but I did that ... I still see this
11:17 < jardineworks:#liferay> 15:14:28,570 INFO  [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][BaseDeployer:962] Updating sample-sb-external-db from version 6.2.10 to version 1.0.0-SNAPSHOT
11:17 < jardineworks:#liferay> 15:14:28,570 INFO  [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][BaseDeployer:971] Not updating sample-sb-external-db because version 6.2.10 is newer than version 1.0.0-SNAPSHOT
11:20 <@jhf:#liferay> are you sure you’re deleting all of the deployed webapps? do you by chance have 2 deployments (from the perspective of tomcat)? i.e. something like webapps/sample-sb-external-db and webapps/<something else> ?
11:22 < jardineworks:#liferay> jhf, don't think so... looks like just the one sample-external... directory. I get this other weird message too after the initial deploymnet --
11:22 < jardineworks:#liferay> 15:18:43,269 ERROR [com.liferay.portal.kernel.deploy.auto.AutoDeployScanner][AutoDeployDir:220] com.liferay.portal.kernel.deploy.auto.AutoDeployException: The auto deploy listeners com.liferay.portal.deploy.auto.ExtAutoDeployListener, com.liferay.portal.deploy.auto.PortletAutoDeployListener all deployed /home/aj/projects/ypg/liferay/liferay-portal-6.2.10.1-ee-ga1/deploy/sample-sb-external-db-portlet-1.0.0-SNAPSHOT.war, but onl
11:22 < jardineworks:#liferay> y one should have.
11:22 < jardineworks:#liferay> com.liferay.portal.kernel.deploy.auto.AutoDeployException: The auto deploy listeners com.liferay.portal.deploy.auto.ExtAutoDeployListener, com.liferay.portal.deploy.auto.PortletAutoDeployListener all deployed /home/aj/projects/ypg/liferay/liferay-portal-6.2.10.1-ee-ga1/deploy/sample-sb-external-db-portlet-1.0.0-SNAPSHOT.war, but only one should have.
11:22 < jardineworks:#liferay> 	at com.liferay.portal.kernel.deploy.auto.AutoDeployDir.deploy(AutoDeployDir.java:72)
11:22 < jardineworks:#liferay> 	at com.liferay.portal.kernel.deploy.auto.AutoDeployDir.processFile(AutoDeployDir.java:211)
11:22 < jardineworks:#liferay> 	at com.liferay.portal.kernel.deploy.auto.AutoDeployDir.scanDirectory(AutoDeployDir.java:275)
11:22 < jardineworks:#liferay> 	at com.liferay.portal.kernel.deploy.auto.AutoDeployScanner.run(AutoDeployScanner.java:58)
11:22 <@jhf:#liferay> hmmmm
11:23 <@jhf:#liferay> I think you might have a bad filename - it has ‘-ext’ in it and I bet the EXT listener is picking it up
11:23 < jardineworks:#liferay> is there a way to disable the blcaklist?
11:23 < jardineworks:#liferay> omg
11:24 < jardineworks:#liferay> I had that issue once with a plugin called web-theme...
11:24 < jardineworks:#liferay> kill me
11:24 <@jhf:#liferay> I would nuke all of your custom webapps from webapps/ and then restart server
11:24 < jardineworks:#liferay> but it doesn't have ext... it has the word external.
11:24 <@jhf:#liferay> and rename project to not have -ext
11:24 <@jhf:#liferay> yeah but it has -ext
11:24 <@jhf:#liferay> I think the hot deployer is dumb like that
11:24 < jardineworks:#liferay> :|
11:25 < jardineworks:#liferay> so external is ok... as long as it is the FIRST word?!
11:25 < jardineworks:#liferay> :|
11:54 -!- mode/#liferay [+o jhf] by ChanServ
11:57 < jardineworks:#liferay> jhf, when you configure a service builder project with an external database, does it not still generate the SQL scripts?
12:01 <@jhf:#liferay> It should generate it, but it won’t run it when you deploy - that’s up to your DBA (you :) ) to create the schema
12:03 < jardineworks:#liferay> ACK!
12:03 < jardineworks:#liferay> 			if (!entity.isDefaultDataSource()) {
12:03 < jardineworks:#liferay> 				continue;
12:03 < jardineworks:#liferay> 			}
12:03 < jardineworks:#liferay> wtf?!
12:03 < jardineworks:#liferay> but then you loose 50 of the benefit
12:13 -!- mode/#liferay [+o jhf] by ChanServ
12:16 < jardineworks:#liferay> jhf, bah! personally I think that undersells it. I understand why it is done I suppose, though personally I think it would be better if there was a flag that indicated whether or not you wanted the same bevaiour just using an external database.
12:17 < jardineworks:#liferay> jhf, Part of the beauty (and usually how I sell people on SB) is not just the java code gen, it's the sql code gen and the automatic schema creation ... a couple of files and you can start writing the business logic.
12:18 <@jhf:#liferay> well.. I’m sure there are good reasons why it doesn’t make those DB calls when using an external DB - probably because most often it wouldn’t have permissions in a production env
12:18 <@jhf:#liferay> but I see your point
12:20 < jardineworks:#liferay> jhf, agreed,,, permissions was one that I was thinking. The other would be whether or not sharding was enabled. Going through the BasDB class -- I get it. Still a boo though. But all the plumbing being done to connect, read/write etc... still lotsa benefit in that.
13:05 -!- mode/#liferay [+o jhf] by ChanServ
13:44 -!- mode/#liferay [+o jhf] by ChanServ
14:01 -!- mode/#liferay [+o jhf] by ChanServ
14:18 -!- mode/#liferay [+o jhf] by ChanServ
16:59 < dvayanu:#liferay> hello... I have following question, I want to connect life ray to a wso2
17:00 < dvayanu:#liferay> sofar from what I searched and tried I understand that I have to 1) add wso2 filter, to redirect non authorize requests to sso endpoint, 2) add own authenticator, 3) add an own permission checker and 4) replace the UserServiceLocal to load users from remote location, is this correct?
17:01 < dvayanu:#liferay> or is there any easier ways to force liferay to work with another userstore?
17:01 < dvayanu:#liferay> liferay 6.1.2 GE, wso2is 4.6
17:02 < dvayanu:#liferay> Sofar the step 4 causes me some headache, especially since i don't see any ways to achieve it, except for patching the portal-impl
17:04 < jardineworks:#liferay> dvayanu, easiest way would be to use a wrapper. Follow this example: https://www.liferay.com/community/wiki/-/wiki/Main/Wrapper+Plugins
17:05 < jardineworks:#liferay> however, if you just want users to authenticate against a separate data store you might what to just write your own Login hook and then as part of its logic, if the external system returns true for the login creds, read the user out of the other system and create them in Liferay using the UserLocalServiceUtil.addUser(...)
17:05 < dvayanu:#liferay> jardineworks: this looks very promising , thank you. do i just put the jar into WEB-INF/lib then?
17:06 < jardineworks:#liferay> you just make a liferay hook plugin project
17:07 < jardineworks:#liferay> Liferay takes care of the rest when you deploy
17:11 < dvayanu:#liferay> you mean portal-compat-hook ?
17:11 < dvayanu:#liferay> or you mean some maven artifact?
17:13 < jardineworks:#liferay> dvayanu, you can make your own hooks.
17:13 < jardineworks:#liferay> since it seems you are using maven, then create a project using that archetype.
17:13 < jardineworks:#liferay> then follow the blog post.
17:14 < dvayanu:#liferay> I already had found the code and everything, now just had to found the artifact name, seems liferay-hook-archetype ;-)
17:14 < dvayanu:#liferay> thanks
17:25 -!- mode/#liferay [+o rotty3000] by ChanServ
17:28 < dvayanu:#liferay> jardineworks: so i package it and copy the war into tomcat/webapps i understand?
17:39 < dvayanu:#liferay> jardineworks: do i understand it correctly, that if i put it under deploys and renew it, it will be pocked up automatically?
