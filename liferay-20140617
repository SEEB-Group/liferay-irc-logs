--- Log opened Tue Jun 17 00:00:12 2014
04:21 -!- ServerMode/#liferay [+o rotty3000] by cameron.freenode.net
04:44 -!- ServerMode/#liferay [+o rotty3000] by cameron.freenode.net
08:14 -!- mode/#liferay [+o lundgren] by ChanServ
08:16 -!- mode/#liferay [+o lundgren] by ChanServ
08:26 -!- mode/#liferay [+o jhf] by ChanServ
09:08 -!- mode/#liferay [+o lundgren] by ChanServ
10:13 < jardineworks_:#liferay> I have a liferay design question for the experts -- jhf, rotty3000 topolik -- if you guys are around?
10:15 < jardineworks_:#liferay> I am assuming that there is a disadvantage to have too many plugins (individual deployments) other than clutter. If I have 5 portlets all deployed in the same package, will that consume fewer resources then 5 individual deployment packages?
10:21 < topolik:#liferay> jardineworks_: in general yes, each web application has separate "context" ... filters, servlets, sessions + probably the worst are own JAR files, which are isolated by own classloader and loaded into memory
10:23 < topolik:#liferay> the good thing about separate packages is versioning+deployment - you don't need to redeploy all portlets when fixing small bug in one of them
10:23 < jardineworks_:#liferay> topolik: so then as a rule of thumb, always try to group plugins of the same "group" together... and try to avoid making fine grained portlets right? For example, one of the things I am looking at is several portlets that make up essentially the sections of a form when really, I don't see why this couldn't be just one portlet.
10:24 < topolik:#liferay> I believe in most standard cases it's only common sense - group portlets by same functionality/application ... what makes sense
10:25 < jardineworks_:#liferay> topolik: common sense. sigh... I am starting to think that taking about  "common sense" is equivalent to a conversation about unicorns
