--- Log opened Tue Sep 30 00:00:30 2014
--- Log opened Tue Sep 30 03:21:31 2014
03:21 -!- Topic for #liferay: Liferay Community Discussion Channel! *THIS CHANNEL IS LOGGED* (Log: http://goo.gl/SMte1N) Plz be patient - timezones matter :)  Please vote Liferay! http://awards.cmscritic.com/vote Liferay 6.2 GA2 RELEASE http://goo.gl/uclhsq   Forum: http://forums.liferay.com Homepage: http://liferay.org User Groups http://goo.gl/WFVtPe Nightly build http://goo.gl/vQngHn
03:21 -!- Topic set by jhf [~cygnuseck@97.101.250.88] [Mon Sep 15 12:22:21 2014]
03:21 [Users #liferay]
03:21 [@ChanServ    ] [ Bryanstein   ] [ MagnoBooter] [ sm`pid    ] 
03:21 [ ArTeS       ] [ goku_        ] [ marcoceppi ] [ Tm_T      ] 
03:21 [ asaa        ] [ Gorith       ] [ Naenyn     ] [ tuxawy    ] 
03:21 [ avinashrbhat] [ jardineworks_] [ nicolas_FR ] [ vernaillen] 
03:21 [ bijoo       ] [ jbonjean     ] [ quercus_   ] 
03:21 -!- Irssi: #liferay: Total of 19 nicks [1 ops, 0 halfops, 0 voices, 18 normal]
03:21 -!- Channel #liferay created Wed Nov 11 15:40:06 2009
03:21 -!- Irssi: Join to #liferay was synced in 5 secs
03:45 < goku_:#liferay> hi, in the struts action override processAction method after calling the  originalStrutsPortletAction.processAction() method how to get the newly created user ID?
04:33 < nicolas_FR:#liferay> hi there
04:49 < nicolas_FR:#liferay> hi there
04:51 < nicolas_FR:#liferay> seems we encounter a problem with L6.1.2 and configuration portlet. We have jquery loaded from Theme (jQuery v1.11.1) and some configuration page with some jquery magic. Fact is, on L6.1.2 GA3 (we were on L5.2.3 before), the configuration page says our jQuery is undefined (not loaded from theme I bet). It occurs before theme loads the jQuery, because if I enter JS console, I can see my jQuery vars... but not at the time the con
05:21 < nicolas_FR:#liferay> So I'm wondering, is there another place to load my javascript library + custom js, if not in theme ?
05:41 < nicolas_FR:#liferay> Javascript loading problem with configuration pages. Should we still load our JS in the theme, or directly (by hook) in the top_js-ext page ?
09:41 < jardineworks_:#liferay> goku_, is you action being called?
09:42 < goku_:#liferay> yea its working and the processAction is gettting called
09:44 < jardineworks_:#liferay> so in your process action method, the first thing you do is call the originalstrutsaction right?
09:44 < goku_:#liferay> jardineworks_, in that method the after  originalStrutsPortletAction.processAction(originalStrutsPortletAction, portletConfig, actionRequest, actionResponse); i think the original action is executed after this ,i am trying to get the newly created userid
09:44 < jardineworks_:#liferay> goku_, show me your action method
09:53 < goku_:#liferay> jardineworks_,http://pastebin.com/i5sdfvE9
09:56 < jardineworks_:#liferay> goku_, ah
09:56 < jardineworks_:#liferay> goku_, I see your problem.
09:56 < jardineworks_:#liferay> hmmm
09:56 < jardineworks_:#liferay> goku_, is it a new user or an existing user that you are working with?
09:59 < jardineworks_:#liferay> goku_, Let's assume for a moment that it's a new user.
10:00 < jardineworks_:#liferay> actually, it doesn't matter.
10:00 < jardineworks_:#liferay> You have the email address right?
10:00 < goku_:#liferay> jardineworks_, yea
10:00 < jardineworks_:#liferay> the originalStrutsAction call will create the user. When you come back from that call, you can do a UserLocalServiceUtil.getUserByEmail...
10:00 < jardineworks_:#liferay> that will give you the user that was just added.
10:01 < goku_:#liferay> jardineworks_, ohk
10:01 < jardineworks_:#liferay> The only thing I am not sure about -- does the originalStrutsACtion actually return to your hook? or does it redirect to another place?
10:01 < goku_:#liferay> jardineworks_, thanks man
10:02 < jardineworks_:#liferay> np
10:03 < jardineworks_:#liferay> these are my favourite puzzles to solve :)
10:04 < goku_:#liferay> jardineworks_, nice  hobby :)
10:08 < jardineworks_:#liferay> goku_, for me it is an important concept to grasp when working with Liferay to be honest. So many of my clients spend some much of their money and time "recreating" functionality when 90% of what they need is already in the portal. One of the strengths of Liferay, I think, is the fact that you can do stuff like what you are doing. Most vendors have 452 "settings" that manipulate the dozen of so permutations they have determin
10:08 < jardineworks_:#liferay> ed to be "what everyone important needs" ... Liferay provides the lego blacks.
10:08 < jardineworks_:#liferay> just one of the many reasons I <3 Liferay
10:09 < jardineworks_:#liferay> and I am always trying to show my clients the real benefits of the platform from this perspective.
10:10 < jardineworks_:#liferay> The only real downside is that hooks are "global" .. but I just use a little trick to allow you to configure then for a "portal instance"
10:11 < goku_:#liferay> jardineworks_, oh ok
10:11 < jardineworks_:#liferay> hold on -- I'll share the code with you
10:13 < goku_:#liferay> jardineworks_, it i will configure that in my setup
10:15 < jardineworks_:#liferay> goku_, what's the package/classname for your custom action?
10:16 < goku_:#liferay> jardineworks_, com.talco.reg.user.field UserFieldStrutsPortletAction
10:17 < jardineworks_:#liferay> ok so, if you use this class... http://pastebin.com/C1WwGXV1
10:18 < jardineworks_:#liferay> then in your UserFieldStrutsPortletAction class ... wrap the process action logic in a conditional that uses the util.
10:18 < jardineworks_:#liferay> and then in your portal-ext
10:18 < jardineworks_:#liferay> com.talco.reg.user.field UserFieldStrutsPortletAction.hook=<companyid>
10:19 < jardineworks_:#liferay> if you create a second instance later, and still have the hook deployed, it's absence from the property setting means that it will not be executed.
10:20 < jardineworks_:#liferay> it doesn't save the overhead of making calls "unecessarily" ... but it does allow you to leave the customized logic set for a particular "company"
10:20 < jardineworks_:#liferay> or portal instance.
10:29 < goku_:#liferay> jardineworks_, ok :)
10:34 < jardineworks_:#liferay> goku_, forgot to mention... you would want this class globally available so you should have it in its own jar in the TOMCAT_HOME/lib/ext
10:34 < jardineworks_:#liferay> I normally create a <client_name>-liferay-commons.jar for my projects for such classes.
10:38 < goku_:#liferay> jardineworks_, do you know why this beanlocator not found error is coming for the service jar which i put into the lib/ext folder
10:41 < jardineworks_:#liferay> goku_, service jar as in a custom jar that resulted from a service builder project?
10:44 < goku_:#liferay> jardineworks_, yes
10:45 < jardineworks_:#liferay> goku_, do you still have the jar as part of your service builder portlet that is deployed?
10:46 < jardineworks_:#liferay> sometimes I have seen this sort of message when there is a conflict. If you put it in the global libs then you should remove it from the plugin lib folders to make sure that there is just one "master" reference.
10:46 < jardineworks_:#liferay> ... and you restarted the server after moving it to /lib/ext right? :)
10:47 < goku_:#liferay> i haven't deployed the service portlet, yea i have restarted it
10:50 < jardineworks_:#liferay> goku_, hmm... can you show me the entire stacktrace?
10:51 < goku_:#liferay> jardineworks_, ok
14:15 < douglascrp:#liferay> hey guys
14:15 < douglascrp:#liferay> this is my first time here
14:15 < jardineworks_:#liferay> welcome
14:15 < douglascrp:#liferay> jardineworks_, thank you
14:15 < douglascrp:#liferay> I'm trying to learn liferay now, and i'm following the service builder tutorial
14:16 < jardineworks_:#liferay> good start -- service builder is what made me fall in love with LR :)
14:16 < jardineworks_:#liferay> initially.
14:16 < douglascrp:#liferay> I've adapted the eventlisting portlet sample to my case, but after I create a register using the form, I got no registers on the database
14:17 < douglascrp:#liferay> everything seems to be working ok, no erros, no alerts, no nothing... only the message saying that the operation is ok
14:17 < douglascrp:#liferay> jardineworks_, really? lol
14:17 < douglascrp:#liferay> why initially? don't you like it anymore?
14:17 < douglascrp:#liferay> I'm an alfresco guy... liferay is all new to me
14:18 < jardineworks_:#liferay> on the contrary ... I just have a million more things that I discovered that make me love it even more than service builder ever did :)
14:18 < douglascrp:#liferay> nice
14:18 < jardineworks_:#liferay> douglascrp, lemme see your portlet.xml file.
14:18 < jardineworks_:#liferay> (use pastie or something)
14:18 < douglascrp:#liferay> I'll have to work a lot with liferay from now, so I hope I can learn enough to work and to be able to help people
14:18 < douglascrp:#liferay> sure
14:19 < douglascrp:#liferay> jardineworks_, may I send my full project to you?
14:19 < douglascrp:#liferay> can you provide me your email in private?
14:20 < jardineworks_:#liferay> sure
14:20 < jardineworks_:#liferay> which version of LR? 6.2 CE I assume?
14:23 < douglascrp:#liferay> jardineworks_, it's should be in your inbox now
14:23 < douglascrp:#liferay> 6.2 CE
14:23 < douglascrp:#liferay> I've sent the project to you... it's a maven project
14:23 < jardineworks_:#liferay> ew
14:23 < douglascrp:#liferay> I'm trying to use which I think is the best combination
14:23 < douglascrp:#liferay> maven + service builder
14:24 < jardineworks_:#liferay> sorry -- maven is not my favourite thing at all
14:24 < douglascrp:#liferay> trying to learn everything on one step
14:24 < douglascrp:#liferay> lol
14:24 < douglascrp:#liferay> really?
14:24 < douglascrp:#liferay> I like it
14:24 < jardineworks_:#liferay> I love maven, the 14% of the time it works.
14:24 < douglascrp:#liferay> lol
14:24 < douglascrp:#liferay> I see
14:24 < jardineworks_:#liferay> maven and Liferay are still pretty raw I think too.
14:24 < douglascrp:#liferay> have you received my email?
14:25 < douglascrp:#liferay> well, I don't know liferay enough to judge it yet
14:25 < douglascrp:#liferay> what do you prefer? ant?
14:25 < jardineworks_:#liferay> I have had a lot of problems with Maven and Liferay... in particular shitty build masters that don't like the fact that Service Builder projects have two modules where one is dependent on the other.
14:25 < jardineworks_:#liferay> ANT is still my favorite. I'm a big fan of simple.
14:25 < jardineworks_:#liferay> anyway.
14:25 < jardineworks_:#liferay> one sec.
14:25 < douglascrp:#liferay> ok
14:28 < douglascrp:#liferay> it seems to me the code is missing a commit
14:28 < douglascrp:#liferay> and as I said before, I'm following the official liferay tutorial
14:29 < douglascrp:#liferay> this project is basically the github project changes to my needs
14:29 < douglascrp:#liferay> all the persistence code was generated with service builder, and then I finished it following the tutorial steps
14:29 < jardineworks_:#liferay> right
14:29 < douglascrp:#liferay> ah, and the problem is at the Projeto entity
14:29 < jardineworks_:#liferay> ok -- first question.
14:30 < douglascrp:#liferay> I haven't tried to implement the other ones
14:30 < douglascrp:#liferay> sure... shoot
14:30 < jardineworks_:#liferay> did the tutorial tell you to add the records this way?
14:30 < douglascrp:#liferay> yes, let me give the link to you
14:30 < douglascrp:#liferay> http://www.liferay.com/documentation/liferay-portal/6.2/development/-/ai/creating-user-interfaces-for-service-bui-liferay-portal-6-2-dev-guide-04-en
14:30 < douglascrp:#liferay> this is the UI part... let me take the portlet code part
14:31 < jardineworks_:#liferay> more of a personal preference than anything I guess, but I prefer to use soemthing more like this...
14:31 < douglascrp:#liferay> http://www.liferay.com/documentation/liferay-portal/6.2/development/-/ai/call-local-services-liferay-portal-6-2-dev-guide-04-en
14:31 < douglascrp:#liferay> those are the pages I'm using
14:32 < jardineworks_:#liferay> 		Projeto projeto = ProjetoLocalServiceUtil.createProjeto(CounterLocalServiceUtil.increment("Projeto.class"));
14:32 < jardineworks_:#liferay> 		projeto.setAno("...");
14:32 < jardineworks_:#liferay> 		...
14:32 < jardineworks_:#liferay> 		projecto = ProjetoLocalServiceUtil.addProjeto(projeto);
14:32 < douglascrp:#liferay> ah, ok... code style, right?
14:33 < jardineworks_:#liferay> just a little more semantic for a reader.. the problem with the other appraoch is readability. I don't know what the 17th parameter which is a "" is supposed to represent ... but projeto.set17thParamater( StringPool.BLANK );  is obvious :)
14:33 < douglascrp:#liferay> parameters are all string fields, not of them is obligatory now
14:34 < douglascrp:#liferay> *none of them
14:34 < jardineworks_:#liferay> fair enough... all the more reason not to use them in your code :)
14:35 < douglascrp:#liferay> but where have you seen this code?
14:35 < jardineworks_:#liferay> the one I showed you?
14:35 < douglascrp:#liferay> that for sure is not a code I touched
14:35 < douglascrp:#liferay> I'm talking about the set17thParameter
14:35 < douglascrp:#liferay> that was automatically created by service builder
14:35 < jardineworks_:#liferay> lol -- that was just a joke...
14:36 < douglascrp:#liferay> ah, ok
14:36 < douglascrp:#liferay> lol
14:36 < douglascrp:#liferay> sorry... English is not my native language
14:36 < jardineworks_:#liferay> I was exaggerating the number of parameters
14:36 < jardineworks_:#liferay> I got that from pojeto ;)
14:36 < jardineworks_:#liferay> I would guess... portugese?
14:36 < jardineworks_:#liferay> or italian?
14:36 < douglascrp:#liferay> yep
14:36 < douglascrp:#liferay> portuguese
14:36 < douglascrp:#liferay> i'm brazilian
14:36 < douglascrp:#liferay> you?
14:37 < jardineworks_:#liferay> ah -- thought maybe. I am in Canada, but my mother is (Spain) spanish so a lot of portugese looks like I should understand it :)
14:37 < douglascrp:#liferay> yes, it is
14:38 < jardineworks_:#liferay> since you are just starting with Liferay I would like to give you one piece of advice.
14:38 < douglascrp:#liferay> sure... I'm all ears
14:38 < jardineworks_:#liferay> Download Liferay's source code, include it in your IDE workspace and READ IT ALWAYS!
14:38 < douglascrp:#liferay> same advice for alfresco
14:38 < jardineworks_:#liferay> I tell all my clients ... you want a standard for doing something in Liferay? do it the way Liferay does it.
14:39 < douglascrp:#liferay> a wise advice
14:39 < douglascrp:#liferay> avoid reinventing the wheel
14:39 < douglascrp:#liferay> I agree with you
14:39 < douglascrp:#liferay> that's why I decided to go with service builder, because all the ads telling liferay is built on it
14:39 < jardineworks_:#liferay> so ... br.com.konsultex.altamira.projeto.portlets.ProjetosListingPortlet --> br.com.konsultex.altamira.projeto.portlet.projetoslisting.ProjectosListingPortlet
14:40 < jardineworks_:#liferay> it is
14:40 < jardineworks_:#liferay> and service builder, even if you don't want to store stuff in the Liferay database, supports writing to external dbs as well. The real benefit is a CONSISTENT model for creating entities, finding them, persisting them, etc.
14:41 < jardineworks_:#liferay> so you and the guy next to you? and the guy you work with in another city? all they need to know is the name of your entity... and they can read them, write them, manage them.
14:41 < douglascrp:#liferay> +1
14:41 < douglascrp:#liferay> jardineworks_> so ... br.com.konsultex.altamira.projeto.portlets.ProjetosListingPortlet --> br.com.konsultex.altamira.projeto.portlet.projetoslisting.ProjectosListingPortlet
14:42 < douglascrp:#liferay> are you suggesting me to rename my package and classes?
14:42 < jardineworks_:#liferay> Liferay will drive you nuts -- but all software does. Once you figure it out.. you'll love it. I promise.
14:42 < jardineworks_:#liferay> the portlet name is fine I think...my preference is something like this...
14:42 < douglascrp:#liferay> got that
14:42 < jardineworks_:#liferay> com.jardineworks.[application name].liferay.portlet.[portletname].PortletNamePortlet
14:43 < douglascrp:#liferay> nice... just a matter of pattern
14:43 < douglascrp:#liferay> it makes things more clear
14:43 < jardineworks_:#liferay> so that I see the application it is for. I see that its a portlet, but that I built it for liferay.
14:43 < jardineworks_:#liferay> totally
14:43 < douglascrp:#liferay> cool
14:43 < jardineworks_:#liferay> most of the time when I code I am thinking more about the guy that is going to take over my work when I quit :)
14:43 < douglascrp:#liferay> you must be a good guys
14:43 < douglascrp:#liferay> guy
14:44 < jardineworks_:#liferay> I guess I have been the guy that picked up the quitters work enough times that I feel bad for that guy hahaa
14:44 < jardineworks_:#liferay> but there is a selfish side too right? new guy joins, your code explains itself.. so you spend less time training
14:44 < jardineworks_:#liferay> and the new guy doesn't walk around telling everyone how shocking your work is
14:44 < douglascrp:#liferay> yes
14:44 < jardineworks_:#liferay> :)
14:45 < douglascrp:#liferay> this page is what I used as a model to implement my portlet code http://www.liferay.com/documentation/liferay-portal/6.2/development/-/ai/call-local-services-liferay-portal-6-2-dev-guide-04-en
14:46 < douglascrp:#liferay> I used hibernate and jpa some years ago, and that's not that different
14:46 < douglascrp:#liferay> but I can't figure out why the object is not being persisted in the database
14:46 < douglascrp:#liferay> there is nothing wrong in the log
14:46 < douglascrp:#liferay> btw, which log files do you look at?
14:46 < douglascrp:#liferay> I'm looking at catalina.out and liferay.log
14:48 < douglascrp:#liferay> I've just tried it again... no database entry
14:48 < douglascrp:#liferay> that's weird
14:50 < jardineworks_:#liferay> I usually tail catalina.out
14:50 < jardineworks_:#liferay> did you set a breakpoint and step through the Impl clasS?
14:50 < jardineworks_:#liferay> no stack trace?
14:51 < douglascrp:#liferay> no, since I'm deploying this to a remote server in a vm
14:51 < douglascrp:#liferay> how can I use log on it?
14:51 < douglascrp:#liferay> any sample
14:51 < douglascrp:#liferay> ?
14:52 < jardineworks_:#liferay> private static final Log _log = LogFactoryUtil.getLog(ProjetoListingPortlet.class);
14:53 < jardineworks_:#liferay> and then _log.info is probably what you want to use
14:53 < jardineworks_:#liferay> the root logger in LR is set to INFO by default I think
14:53 < douglascrp:#liferay> ok, let me try it in order to see if I'm really getting those parameters
15:00 < douglascrp:#liferay> I've put some logs both on portlet and on serviceimpl classes
15:01 < douglascrp:#liferay> jardineworks_, I don't know if you agree with me, but liferay's docs is a mess
15:01 < douglascrp:#liferay> it's really hard to follow it
15:04 < jardineworks_:#liferay> douglascrp, they are -- but much better than they used to be that's for sure. My main issue with the docs, and with most of the "blogs" from "experts" is that the examples are over simplified. Most of the time I only find my answers either from someone who works at Liferay in this channel or by digging through the source code and just "figuring it out"
15:04 < douglascrp:#liferay> look  my logs output
15:05 < douglascrp:#liferay> 19:04:06,338 INFO  [http-bio-8080-exec-70][ProjetosListingPortlet:26] addProject call
15:05 < douglascrp:#liferay> 19:04:06,349 INFO  [http-bio-8080-exec-70][ProjetosListingPortlet:54] _updateProjeto call
15:05 < douglascrp:#liferay> 19:04:06,381 INFO  [http-bio-8080-exec-70][ProjetosListingPortlet:57] projetoId: 0
15:05 < douglascrp:#liferay> 19:04:06,389 INFO  [http-bio-8080-exec-70][ProjetosListingPortlet:61] nomeProjeto: teste 1
15:05 < douglascrp:#liferay> 19:04:06,413 INFO  [http-bio-8080-exec-70][ProjetosListingPortlet:65] ano: 2014
15:05 < douglascrp:#liferay> 19:04:06,430 INFO  [http-bio-8080-exec-70][ProjetoLocalServiceImpl:55] nomeProjeto: teste 1
15:05 < douglascrp:#liferay> 19:04:06,540 INFO  [http-bio-8080-exec-70][ProjetoLocalServiceImpl:62] projetoId: 201
15:05 < douglascrp:#liferay> it's working
15:05 < douglascrp:#liferay> but again, no database entries
15:05 < douglascrp:#liferay> database is empty
15:05 < jardineworks_:#liferay> do you see your table there?
15:06 < douglascrp:#liferay> yes select * from konsultex_Projeto;
15:06 < douglascrp:#liferay> that's the select I'm trying
15:06 < douglascrp:#liferay> and if I say it to describe the table
15:06 < douglascrp:#liferay> describe konsultex_Projeto
15:06 < douglascrp:#liferay>     -> ;
15:06 < douglascrp:#liferay> +--------------------------------+-------------+------+-----+---------+-------+
15:06 < douglascrp:#liferay> | Field                          | Type        | Null | Key | Default | Extra |
15:06 < douglascrp:#liferay> +--------------------------------+-------------+------+-----+---------+-------+
15:06 < douglascrp:#liferay> | projetoId                      | bigint(20)  | NO   | PRI | NULL    |       |
15:06 < douglascrp:#liferay> | proponenteId                   | bigint(20)  | YES  |     | NULL    |       |
15:06 < douglascrp:#liferay> | nomeProjeto                    | varchar(75) | YES  |     | NULL    |       |
15:06 < douglascrp:#liferay> | objeto                         | varchar(75) | YES  |     | NULL    |       |
15:06 < douglascrp:#liferay> | camaraTecnica                  | varchar(75) | YES  |     | NULL    |       |
15:06 < douglascrp:#liferay> | altamiraBeneficiado            | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | medicilandiaBeneficiado        | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | senadorJosePorfirioBeneficiado | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | anapuBeneficiado               | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | pacajaBeneficiado              | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | uruaraBeneficiado              | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | brasilNovoBeneficiado          | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | placasBeneficiado              | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | vitoriaXinguBeneficiado        | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | gurupaBeneficiado              | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | portoMozBeneficiado            | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | comunidadesBeneficiadas        | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | eixoEstrategico                | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | objetivoEspecifico             | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | ano                            | varchar(75) | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | groupId                        | bigint(20)  | YES  | MUL | NULL    |       |
15:07 < douglascrp:#liferay> | companyId                      | bigint(20)  | YES  |     | NULL    |       |
15:07 < douglascrp:#liferay> | userId
15:09 < jardineworks_:#liferay> hmmm
15:09 < jardineworks_:#liferay> can you add an entry manually? ... meaning in SQL?
15:09 < jardineworks_:#liferay> and there are no stacktraces?
15:09 < douglascrp:#liferay> I haven't tried it yet
15:10 < douglascrp:#liferay> sorry?
15:10 < douglascrp:#liferay> stacktraces?
15:10 < douglascrp:#liferay> you mean, exceptions?
15:10 < jardineworks_:#liferay> yeah.. you know all that bar in the log from exceptions
15:10 < jardineworks_:#liferay> barf*
15:10 < douglascrp:#liferay> no... I have no errors
15:10 < douglascrp:#liferay> log is clean
15:12 < douglascrp:#liferay> jardineworks_, about your previous doubt... yes, I can insert a register using sql insert into
15:12 < douglascrp:#liferay> database is ok
15:12 < douglascrp:#liferay> ah, let me see if the register is now listed on the portlet
15:13 < douglascrp:#liferay> jardineworks_, no, it's not listed
15:13 < douglascrp:#liferay> mysql> select projetoId, nomeProjeto, ano from konsultex_Projeto;
15:13 < douglascrp:#liferay> +-----------+-------------+------+
15:13 < douglascrp:#liferay> | projetoId | nomeProjeto | ano  |
15:13 < douglascrp:#liferay> +-----------+-------------+------+
15:13 < douglascrp:#liferay> |         1 | teste 1     | 2014 |
15:13 < douglascrp:#liferay> +-----------+-------------+------+
15:13 < douglascrp:#liferay> 1 row in set (0.00 sec)
15:13 < douglascrp:#liferay> but when I access liferay, it's not being listed there
15:15 < jardineworks_:#liferay> hmm
15:15 < jardineworks_:#liferay> one thing that is interesting...
15:15 < jardineworks_:#liferay> public void addProjeto(ActionRequest request, ActionResponse response)
15:16 < jardineworks_:#liferay> I always thought you had to use an annotation with MVCPortlets... so that it would be @ProcessAction(name="..")
15:16 < jardineworks_:#liferay> wait.
15:16 < jardineworks_:#liferay> where do you add these from
15:16 < jardineworks_:#liferay> ?
15:17 < douglascrp:#liferay> I didn't get that
15:17 < jardineworks_:#liferay> you have <portlet:renderURL var="addProjetoURL"> .... a render URL... but that should be an actionURL really.
15:17 < douglascrp:#liferay> hmmm... I see
15:17 < jardineworks_:#liferay> and then the action method should be annotated.
15:18 < douglascrp:#liferay> do you have any sample?
15:18 < jardineworks_:#liferay> so you would have <portlet:actionURL name="myAction" var="myActionURL"> ... </portlet:actionURL>
15:18 < jardineworks_:#liferay> and then the @ProcessAction(name="myAction") in the portlet class
15:19 < jardineworks_:#liferay> in your view.jsp..
15:19 < jardineworks_:#liferay> change  this ...
15:19 < jardineworks_:#liferay> <aui:button-row>
15:19 < jardineworks_:#liferay> 	<portlet:renderURL var="addProjetoURL">
15:19 < jardineworks_:#liferay> 		<portlet:param name="mvcPath" value="/html/projetoslisting/edit_projeto.jsp" />
15:19 < jardineworks_:#liferay> 		<portlet:param name="redirect" value="<%=redirect%>" />
15:19 < jardineworks_:#liferay> 	</portlet:renderURL>
15:19 < jardineworks_:#liferay> 	<aui:button onClick="<%=addProjetoURL.toString()%>" value="add-projeto" />
15:19 < jardineworks_:#liferay> </aui:button-row>
15:19 < jardineworks_:#liferay> to....
15:20 < jardineworks_:#liferay> <portlet:actionURL name="addProjeto" var="addProjetoURL">
15:20 < jardineworks_:#liferay> 	<portlet:param name="mvcPath" value="/html/projetoslisting/edit_projeto.jsp" />
15:20 < jardineworks_:#liferay> 	<portlet:param name="redirect" value="<%=redirect%>" />
15:20 < jardineworks_:#liferay> </portlet:actionURL>
15:20 < jardineworks_:#liferay> 	
15:20 < jardineworks_:#liferay> <aui:button-row>
15:20 < jardineworks_:#liferay> 	<aui:button onClick="<%=addProjetoURL.toString()%>" value="add-projeto" />
15:20 < jardineworks_:#liferay> </aui:button-row>
15:20 < douglascrp:#liferay> but that is the button used to call the edit form
15:20 < jardineworks_:#liferay> and then in ... oh
15:20 < douglascrp:#liferay> the code to actually save the object is this
15:20 < jardineworks_:#liferay> lol
15:20 < douglascrp:#liferay> <portlet:actionURL name='<%=projeto == null ? "addProjeto" : "updateProjeto"%>' var="editProjetoURL" windowState="normal" />
15:20 < jardineworks_:#liferay> sorry
15:20 < jardineworks_:#liferay> :)
15:20 < douglascrp:#liferay> inside edit_projeto.jsp
15:20 < douglascrp:#liferay> and that's an actionURL
15:21 < jardineworks_:#liferay> ah
15:21 < douglascrp:#liferay> and the code is being called... that based on the logs I created
15:21 < jardineworks_:#liferay> ah there it is -- name='<%=projeto == null ? "addProjeto" : "updateProjeto"%>'
15:21 < douglascrp:#liferay> parametesr are being passed
15:21 < jardineworks_:#liferay> still, I didn't know that you could skip the annotation!
15:21 < jardineworks_:#liferay> must be because the method name matches
15:21 < douglascrp:#liferay> yes, I guess so
15:22 < douglascrp:#liferay> convention over configuration here, right?
15:22 < jardineworks_:#liferay> i guess
15:22 < jardineworks_:#liferay> add and update are both doing the same thing... so isn't that reall addOrUpdate :)
15:23 < jardineworks_:#liferay> bah --- anyway
15:23 < jardineworks_:#liferay> hmm
15:23 < douglascrp:#liferay> :D
15:23 < douglascrp:#liferay> ok, but that's not the problem yet
15:23 < jardineworks_:#liferay> definitely not :)
15:24 < douglascrp:#liferay> I guess it was written that way just to help novice guys to understand it
15:24 < jardineworks_:#liferay> curious... I've never done this for LocalServiceUtil calls...
15:24 < jardineworks_:#liferay> ServiceContext serviceContext = ServiceContextFactory.getInstance(
15:24 < jardineworks_:#liferay> 				Projeto.class.getName(), request);
15:24 < jardineworks_:#liferay> ah
15:25 < jardineworks_:#liferay> I see... I usually just get the userId and the GroupId and the companyId etc is a different manner
15:25 < jardineworks_:#liferay> okm
15:26 < jardineworks_:#liferay> geez -- I dunno, it all looks right. Only thing to do is literally step over and into each line of code to see if an unchecked exception is thrown or something maybe.
15:27 < douglascrp:#liferay> I'm creating some more logs
15:27 < jardineworks_:#liferay> again, the only real difference I see from what you have versus what I normally do is I usually build the model object and pass the object to the Util class in place of all the individual fields.
15:27 < douglascrp:#liferay> I hope that can help me to figure it out
15:27 < jardineworks_:#liferay> but both should be supported.
15:28 < douglascrp:#liferay> considering it's hibernate under the hood, so it should work
15:28 < jardineworks_:#liferay> just odd that its not working and that there is no error being blasted at you.
15:29 < douglascrp:#liferay> yeah, I'm going crazy here because of this
15:29 < douglascrp:#liferay> it makes no sense
15:30 < douglascrp:#liferay> redeploying it
15:41 < douglascrp:#liferay> how hard is it to build a form to create and update the master entity and some detail entities?
15:42 < douglascrp:#liferay> in my case, there is the main project, and children would be some contacts
15:42 < douglascrp:#liferay> my idea is to create everything on the same form, maybe using "tabs" to keep info organized
15:43 < douglascrp:#liferay> there will be a main form, cointaining all the project properties, then those tabs to show the subform for contacts
15:44 < jardineworks_:#liferay> douglascrp, normally you would do that with a "form-navigator"
15:44 < douglascrp:#liferay> cool
15:44 < douglascrp:#liferay> tks
15:44 < douglascrp:#liferay> again
15:44 < jardineworks_:#liferay> it allows you to build something similar to what  you see for "edit user" in the control panel.
15:44 < jardineworks_:#liferay> there is a sample .. lemme grab it for you.
15:45 < jardineworks_:#liferay> https://github.com/liferay/liferay-plugins/tree/master/portlets/sample-form-navigator-portlet
15:45 < douglascrp:#liferay> man... I think you are going to same my project
15:45 < douglascrp:#liferay> lol
15:45 < jardineworks_:#liferay> be aware that all spaces and hypens in a section name get reduced to undersores.
15:46 < douglascrp:#liferay> ok
15:46 < jardineworks_:#liferay> so if you do this-is-my-section .. or "this is my section" then the jsp Liferay will try to load is this_is_my_section.jsp
15:46 < douglascrp:#liferay> got that
15:47 < douglascrp:#liferay> jardineworks_, you can see what I need to create looking at my service.xml file
15:47 < douglascrp:#liferay> project -> contact -> partner ->
15:47 < douglascrp:#liferay> then project -> goals -> activities -> orders
15:47 < douglascrp:#liferay> lots of levels
15:47 < jardineworks_:#liferay> yeah
15:48 < jardineworks_:#liferay> good service builder project :)
15:48 < douglascrp:#liferay> it depends on the way you look at it
15:48 < douglascrp:#liferay> lol
15:48 < douglascrp:#liferay> it's going to be challenging for me
15:48 < douglascrp:#liferay> but I guess i'll learn a lot from it
15:49 < douglascrp:#liferay> jardineworks_, guess what... my project is working now
15:50 < douglascrp:#liferay> the only thing I did was to change the result table
15:50 < douglascrp:#liferay> well, at list it's listing the database register I created manually
15:53 < douglascrp:#liferay> *at least
15:58 < jardineworks_:#liferay> that's a start!
15:58 < jardineworks_:#liferay> ... but not the ideal way to get records :)
15:58 < jardineworks_:#liferay> doesn't really highlight the benefits of service builder so much
16:02 < douglascrp:#liferay> jardineworks_, hmmm... well, now I can say I have a RUD
16:02 < douglascrp:#liferay> the C part is not working
16:02 < douglascrp:#liferay> lol
16:02 < douglascrp:#liferay> that's the only part that needs to be fixed now
16:05 < jardineworks_:#liferay> I can send you an example if you give me a few minutes
16:06 < douglascrp:#liferay> yeah, sure
16:06 < douglascrp:#liferay> but take your time
16:06 < douglascrp:#liferay> I don't want to disturb you
16:13 < jardineworks_:#liferay> sent
16:16 < douglascrp:#liferay> ok.. ts
16:16 < douglascrp:#liferay> tks
16:33 < douglascrp:#liferay> jardineworks_, I saw the annotation you were talking about
16:33 < douglascrp:#liferay> @ProcessAction
16:33 < douglascrp:#liferay> but that's not the problem, since the code is executed
16:34 < douglascrp:#liferay> but it's good to know there are options
16:37 < jardineworks_:#liferay> douglascrp, I think the annotation is really for cases where you want the action name to be different than the method name... like action name "addRecipe" but the method called public void add( ActionRequest ...)
16:37 < jardineworks_:#liferay> that's all I can think of since yours works :)
16:38 < douglascrp:#liferay> I also saw you transfered some of the persistence layer code to the portlet class
16:38 < douglascrp:#liferay> things like setting dates and group
16:39 < douglascrp:#liferay> I'm trying to implement my addProjeto method just link yours
16:47 < douglascrp:#liferay> jardineworks_, yep... your code works
16:47 < douglascrp:#liferay> basically I grab your portlet code and changed my addProjeto method to look just like yours
16:47 < douglascrp:#liferay> and it worked
16:47 < douglascrp:#liferay> thank you so much
16:48 < douglascrp:#liferay> I'm going to finish all my logic using your code as a base line
16:48 < douglascrp:#liferay> I hope to be able to finish everything until Friday... that's my due date for this project
16:50 < douglascrp:#liferay> jardineworks_, I'm going to sleep well today :D
16:56 < jardineworks_:#liferay> no problem
