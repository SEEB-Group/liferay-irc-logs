--- Log opened Thu Feb 18 00:00:04 2016
--- Log opened Thu Feb 18 05:21:06 2016
05:21 -!- Topic for #liferay: Liferay Community Discussion Channel! *THIS CHANNEL IS LOGGED* (Log: http://goo.gl/SMte1N) Plz be patient - timezones matter :)  6.2 CE GA4 RELEASE http://goo.gl/AjubK5   Forum: http://forums.liferay.com Homepage: http://liferay.org User Groups http://goo.gl/WFVtPe Nightly build http://releases.liferay.com/portal/nightly-master/
05:21 -!- Topic set by jhf [~cygnuseck@97-101-250-88.res.bhn.net] [Fri Apr 17 17:33:27 2015]
05:21 [Users #liferay]
05:21 [@ChanServ  ] [ dmarks     ] [ josuebc    ] [ menek0  ] [ rochadt     ] 
05:21 [ bijoo     ] [ Gorith     ] [ kermitt    ] [ modd_   ] [ sol_        ] 
05:21 [ Bryanstein] [ henriquev  ] [ koirikivi  ] [ Naenyn  ] [ Tar-Minyatur] 
05:21 [ cyclo     ] [ jardinworks] [ MagnoBooter] [ plekplek] [ vsingleton  ] 
05:21 -!- Irssi: #liferay: Total of 20 nicks [1 ops, 0 halfops, 0 voices, 19 normal]
05:21 -!- Channel #liferay created Wed Nov 11 15:40:06 2009
05:21 -!- Irssi: Join to #liferay was synced in 6 secs
09:00 < njuneau:#liferay> jardinworks: if you want to have that discussion about build processes, I could make it at 12:00
09:00 < njuneau:#liferay> jardinworks: ;)
09:21 < jardinworks:#liferay> njuneau: my day has just started and it already looks like a train wreck -- but maybe? Just to give some context -- it's about using build servers (like Jenkins, Team City, Bamboo etc) with Service Builder (Maven) projects.
09:22 < jardinworks:#liferay> ... and whether you commit your SB generated code to your source control, or let the build process generated it
09:23 < njuneau:#liferay> jardinworks: We always try to leave everything generated out of source control if (and that's a big if) Maven can generate it automatically as part of the build lifecycle
09:25 < njuneau:#liferay> jardinworks: Regarding SB specifically, that would be on a per-project basis - I'm not a big fan of committing generated interfaces and boilerplate if maven can take care of it. But I can see that creating problems if the Maven Lifecycle doesn't take care of that generation properly
09:26 < njuneau:#liferay> jardinworks: First example that comes to mind is people using an IDE like Eclipse in which some Maven lifecycle phases would be always called at the right time (if ever)
09:26 < njuneau:#liferay> jardinworks: However, with Jenkins, the build lifecycle should be pretty much complete
09:27 < jardinworks:#liferay> njuneau: totally agree. So right now my challenge it this.
09:28 < jardinworks:#liferay> njuneau: my recommendation was, and still is, NOT to commit anything in the portlet-service module, or, from the portlet module, sql, service.properties. Then at build time, have the step in place to generate the SB code before you do a package, install, deploy ...
09:28 < jardinworks:#liferay> njuneau: for SNAPSHOTS this is fine.
09:30 < njuneau:#liferay> jardinworks: Well, I'm not aware of the full context of that project. My first instinct would be to maintain only what we have control of (like the service definition and the implementation) in source control, but it really boils down to how to best accomodate the people or machines who are going to perform the build.
09:31 < jardinworks:#liferay> njuneau: the problem we're having is with an "architect" ... I love "architects" ... from their thrones up on their pedastols with their 1997 university facts .. is saying that we have to be able to build the entire project using just "mvn clean install" because there are 200 java projects and they ALL have to use the exact same build process to make it simple :| ... which is idiotic quite frankly. Why
09:31 < jardinworks:#liferay> introduce a tool like jenkins if everything is being built EXACTLY THE SAME. But fine. We modifeid the <build/> to include plugins for generating the source. In SNAPSHOT this is fine. The problem is that the maven release plugins are unhappy with this solution and it won't work.
09:31 < jardinworks:#liferay> so ... my question to you :)
09:31 < jardinworks:#liferay> in your experience
09:31 < jardinworks:#liferay> .. understanding that all projects and clients are different
09:32 < jardinworks:#liferay> ... is it normal to have build processes that are custom, and include MANY STEPS at time?
09:32 < jardinworks:#liferay> s
09:33 < njuneau:#liferay> jardinworks: Since all projects are pretty unique, I don't think I have ever seen a project build in quite the same way or same steps for wide variety of reasons. We do have a basis that is similar in some ways, but identical? Not necessarily. Not that it's a bad thing if it's properly documented.
09:35 < njuneau:#liferay> jardinworks: For example, test environment provisionning for automated testing may be different from project to project and a simple "mvn clean install", while not impossible to do, would be a bit impractical should we be forced into that one single command
09:36 < jardinworks:#liferay> njuneau: 100% agree. I mean the WHOLE POINT of the build server is to provide a mechanism for a predictable and repeatable set of actions that need to be performed to PRODUCE A BUILD (whether it is a snapshot or a release)
09:36 < jardinworks:#liferay> njuneau: so I am not crazy.
09:37 < njuneau:#liferay> jardinworks: I doubt so. Again, not aware of the full context of your project here, but if there's anything, it's always about compromises :P
09:38 < jardinworks:#liferay> forget my projec.t
09:38 < jardinworks:#liferay> the whole notion that you have 200 distinct Java Applications that all have to follow the exact same build process
09:38 < jardinworks:#liferay> seriosuly?
09:38 < jardinworks:#liferay> someone paid you money to come up with that?
09:39 < njuneau:#liferay> well, it's a long road between having a uniform build process and forcing everybody to use the same single command for the whole process
09:39 < jardinworks:#liferay> totally.
09:39 < jardinworks:#liferay> ok
09:39 < jardinworks:#liferay> so fyi
09:39 < jardinworks:#liferay> because I like you guys :)
09:40 < njuneau:#liferay> heh ;) Personally, outside of any constraints that may be imposed by any third party, I always try to make the build process simple for the developer to reproduce by limiting the number of variable steps
09:40 < jardinworks:#liferay> I have been asked to open "a ticket with Liferay" to ask them how to do it. I tried to explain that this issue is not a "support issue" and that they will tell you to purchase professional services .. and that the PS guys will tell you to create a custom build configuration to meet your needs... but, as usual, what do I know.
09:45 < njuneau:#liferay> I see. Well, if there's anything that's coming up on support I'll keep an eye open - thanks for providing some background information.
09:46 < njuneau:#liferay> And I sincerely hope that you and your colleagues can sort this out - architecture-related are often touchy.
09:46 < njuneau:#liferay> architecture-related issues*
09:48 < hufg:#liferay> helloo hows it hanging
16:53 < rochadt:#liferay> hey all
16:53 < rochadt:#liferay> quick question, has anyone had issues with CKEditor in the latest patch?
16:54 < rochadt:#liferay> we are seeing characters like ï»¿ in the beginning of ckeditor.js
16:54 < rochadt:#liferay> any clues?
16:58 < njuneau:#liferay> rochadt: which patch level? portal-87?
17:03 < rochadt:#liferay> umm sec lemme check, I think just the latest
